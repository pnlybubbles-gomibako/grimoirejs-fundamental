{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e143aa801d0746b5746c","webpack:///./node_modules/grimoirejs/ref/Node/Component.js","webpack:///./src/Material/MaterialFactory.ts","webpack:///./src/Resource/Texture2D.ts","webpack:///./src/Resource/GLRelatedRegistryBase.ts","webpack:///./src/Resource/GLResource.ts","webpack:///./node_modules/grimoirejs/ref/index.js","webpack:///./src/Resource/Viewport.ts","webpack:///./node_modules/grimoirejs-math/ref/Vector3.js","webpack:///./src/Components/TransformComponent.ts","webpack:///./src/Util/HashCalculator.ts","webpack:///./src/Geometry/Geometry.ts","webpack:///./src/Material/UniformResolverRegistry.ts","webpack:///./src/Util/TextureSizeCalculator.ts","webpack:///./src/Components/Texture/TextureContainer.ts","webpack:///./src/Asset/NameResolver.ts","webpack:///./src/Components/BasicComponent.ts","webpack:///./src/Components/LoopManagerComponent.ts","webpack:///./node_modules/grimoirejs-math/ref/Matrix.js","webpack:///./node_modules/grimoirejs-math/ref/Vector4.js","webpack:///./src/Components/SceneComponent.ts","webpack:///./src/Resource/GLExtRequestor.ts","webpack:///./src/Geometry/GeometryFactory.ts","webpack:///./src/Components/MaterialContainerComponent.ts","webpack:///./src/Components/RendererComponent.ts","webpack:///./src/Resource/RenderingTarget/RenderingTargetRegistry.ts","webpack:///./src/Resource/RenderBuffer.ts","webpack:///./src/Resource/RenderingTarget/RenderingBufferResourceRegistry.ts","webpack:///./src/Components/Texture/ResizableResourceUpdator.ts","webpack:///./src/Components/Texture/ResourceResizerComponentBase.ts","webpack:///./src/Components/RenderStage/SingleBufferRenderStageBase.ts","webpack:///./src/Components/Texture/TextureUpdatorComponentBase.ts","webpack:///./src/Asset/CacheResolver.ts","webpack:///./src/Asset/ExternalResourceResolver.ts","webpack:///./src/Asset/ImageResolver.ts","webpack:///./src/Components/AssetLoadingManagerComponent.ts","webpack:///./node_modules/grimoirejs/ref/Base/Namespace.js","webpack:///./node_modules/grimoirejs-math/ref/GLM.js","webpack:///./src/Material/Material.ts","webpack:///./src/Resource/GLUtility.ts","webpack:///./src/Components/MaterialComponent.ts","webpack:///./src/Components/MaterialContainerBase.ts","webpack:///./src/Resource/RenderingTarget/CanvasRenderingTarget.ts","webpack:///./src/Resource/FrameBuffer.ts","webpack:///./src/Components/Texture/RenderBufferUpdator.ts","webpack:///./src/Components/Texture/ConstantSizeResourceResizer.ts","webpack:///./src/Components/Texture/ViewportSizeResourceResizer.ts","webpack:///./src/Util/MeshIndexCalculator.ts","webpack:///./src/Components/RenderStage/RenderSceneComponent.ts","webpack:///./src/Asset/AssetLoader.ts","webpack:///./src/Asset/TextFileResolver.ts","webpack:///./src/Asset/VideoResolver.ts","webpack:///./src/Util/Timer.ts","webpack:///./src/Components/CameraComponent.ts","webpack:///./src/SceneRenderer/RenderQueue.ts","webpack:///./src/SceneRenderer/RenderQueueRegistry.ts","webpack:///./src/Components/CanvasInitializerComponent.ts","webpack:///./src/Shaders/header.glsl","webpack:///./src/Sort/Parser.ts","webpack:///./src/Sort/SortTransformUtility.ts","webpack:///./src/Sort/CommentRemover.ts","webpack:///./src/Sort/ImportResolver.ts","webpack:///./src/Material/Defaults/DefaultStaticImport.ts","webpack:///./src/Sort/NameSemanticsPair.ts","webpack:///./src/Sort/Preferences.ts","webpack:///./src/Sort/TypeToConstant.ts","webpack:///./src/Material/MacroRegistory.ts","webpack:///./src/Material/Defaults/DefaultMacro.ts","webpack:///./src/Material/Technique.ts","webpack:///./src/Material/Pass.ts","webpack:///./node_modules/grimoirejs-math/ref/AABB.js","webpack:///./src/Resource/Buffer.ts","webpack:///./src/Material/GLStateConfigurator.ts","webpack:///./src/Material/Defaults/DefaultDynamicStateResolvers.ts","webpack:///./src/Material/PassProgram.ts","webpack:///./src/Resource/ManagedProgram.ts","webpack:///./src/Resource/Program.ts","webpack:///./src/Resource/ResourceCache.ts","webpack:///./src/Resource/UniformProxy.ts","webpack:///./src/Resource/ManagedShader.ts","webpack:///./src/Resource/Shader.ts","webpack:///./src/Material/ShaderMixer.ts","webpack:///./src/Resource/GLSLPrecisionChecker.ts","webpack:///./src/Material/UniformResolverContainer.ts","webpack:///./src/Resource/Texture.ts","webpack:///./node_modules/grimoirejs-math/ref/Rectangle.js","webpack:///./src/Components/FullscreenComponent.ts","webpack:///./src/Components/GeometryComponent.ts","webpack:///./src/Components/GeometryRegistoryComponent.ts","webpack:///./src/SceneRenderer/DrawPriorty.ts","webpack:///./src/Components/MaterialImporterComponent.ts","webpack:///./src/Components/MeshRendererComponent.ts","webpack:///./src/Components/MouseCameraControlComponent.ts","webpack:///./src/Resource/RenderingTarget/CanvasRegionRenderingTarget.ts","webpack:///./src/Components/RendererManagerComponent.ts","webpack:///./src/Components/RenderingTargetComponent.ts","webpack:///./node_modules/timers-browserify/main.js","webpack:///./src/Resource/RenderingTarget/OffscreenRenderingTarget.ts","webpack:///./src/Components/RenderStage/RenderHitareaComponent.ts","webpack:///./src/Components/RenderStage/RenderStageBase.ts","webpack:///./src/Components/RenderStage/RenderQuadComponent.ts","webpack:///./src/Components/Texture/ColorBufferTextureUpdator.ts","webpack:///./src/Components/Texture/ImageTextureUpdator.ts","webpack:///./src/Components/Texture/VideoTextureUpdator.ts","webpack:///./src/Converters/CanvasSizeConverter.ts","webpack:///./src/Converters/GeometryConverter.ts","webpack:///./src/Converters/MaterialConverter.ts","webpack:///./src/Converters/NodeConverter.ts","webpack:///./src/Converters/PositionConverter.ts","webpack:///./src/Converters/RenderingTargetConverter.ts","webpack:///./src/Converters/TextureConverter.ts","webpack:///./src/Material/TextureReference.ts","webpack:///./src/Converters/ViewportConverter.ts","webpack:///./src/Geometry/DefaultPrimitives.ts","webpack:///./src/Geometry/GeometryUtility.ts","webpack:///./src/Material/Defaults/DefaultMaterial.ts","webpack:///./src/index.ts","webpack:///./node_modules/grimoirejs/ref/Base/EEObject.js","webpack:///./src/Asset/defaultLoader.html","webpack:///./node_modules/grimoirejs/ref/Interface/GrimoireInterface.js","webpack:///./src/Shaders/basic-vert.glsl","webpack:///./src/Shaders/screen-vert.glsl","webpack:///./node_modules/grimoirejs-math/ref/Quaternion.js","webpack:///./src/Components/RenderComponentBase.ts","webpack:///./node_modules/grimoirejs-math/ref/Color4.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/grimoirejs/ref/Node/GomlNode.js","webpack:///./node_modules/grimoirejs/ref/Node/Attribute.js","webpack:///./src/Geometry/MorphGeometry.ts","webpack:///./src/Shaders/Unlit.sort","webpack:///./src/Material/Uniforms/MatricesRegister.ts","webpack:///./src/Material/Uniforms/MiscRegister.ts","webpack:///./node_modules/grimoirejs-math/ref/Vector2.js","webpack:///./src/Material/Uniforms/UserValueRegister.ts","webpack:///./src/nodes.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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AAChC;;;;AACM;;;;AACQ;;;;AACjB;;;;AACV;;;;AACZ;;;;AACc;;;;AACtB;;;;AACc;;;;AACA;;;;AACJ;;;;AACc;;;;AACgB;;;;AACF;;;;AACG;;;;AACR;;;;AACU;;;;AAC1D;;;;AACmB;;;;AACU;;;;AACM;;;;AACc;;;;AACtB;;;;AACoB;;;;AACtB;;;;AACU;;;;AACF;;;;AACZ;;;;AACU;;;;AAC6D;;;;AACZ;;;;AACM;;;;AACc;;;;AAChB;;;;AACnD;;;;AACd;;;;AACE;;;;AACI;;;;AACM;;;;AACR;;;;AACgB;;;;AACA;;;;AACgB;;;;AAC5B;;;;AACA;;;;AACM;;;;AACtB;;;;AACU;;;;AACkB;;;;AACZ;;;;AACA;;;;AACU;;;;AACI;;;;AAG/D;;;;AAGwB;;;;AA+IF;;;;;;AAlJrB,IAAiB,oCAClB;AAAC,IAAc,8BAA4B;;AAIjD,IAAc;AACL;AAC0B;AACI;AACsB;AACtB;AACF;AACQ;AAE1C;AARQ;AASG;AAC4D;AAC5B;AACE;AACsB;AACd;AACJ;AACkB;AACZ;AACN;AACQ;AACU;AACF;AACR;AACY;AAChB;AACJ;AACc;AACA;AACjD;AAC0D;AACN;AACE;AACV;AAExD;AANc;AAO2B;AACjC;AACgE;AACI;AAChB;AACA;AACU;AACQ;AACxB;AACsB;AAChB;AAE5D;AAXU;AAaZ;AAxCa;AAyCF;AAC0C;AACJ;AACA;AACR;AACQ;AACc;AAChB;AAE/C;AATa;AAUJ;AACsC;AAClB;AACc;AACA;AAE3C;AANW;AAOF;AACE;AACoE;AAChC;AACM;AAEnD;AALW;AAMsC;AACV;AACZ;AACc;AACtB;AACc;AACA;AACJ;AACc;AACgB;AACF;AAChD;AAC4C;AACR;AAG/C;AALa;AAlBF;AAwBE;AACJ;AACgB;AACU;AACM;AACc;AACtB;AACoB;AACtB;AACU;AACF;AACZ;AACU;AACnB;AACkE;AACZ;AACM;AACc;AAE1F;AANkB;AAOmB;AACd;AACE;AACI;AACM;AAErC;AAzBW;AA0BG;AAC0B;AACA;AAExC;AAJgB;AAKX;AACgC;AACA;AACM;AACtB;AACU;AACkB;AAEjD;AARO;AASF;AACgC;AACU;AACI;AAGpD;AANQ;AArIO;;AA8If,qBAAwB,wBAAW;AACrC,IAAY,WAAc;AAEpB,OAAO,OAAW;AACX,iBAAa;AAChB,cACP;AAHuB;AAIpB,OAAO,OAAS,YAAM,IAAc;AAE3B,OAAc,cAAI,IAAY,cAE7C;kBAAwB,S;;;;;;AC7QxB,4CAA4C,YAAY;AACxD;;;;;;;ACDA,0CAA0C,YAAY,mBAAmB,kCAAkC,aAAa,oBAAoB,0BAA0B,4BAA4B,qCAAqC,mBAAmB,OAAO,QAAQ,SAAS,UAAU,aAAa,qEAAqE,gBAAgB,sCAAsC,WAAW,cAAc,wCAAwC,WAAW,OAAO,a;;;;;;ACAvf,4CAA4C,YAAY;AACxD;;;;;;;ACDA,6IAA6I,qCAAqC,0BAA0B,0DAA0D,6DAA6D,gFAAgF,oFAAoF,6DAA6D,mCAAmC,2EAA2E,gGAAgG,kBAAkB,YAAY,6BAA6B,oBAAoB,iDAAiD,mDAAmD,mFAAmF,8EAA8E,kGAAkG,yEAAyE,oCAAoC,kEAAkE,oDAAoD,KAAK,W;;;;;;ACAh5C,yCAAyC,0BAA0B,oCAAoC,oCAAoC,4BAA4B,oDAAoD,8EAA8E,2CAA2C,0BAA0B,qCAAqC,kEAAkE,4GAA4G,+EAA+E,0DAA0D,0DAA0D,KAAK,S;;;;;;ACAzwB,4CAA4C,YAAY;AACxD;;;;;;;;;;;;;;ACCc;;;;;;;;;;;;IAA4C;;;;;;;;;;;;;;AACxC,oBAAU,aAEtB,G;;;;;;ACLN,4CAA4C,YAAY;AACxD;;;;;;;ACDA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;ACzLD;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;ACvLtC,4CAA4C,YAAY;AACxD;;;;;;;ACDA,4CAA4C,YAAY;AACxD;;;;;;;;;;;;;;;;ACDkC;;;;;;;;;;;;AAMpB;;;IAAqC;;;AAAnD;;;;;AAEY,cAAmB,sBAA+C;AAEnE,cAAe,kBAAiD;AAEhE,cAAW,cA4EtB;;AAAC;;;;0CA1E6C,WAAmC;AACzE,gBAAc,WAAO,KAAU,UAAY;AACxC,gBAAC,CAAU,UAAE;AACZ,sBAAM,IAAS,MACnB;AAAC;AACD,gBAAY,SAAO,KAAQ,QAAS,SAAc;AAC/C,gBAAC,CAAO,OAAY,YAAE;AACrB,sBAAM,IAAS,MACnB;AAAC;AACE,gBAAK,KAAoB,oBAAY,YAAE;AACtC,sBAAM,IAAS,MACnB;AAAC;AACE,gBAAK,KAAY,gBAAU,MAAE;AACP;AACrB,oBAAoB,iBAAM;AACtB,qBAAC,IAAK,IAAI,GAAG,IAAkB,gBAAO,QAAK,KAAG;AAChC,mCAAK,KACvB;AAAC;AACG,qBAAY,cACpB;AAAM,mBAAI,IAAK,KAAY,YAAO,WAAoB,gBAAQ,QAAE;AAC5D,sBAAM,IAAS,MACnB;AAAC;AACD,gBAAgB,aAAS,OAAc;AACpC,gBAAE,EAAW,sBAA0B,eAAE;AACxC,sBAAM,IAAS,MACnB;AAAC;AACD,gBAAY,SAAa,WAAW,aAAa,WAAmB;AACjD;AACnB,gBAAsB,mBAAG,IAAgB,aAAS;AAC9C,iBAAC,IAAK,KAAI,GAAG,KAAS,QAAK,MAAG;AACd,iCAAG,MAAa,WACpC;AAAC;AACG,iBAAoB,oBAAW;AACzB,wBAAkB;AAChB,0BAAM,KAAU,UAC1B;AAHoC;AAIlC,iBAAgB,gBAAW,aACnC;AAE2B;;;6CAAkB;AACzC,mBAAW,KAAgB,gBAAY;AACvC,mBAAW,KAAoB,oBAAY;AACxC,gBAAO,OAAK,KAAK,KAAiB,iBAAO,WAAO,GAAC;AAC5C,qBAAY,cACpB;AACJ;AAEgB;;;kCAAkB;AAC1B,iBAAY,cAAW;AACvB,iBAAC,IAAS,OAAQ,KAAqB,qBAAC;AACpC,qBAAoB,oBAC5B;AACJ;AAE2B;;;4CAAkB;AACzC,gBAAc,WAAO,KAAU,UAAY;AAC3C,gBAAY,SAAO,KAAQ,QAAS,SAAc;AAClD,gBAAkB,eAAS,OAAc;AACtC,gBAAE,EAAa,wBAA0B,eAAC;AACzC,sBAAM,IAAS,MACnB;AAAC;AACG,iBAAC,IAAK,IAAI,GAAG,IAAe,aAAO,QAAK,KAAE;AAC9B,6BAAG,KAAO,KAAkB,kBAAU,WACtD;AAAC;AACK,mBAAO,OACjB;AAEyB;;;0CAAkB,WAAe;AACtD,gBAAU,SAAO,KAAoB,oBAAW,WAAO,OAAQ;AAC3D,iBAAC,IAAK,IAAI,GAAI,IAAO,KAAY,YAAO,QAAK,KAAE;AACzC,0BAAQ,KAAY,YAAG,KAAO,KAAgB,gBAAW,WAAG,GAAO,OAC7E;AAAC;AACK,mBACV;AACH;;;;;;;;;;;;ACxFD,qCAAqC,QAAQ,mJAAmJ,iCAAiC,uBAAuB,QAAQ,qBAAqB,8BAA8B,0BAA0B,wBAAwB,6BAA6B,8DAA8D,oGAAoG,sEAAsE,iBAAiB,aAAa,GAAG,uBAAuB,6BAA6B,yHAAyH,oBAAoB,mCAAmC,SAAS,iBAAiB,GAAG,G;;;;;;;;;;;;;ACA51B;;;;AAIiB;;;;;;AAE1C,kCAAI,IAAsB,iCAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AAC3H,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAM,KAAU,UAAQ,QAAK,KAC/D;AAAG;;AAEoB,kCAAI,IAAQ,mBAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AAC7G,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAM,KAAU,UAClD;AAAG;;AAEoB,kCAAI,IAAQ,mBAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AAC7G,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAM,KAAU,UAClD;AAAG;;AAEoB,kCAAI,IAAY,uBAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACjH,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAM,KAAO,OAAW,WAAa,aAAK,KAAU,UACtF;AAAG;;AAEoB,kCAAI,IAAO,kBAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AAC5G,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAM,KAAO,OAC/C;AAAG;;AAEoB,kCAAI,IAAa,wBAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AAClH,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAM,KAAO,OAC/C;AAAG;;AAEoB,kCAAI,IAAe,0BAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACpH,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAQ,iBAAQ,QAAK,KAAU,UACjE;AAAG;;AAEoB,kCAAI,IAAc,yBAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACjH,cAAc,cAAQ,QAAK,MAAQ,iBAAQ,QAAK,KAAO,OAC9D;AAAG;;AAEoB,kCAAI,IAAoB,+BAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACzH,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAM,KAAO,OAC/C;AAAG;;AAEoB,kCAAI,IAAmB,8BAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACxH,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAQ,iBAAQ,QAAK,KAAU,UAAO,OAAK,KAC7E;AAAG;;AAEoB,kCAAI,IAA6B,wCAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AAClI,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAQ,iBAAQ,QAAK,KAAU,UAAQ,QAAK,KAC9E;AAAG;;AAEoB,kCAAI,IAAwB,mCAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AAC7H,YAAC,CAAK,KAAW,WAAE;AACf,kBAAc,cAAQ,QAAK,MAAQ,iBAAa;AAEvD;AAAC;AACI,cAAc,cAAQ,QAAK,MAAQ,iBAAU,UAAO,iBAAQ,QAAK,KAAU,UAClF;AAAG;;AAEoB,kCAAI,IAA4B,uCAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACjI,YAAC,CAAK,KAAW,WAAE;AACf,kBAAe,eAAQ,QAAK,MAAQ,iBAAa;AAExD;AAAC;AACI,cAAe,eAAQ,QAAK,MAAQ,iBAAU,UAAO,iBAAQ,QAAK,KAAU,UAAO,OAAK,KAC/F;AAEA;;kBAAoB,K;;;;;;;;;;;;;AC1G8B;;;;AACA;;;;AAGe;;;;AAIA;;;;;;AAE1C,kCAAI,IAAW,sBAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACnH,YAAQ,KAAO,KAAU;AACpB,cAAe,eAAQ,QAAK,MAAa,qBAAG,GAAK,MAAI,GAAI,KAAI,GAAM,OAAI,GAC9E;AAAG;;AAEoB,kCAAI,IAAgB,2BAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACxH,YAAQ,KAAO,KAAU;AACpB,cAAe,eAAQ,QAAK,MAAa,qBAAG,GAAM,OAAI,GAC7D;AAAG;;AAEoB,kCAAI,IAAO,QAAE,UAA2B;AAC7D,QAAU,OAAU,QAAW,WAAQ,WAAS;AAChD,QAAW,UAAK;AACT,YAAQ;AACb,aAAQ;AACC,sBACV;;AACK,WAAC,UAAoB,OAA6B;AACjD,cAAa,aAAQ,QAAK,MAAO,KAAM,QAAW,OAAtB,GACnC;AACF;AAAG;AAEoB,kCAAI,IAAc,eAAE,UAAuB,SAAgB;AAChF,QAAa,UAAU,QAAW,WAAY;AAC3C,QAAC,CAAS,SAAE;AACb,cAAM,IAAS,MACjB;AAAC;AACM,YAAK,KAAsG;AAC5G,WAAC,UAAoB,OAA6B;AACtD,YAAgB,aAAG,CAAC,CAAK,KAAU,UAAS,YAAI,CAAC,CAAK,KAAU,UAAS,SAAO;AAC3E,cAAY,YAAQ,QAAK,MAChC;AACF;AAAG;AAEoB,kCAAI,IAAkB,6BAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACrH,cAAe,eAAQ,QAAK,MAAM,KAAO,OAAU,UAC1D;AAAG;;AAEoB,kCAAI,IAAmB,8BAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACtH,cAAe,eAAQ,QAAK,MAAM,KAAO,OAAU,UAC1D;AAAG;;AAEoB,kCAAI,IAAa,wBAA6B;AAA3B,WAA4B,UAAoB,OAA6B;AACrH,YAAW,QAAO,KAAW,WAAO;AAC/B,cAAe,eAAQ,QAAK,MAAqB,8BAAU,UAClE;AAAG;;AAEoB,kCAAI,IAAiB,kBAAE,UAA2B;AACvE,QAAY,SAAU,QAAW,WAAS,YAAyB;AAC7D,WAAC,UAAoB,OAA6B;AACtD,YAAe,YAAO,KAAoB,oBAAoC;AAC3E,YAAW,WAAE;AACT,kBAAe,eAAQ,QAAK,MAAa,qBAAU,UAAO,OAAQ,QAAG,IAAW,UAAO,OAAQ,QACtG;AAAM,eAAE;AACD,kBAAe,eAAQ,QAAK,MAAS,iBAC5C;AACF;AACF;AAAG;AAEoB,kCAAI,IAAc,eAAE,UAA2B;AAC9D,WAAC,UAAoB,OAA6B;AACtD,YAAe,YAAO,KAAoB,oBAAoC;AAC3E,YAAW,WAAE;AACT,kBAAe,eAAQ,QAAK,MAAa,qBAAU,UAAO,OAAI,IAAE,GAAW,UAAQ,QAAI,IAC9F;AAAM,eAAE;AACD,kBAAe,eAAQ,QAAK,MAAS,iBAC5C;AACF;AACF;AAEA;kBAAoB,K;;;;;;AChFpB,4CAA4C,YAAY;AACxD;;;;;;;;;;;;;;ACDiD;;;;AASgB;;;;;;AACjE,IAAQ,KAAyB;AACjC,IAA2B;AACpB,WAAI;AACH,YACN;AAH4B;AAKP,kCAAI,IAAa,cAAE,UAAuB,SAAY,MAAsB,WAAwB;AACzH,QAAa;AACV,QAAQ,QAAO,OAAE;AACV,mBAAwB,sBAAM,MAAQ,QAAO;AAClD,YAAC,CAAU,UAAE;AACd,kBAAM,IAAU,uDAAsD,QACxE;AACF;AAAM,WAAE;AACE,mBAAwB,sBAAO,OAAQ,QAAO;AACnD,YAAC,CAAU,UAAE;AACd,kBAAM,IAAU,uDAAsD,QACxE;AACF;AAAC;AACK,WAAS,SAAQ,SACzB;AAAG;AAEH,uBAAmC,MAAkB,SAAmB,WAAmB,cAAyF,WAAqF;AACvQ,QAAmB;AAChB,QAAS,SAAE;AACE,yBAAwB,sBACxC;AAAM,WAAE;AACQ,yBAAwB,sBACxC;AAAC;AACa,mBAAM,QAAG,UAA+B,SAAY;AAC5D,aAAY,YAAQ,QAAK;AAClB;AACF,qBAAS,QAAW,WAAa,aAAQ,QAAW,WAAa,aACvE;AAH4B;AAI/B,YAAa,mBAAY,UAAE,GAAG,GAAO;AAC7B,mBAAQ,SAAG,GAAG,GACtB;AAAG,SAFqB,GAEV;AACR;AACI,sBAAE,kBAAoB,OAA6B;AACjD,0BAAM,OAAS,QAAK,MAAM,KAAU,UAAQ,QAAM,OAC5D;AAAC;AACK,oBAEV;AANS;AAOX;AAAC;AAEY,cAAG,GAAM,OAAO,OAAU,UAAG,aAAQ,OAAM,MAAW;AAAvB,WAA6B,MAAa,aAAK,MAAU;;AACxF,cAAG,GAAI,KAAO,OAAU,UAAG,aAAQ,OAAM,MAAW;AAAvB,WAA6B,MAAW,WAAK,MAAU;;AACpF,cAAG,GAAK,MAAO,OAAW,WAAO,iBAAQ,OAAM,MAAW;AAAvB,WAA6B,MAAY,YAAK,MAAU;;AAC3F,cAAG,GAAS,UAAO,OAAW,WAAE,CAAE,GAAI,cAAQ,OAAM,MAAW;AAAvB,WAA6B,MAAe,eAAK,MAAU;;AACnG,cAAG,GAAS,UAAO,OAAW,WAAE,CAAE,GAAG,GAAI,cAAQ,OAAM,MAAW;AAAvB,WAA6B,MAAe,eAAK,MAAU;;AACtG,cAAG,GAAS,UAAO,OAAW,WAAE,CAAE,GAAG,GAAG,GAAI,cAAQ,OAAM,MAAW;AAAvB,WAA6B,MAAe,eAAK,MAAU;;AACzG,cAAG,GAAW,YAAO,OAAW,WAAE,CAAE,GAAI,cAAQ,OAAM,MAAW;AAAvB,WAA6B,MAAe,eAAK,MAAU;;AACrG,cAAG,GAAW,YAAM,MAAU,UAAE,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAI,cAAQ,OAAM,MAAW;AAAvB,WAA6B,MAAmB,mBAAK,MAAU;;AACjJ,cAAG,GAAW,YAAO,OAAW,WAAM,MAAE,UAAM,OAAM,MAAyB,OAAU;AAClG,QAAuB;AACpB,QAAO,OAAE;AACV,YAAa,UAAQ,MAAO;AACzB,YAAQ,QAAO,OAAE;AACX,sBACT;AACF;AAAC;AACE,QAAC,CAAS,SAAE;AACN,kBAAY,oBAAgB,gBAAI,IAAM,MAAQ,QACvD;AAAC;AACI,UAAiB,iBAAK,MAC7B;AAAC,GAAE,UAAE,GAAG,GAAG,GAAO;AACb,QAAE,EAAW,WAAQ,YAAK,KAAO,GAAQ;AAC5C,QAAQ,OAAS;AACd,QAAG,GAAE;AACH,YAAE,EAAmB,mBAAE;AACpB,mBACN;AAAM,eAAE;AACN,gBAAa,UAAI,EAAI,IAAK;AACvB,gBAAQ,QAAO,OAAE;AACd,uBACN;AAAM,mBAAE;AACC,wBAAa,aAAK,KAAM;AAC5B,sBAAS,SAAE,EAAW,WAAQ,SAAQ;AACnC,2BACN;AACF;AACF;AACF;AAAC;AACA,MAAS,SAAE,EAAW,WAAQ,SACjC;AAAG;AAE+D;AAE7C,sBAAO,OAAG,GAAY,cAAG,UAA+B,SAAY;AACvF,QAAa,UAAU,QAAW,WAAQ,YAAa;AACvD,QAAiB,cAAU,QAAW,WAAY;AAClD,QAAkB,eAAgB,cAAe,cAAU,UAAC,CAAE,GAAG,GAAM,KAAC,CAAE,GAAG,GAAM;AAC/E,SAAY,YAAQ,QAAK;AAClB,mBAAW,UAAW,WAAU;AAClC,iBACN;AAH4B;AAIzB;AACI,4BAAY,UAAoB,OAA6B;AAC9D,kBAAc,cAAQ,QAAK,MAAM,KAAU,UAAQ,QAC1D;AAAG,SAFgB,GAEf,UAAoB,OAA6B;AAC9C,kBAAe,eAAQ,QAAK,MAAM,KAAU,UAAQ,QAC3D;AAEJ;AAPS;AAOP;AAEmB,sBAAO,OAAG,GAAY,cAAG,UAA+B,SAAY;AACvF,QAAa,UAAU,QAAW,WAAQ,YAAa;AACvD,QAAiB,cAAU,QAAW,WAAY;AAClD,QAAkB,eAAgB,cAAe,cAAU,UAAC,CAAE,GAAG,GAAG,GAAM,KAAC,CAAE,GAAG,GAAG,GAAM;AACrF,SAAY,YAAQ,QAAK;AAClB,mBAAW,UAAW,WAAU;AAClC,iBACN;AAH4B;AAIzB;AACI,4BAAY,UAAoB,OAA6B;AAC9D,kBAAc,cAAQ,QAAK,MAAM,KAAU,UAAQ,QAC1D;AAAG,SAFgB,GAEf,UAAoB,OAA6B;AAC9C,kBAAe,eAAQ,QAAK,MAAM,KAAU,UAAQ,QAC3D;AAEJ;AAPS;AAQT;kBAAoB,K;;;;;;;;;;;;;AC9Hf;;;;;;AACC;AACQ,oBAAE,CAAoB,qBAAe,eAAuB,uBAAqB,qBAAmB,mBAC/G;AAFK;AAOH;;;;;AACE;AACO,oBAAE,CACb;AAFM;AAOJ;;;;;AACG;AACM,oBAAE,CACb;AAFO;AAML;;;;AACG;AACM,oBAAE,CAAU;AACf;AACG,sBAAE,CAAE,GAAG,GAChB;AAFQ;AAGJ,eACN;AANO;AAWL;;;;;AACC;AACQ,oBAAE,CAAoB,qBAAiB;AAC5C,eACN;AAHK;AAUH;;;;;;;AACK;AACI,oBAAE,CACb;AAFS;AAMP;;;;AACK;AACI,oBAAE,CACb;AAFS;AAOP;;;;;AACI;AACK,oBAAE,CACb;AAFQ;AAON;;;;;AACK;AACI,oBAAE,CACb;AAFS;AAMP;;;;AACc;AACL,oBAAE,CACb;AAFkB;AAQhB;;;;;;AACa;AACJ,oBAAE,CACb;AAFiB;AAOf;;;;;AACY;AACH,oBAAE,CACb;AAFgB;AAQd;;;;;;AACW;AACF,oBAAE,CAAc,eAAkB;AACrC;AACG,sBAEX;AAHU;AAFK;AAUb;;;;;AACU;AACD,oBAAE,CAAoB,qBAAe;AACxC;AACG,sBAGZ;AAJW;AAFI;AAxHF,E;;;;;;;;;;;;;ACA6D;;;;AACrB;;;;AACQ;;;;AACF;;;;AACK;;;;AACX;;;;AAEZ;;;;AAC0C;;;;AAC5B;;;;AACE;;;;AACsB;;;;AACd;;;;AACJ;;;;AACkB;;;;AACZ;;;;AACN;;;;AACkB;;;;AACF;;;;AACR;;;;AACY;;;;AACpB;;;;AACc;;;;AACA;;;;AACE;;;;AACE;;;;AACxB;;;;AAC8B;;;;AACI;;;;AAChB;;;;AACA;;;;AACN;;;;AACM;;;;AACgB;;;;AAC1B;;;;AACE;;;;AACJ;;;;AACA;;;;AACc;;;;AAChB;;;;AAG7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAAoB;AACC,yBAAS;AAAW;;;;;AAChB,iDAAkB,kBAAsD;AACxE,iDAAkB,kBAA4B;AAC9C,iDAAkB,kBAAkD;AACpE,iDAAkB,kBAAoC;AACtD,iDAAkB,kBAAgC;AAClD,iDAAkB,kBAAkD;AACpE,iDAAkB,kBAAsC;AACxD,iDAAkB,kBAAgC;AAClD,iDAAkB,kBAAkD;AACpE,iDAAkB,kBAAgD;AAClE,iDAAkB,kBAAwC;AAC1D,iDAAkB,kBAAoD;AACtE,iDAAkB,kBAA6C;AAC/D,iDAAkB,kBAAgC;AAClD,iDAAkB,kBAA8C;AAChE,iDAAkB,kBAAoC;AACtD,iDAAkB,kBAAsC;AACxD,iDAAkB,kBAA0B;AAC5C,iDAAkB,kBAAyD;AAC3E,iDAAkB,kBAAuC;AACzD,iDAAkB,kBAAkC;AACpD,iDAAkB,kBAAiC;AACnD,iDAAkB,kBAA6C;AAC/D,iDAAkB,kBAA6C;AAC/D,iDAAkB,kBAA6D;AAC/E,iDAAkB,kBAA6D;AAC/E,iDAAkB,kBAA8C;AAChE,iDAAkB,kBAAmC;AAErD,iDAAkB,kBAAoC;AACtD,iDAAkB,kBAAgC;AAClD,iDAAkB,kBAAgC;AAClD,iDAAkB,kBAA8B;AAChD,iDAAkB,kBAAgC;AAClD,iDAAkB,kBAAgC;AAClD,iDAAkB,kBAAwB;AAC1C,iDAAsC;AACtC,iDAAkB,kBAA8C;AAEhE,iDAAa,aAAO,QAAE,CAAoB,qBAAe,eAAuB,uBAAqB,qBAAmB,mBAAiB;AACzI,iDAAa,aAAQ,SAAE,CAAW;AAClC,iDAAa,aAAS,UAAE,CAAe;AACvC,iDAAa,aAAS,UAAE,CAAU,WAAE,EAAU,UAAY,YAAY;AACtE,iDAAa,aAAO,QAAE,CAAoB,qBAAiB,iBAAI,IAAY;AAC3E,iDAAa,aAAW,YAAE,CAAc;AACxC,iDAAa,aAAW,YAAE,CAAc;AACxC,iDAAa,aAAU,WAAE,CAAsB;AAC/C,iDAAa,aAAgB,iBAAE,CAAuB,wBAAI,IAAa;AACvE,iDAAa,aAAgB,iBAAE,CAAuB,wBAAI,IAAa;AACvE,iDAAa,aAAW,YAAE,CAAc;AACxC,iDAAa,aAAkB,mBAAE,CAAsB;AACvD,iDAAa,aAAe,gBAAE,CAA6B;AAC7D,6CACd;AAF6E,+BAEhE;AACG,iDAAa,aAAgB,iBAAE,CAAuB;AACxD,6CACZ;AAFsE;AAGxD,iDAAa,aAAe,gBAAE,CAAc,eAAkB;AACnE,0CACT;AAF8E;AAGhE,iDAAa,aAAc,eAAE,CAAoB,qBAAe;AACrE,0CACT;AAFgF;AAGlE,iDAAa,aAAmB,oBAAE,CAAqB;AACvD,wDAAY;AACd,sDAAY;AACb,qDAAQ,QAE9B;;;;;;;;;;AAAE,E","file":"./register/grimoire-fundamental.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 115);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e143aa801d0746b5746c","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS.Node.Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs/ref/Node/Component.js\n// module id = 0\n// module chunks = 0","import ShaderHeader from \"raw-loader!../Shaders/header.glsl\";\nimport NameResolver from \"../Asset/NameResolver\";\nimport TextFileResolver from \"../Asset/TextFileResolver\";\nimport GLRelatedRegistryBase from \"../Resource/GLRelatedRegistryBase\";\nimport SortParser from \"../Sort/Parser\";\nimport MacroRegistory from \"./MacroRegistory\";\nimport Material from \"./Material\";\n/**\n * Manage materialGenerators for materials.\n * Materials can be instanciated with this instance.\n * Every gl reference can contain 1 of MaterialFactory at most.\n */\nexport default class MaterialFactory extends GLRelatedRegistryBase {\n    public static registryName = \"MaterialFactory\";\n\n    public static defaultShaderHeader: string = ShaderHeader;\n\n    public static materialGeneratorResolver: NameResolver<(factory: MaterialFactory) => Material> = new NameResolver<(factory: MaterialFactory) => Material>();\n\n    /**\n     * Obtain an instance of MaterialFactory from WebGLRenderingContext\n     * @param  {WebGLRenderingContext} gl [description]\n     * @return {MaterialFactory}          [description]\n     */\n    public static get(gl: WebGLRenderingContext): MaterialFactory {\n        return GLRelatedRegistryBase.__get(gl, MaterialFactory);\n    }\n\n    public static addMaterialType(typeName: string, materialGenerator: (factory: MaterialFactory) => Material): void {\n        this.materialGeneratorResolver.register(typeName, Promise.resolve(materialGenerator));\n    }\n\n    /**\n     * Add source of .sort material as specified typename.\n     * @param  {string}        typeName [description]\n     * @param  {string}        source   [description]\n     * @return {Promise<void>}          [description]\n     */\n    public static async addSORTMaterial(typeName: string, source: string): Promise<(factory: MaterialFactory) => Material> {\n        return this.materialGeneratorResolver.register(typeName, (async() => {\n            const techniques = await SortParser.parse(source);\n            return (factory) => {\n                return new Material(factory.gl, techniques);\n            };\n        })());\n    }\n\n    /**\n     * Add source of .sort material from external url as specified typeName.\n     * @param  {string}        typeName [description]\n     * @param  {string}        url      [description]\n     * @return {Promise<void>}          [description]\n     */\n    public static addSORTMaterialFromURL(typeName: string, url: string): Promise<(factory: MaterialFactory) => Material> {\n        return this.materialGeneratorResolver.register(typeName, (async() => {\n            const source = await TextFileResolver.resolve(url);\n            const techniques = await SortParser.parse(source);\n            return (factory) => {\n                return new Material(factory.gl, techniques);\n            };\n        })());\n    }\n\n    public static getMaterialStatus(typeName: string): number{\n        return this.materialGeneratorResolver.getStatus(typeName);\n    }\n\n    public shaderHeader: string = MaterialFactory.defaultShaderHeader;\n\n    public macro: MacroRegistory;\n\n    constructor(public gl: WebGLRenderingContext) {\n        super();\n        this.macro = new MacroRegistory();\n    }\n\n    public async instanciate(typeName: string): Promise<Material> {\n        const generator =  await MaterialFactory.materialGeneratorResolver.get(typeName);\n        return generator(this);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/MaterialFactory.ts","import TextureSizeCalculator from \"../Util/TextureSizeCalculator\";\nimport GLResource from \"./GLResource\";\nimport GLUtility from \"./GLUtility\";\nimport Texture from \"./Texture\";\nimport Viewport from \"./Viewport\";\nexport type ImageUploadConfig = {\n  flipY?: boolean,\n  premultipliedAlpha?: boolean,\n};\n\nexport default class Texture2D extends Texture {\n  public static defaultTextures: Map<WebGLRenderingContext, Texture2D> = new Map<WebGLRenderingContext, Texture2D>();\n  public static maxTextureSize: number;\n\n  public static generateDefaultTexture(gl: WebGLRenderingContext): void {\n    Texture2D.defaultTextures.set(gl, null); // for preventing called this method recursively by instanciating default texture\n    const texture = new Texture2D(gl);\n    texture.update(0, 1, 1, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, new Uint8Array([0, 0, 0, 0]));\n    Texture2D.defaultTextures.set(gl, texture);\n  }\n\n  /**\n   * Width of this texture\n   * @return {number} [description]\n   */\n  public get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Height of this texture\n   * @return {number} [description]\n   */\n  public get height(): number {\n    return this._height;\n  }\n\n  public get viewport(): Viewport {\n    return new Viewport(0, 0, this.width, this.height);\n  }\n\n  public get drawerContext(): CanvasRenderingContext2D {\n    if (!this._drawerContext) {\n      const c = document.createElement(\"canvas\");\n      c.width = this._width;\n      c.height = this.height;\n      this._drawerContext = c.getContext(\"2d\");\n      this.updateDrawerCanvas();\n    }\n    return this._drawerContext;\n  }\n\n  private _drawerContext: CanvasRenderingContext2D;\n\n  private _width: number;\n\n  private _height: number;\n\n  constructor(gl: WebGLRenderingContext) {\n    super(gl, WebGLRenderingContext.TEXTURE_2D);\n    if (!Texture2D.maxTextureSize) {\n      Texture2D.maxTextureSize = gl.getParameter(WebGLRenderingContext.MAX_TEXTURE_SIZE);\n    }\n  }\n\n  public update(level: number, width: number, height: number, border: number, format: number, type: number, pxiels?: ArrayBufferView, config?: ImageUploadConfig): void;\n  public update(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, config?: ImageUploadConfig): void;\n  public update(levelOrImage: any, widthOrConfig: any, height?: number, border?: number, format?: number, type?: number, pixels?: ArrayBufferView, config?: ImageUploadConfig): void {\n    this.gl.bindTexture(WebGLRenderingContext.TEXTURE_2D, this.resourceReference);\n    let uploadConfig: ImageUploadConfig;\n    let image: HTMLImageElement;\n    let width: number;\n    let level: number;\n    if (height === void 0) {\n      uploadConfig = {\n        flipY: true,\n        premultipliedAlpha: false,\n        ...widthOrConfig,\n      };\n      image = levelOrImage as HTMLImageElement;\n    } else {\n      level = levelOrImage as number;\n      width = widthOrConfig as number;\n      uploadConfig = {\n        flipY: true,\n        premultipliedAlpha: false,\n        ...config,\n      };\n    }\n    // tslint:disable:no-parameter-reassignment\n    this.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, uploadConfig.flipY ? 1 : 0);\n    this.gl.pixelStorei(WebGLRenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL, uploadConfig.premultipliedAlpha ? 1 : 0);\n    if (height === void 0) { // something image was specified\n      const resizedResource = this.__ensurePOT(image);\n      this._width = resizedResource.width;\n      this._height = resizedResource.height;\n      this.gl.texImage2D(this.textureType, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, resizedResource.result);\n      this.__type = WebGLRenderingContext.UNSIGNED_BYTE;\n      this.__format = WebGLRenderingContext.RGBA;\n    } else {\n      if (pixels === void 0) {\n        pixels = null;\n      }\n      if (width === 0 || height === 0) { // Edge browser cannot accept a texture with 0 size\n        width = 1;\n        height = 1;\n        format = WebGLRenderingContext.RGB;\n        type = WebGLRenderingContext.UNSIGNED_BYTE;\n        pixels = new Uint8Array([0, 0, 0]);\n      }\n      this._width = width;\n      this._height = height;\n      this.gl.texImage2D(this.textureType, level, format, width, height, border, format, type, pixels);\n      this.__format = format;\n      this.__type = type;\n    }\n    this.__ensureMipmap();\n    this.valid = true;\n  }\n\n  public updateDrawerCanvas(): void {\n    const imageData = this.drawerContext.createImageData(this.width, this.height);\n    const buffer = this.getRawPixels();\n    const bufferSize = this.width * this.height * GLUtility.formatToElementCount(this.format);\n    for (let i = 0; i < bufferSize; i++) {\n      imageData.data[i] = buffer[i];\n    }\n    this.drawerContext.putImageData(imageData, 0, 0);\n    this.drawerContext.setTransform(1, 0, 0, -1, 0, this.height);\n    this.drawerContext.drawImage(this.drawerContext.canvas, 0, 0);\n  }\n\n  public getRawPixels<T extends ArrayBufferView = ArrayBufferView>(x = 0, y = 0, width = this.width, height = this.height): T {\n    return this.__getRawPixels<T>(this.type, this.format, x, y, width, height, WebGLRenderingContext.TEXTURE_2D);\n  }\n\n  public applyDraw(): void {\n    if (this._drawerContext) {\n      this.update(this._drawerContext.canvas);\n    }\n  }\n\n  protected __ensureMipmap(): void {\n    if (this.__needMipmap(this.minFilter)) {\n      this.gl.bindTexture(WebGLRenderingContext.TEXTURE_2D, this.resourceReference);\n      this.gl.generateMipmap(WebGLRenderingContext.TEXTURE_2D);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/Texture2D.ts","import WebGLRenderingContextWithId from \"./WebGLRenderingContextWithId\";\n\n/**\n * Registry of gl related stuff. These instance are singleton for each gl context.\n */\nexport default class GLRelatedRegistryBase {\n\n    private static _glRelatedRegistry: { [id: string]: { [registryName: string]: any } } = {};\n\n    /**\n     * Get specified resource by glContext and constructor of registry\n     * @param gl\n     * @param ctor\n     */\n    protected static __get<T>(gl: WebGLRenderingContext, ctor: { new(gl: WebGLRenderingContext): T, registryName: string }): T {\n        const glWithId = gl as WebGLRenderingContextWithId;\n        if (glWithId.__id__ === void 0) {\n            throw new Error(\"Supplied gl context seems not initialized by Grimoire.js\");\n        }\n        if (GLRelatedRegistryBase._glRelatedRegistry[glWithId.__id__] === void 0) {\n            GLRelatedRegistryBase._glRelatedRegistry[glWithId.__id__] = {};\n        }\n        if (GLRelatedRegistryBase._glRelatedRegistry[glWithId.__id__][ctor.registryName] !== void 0) {\n            return GLRelatedRegistryBase._glRelatedRegistry[glWithId.__id__][ctor.registryName];\n        }\n        const newInstance = new ctor(glWithId);\n        GLRelatedRegistryBase._glRelatedRegistry[glWithId.__id__][ctor.registryName] = newInstance;\n        return newInstance;\n    }\n\n    protected static __getAll<T>(ctor: { new(gl: WebGLRenderingContext): T, registryName: string }): T[] {\n        const result = [] as T[];\n        for (const key in GLRelatedRegistryBase._glRelatedRegistry) {\n            const contextContainer = GLRelatedRegistryBase._glRelatedRegistry[key];\n            if (contextContainer[ctor.registryName] !== void 0) {\n                result.push(contextContainer[ctor.registryName]);\n            }\n        }\n        return result;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/GLRelatedRegistryBase.ts","import GrimoireJS from \"grimoirejs\";\n/**\n * Abstraction of gl resource related class.\n * Provides unique index for each resources, promise for wating resource available and destroyed flag.\n */\nabstract class GLResource<T> {\n  private static _maxIndex = 0;\n\n  public readonly index: number;\n\n  public destroyed = false;\n\n  public validPromise: Promise<GLResource<T>>;\n\n  private _valid: boolean;\n\n  private _metadata: { [key: string]: any } = {};\n\n  private _validResolve: (r: GLResource<T>) => void;\n\n  public get valid(): boolean {\n    return this._valid;\n  }\n\n  public set valid(val: boolean) {\n    if (this._valid === val) {\n      return;\n    }\n    this._valid = val;\n    if (this._valid) {\n      this._validResolve(this);\n    } else {\n      this.validPromise = new Promise((resolve) => {\n        this._validResolve = resolve;\n      });\n    }\n  }\n\n  /**\n   * Metadata containing some useful data for glresource in Debugging.\n   */\n  public get metadata(): { [key: string]: any } {\n    return this._metadata;\n  }\n\n  constructor(public gl: WebGLRenderingContext, public resourceReference: T) {\n    if (!gl) {\n      throw new Error(\"missing WebGLRenderingContext\");\n    }\n    this.index = GLResource._maxIndex++;\n    if (GrimoireJS.debug) {\n      resourceReference[\"__SPECTOR_Metadata\"] = this._metadata;\n      this.setMetadata(\"GL Resource Index\", this.index);\n    }\n    this.valid = false;\n  }\n\n  /**\n   * Provide metadata for key\n   * @param key key of the metadata\n   * @param value value of the metadata\n   */\n  public setMetadata(key: string, value: any): void {\n    this._metadata[key] = value;\n  }\n\n  public destroy(): void {\n    this.destroyed = true;\n  }\n}\n\nexport default GLResource;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/GLResource.ts","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs/ref/index.js\n// module id = 5\n// module chunks = 0","import Rectangle from \"grimoirejs-math/ref/Rectangle\";\nexport default class Viewport extends Rectangle {\n\n  public configure(gl: WebGLRenderingContext, withoutOffset = false): void {\n    if (withoutOffset) {\n      gl.viewport(0, 0, this.Width, this.Height);\n    } else {\n      gl.viewport(this.Left, this.Bottom, this.Width, this.Height);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/Viewport.ts","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS&&window.GrimoireJS.lib.math?window.GrimoireJS.lib.math.Vector3:undefined;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs-math/ref/Vector3.js\n// module id = 7\n// module chunks = 0","import GLM from \"grimoirejs-math/ref/GLM\";\nimport Matrix from \"grimoirejs-math/ref/Matrix\";\nimport Quaternion from \"grimoirejs-math/ref/Quaternion\";\nimport Vector3 from \"grimoirejs-math/ref/Vector3\";\nimport Vector4 from \"grimoirejs-math/ref/Vector4\";\nimport Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport CameraComponent from \"./CameraComponent\";\nconst {mat4, vec3, vec4} = GLM;\n/**\n * シーン中に存在する物体の変形を司るコンポーネント\n * このコンポーネントによって物体の座標や回転量、拡大料などが定義されます。\n * シーン中の全ての物体は必ずこのコンポーネントを含まなければなりません。\n */\nexport default class TransformComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    /**\n     * この物体の座標\n     */\n    position: {\n      converter: \"Vector3\",\n      default: [0, 0, 0],\n    },\n    /**\n     * この物体の回転量\n     */\n    rotation: {\n      converter: \"Rotation3\",\n      default: [0, 0, 0, 1],\n    },\n    /**\n     * この物体の拡大率\n     */\n    scale: {\n      converter: \"Vector3\",\n      default: [1, 1, 1],\n    },\n  };\n  /**\n   * Source vector to be multiplied with global transform to calculate forward direction of attached object.\n   */\n  private static _forwardBase: Vector4 = new Vector4(0, 0, -1, 0);\n\n  /**\n   * Source vector to be multiplied with global transform to calculate up direction of attached object.\n   */\n  private static _upBase: Vector4 = new Vector4(0, 1, 0, 0);\n\n  /**\n   * Source vector to be multiplied with global transform to calculate right direction of attached object.\n   */\n  private static _rightBase: Vector4 = new Vector4(1, 0, 0, 0);\n\n  /**\n   * Local transform matrix representing scaling,rotation and translation of attached object.\n   * @return {[type]} [description]\n   */\n  public localTransform: Matrix = new Matrix();\n\n  public scale: Vector3;\n  public position: Vector3;\n  public rotation: Quaternion;\n\n  /**\n   * The children transform should be notified when this transform was updated.\n   * @type {TransformComponent[]}\n   */\n  private _children: TransformComponent[] = [];\n\n  /**\n   * The reference to parent TransformComponent.\n   * When this object is root object of contained scene, this value should be null.\n   * @type {TransformComponent}\n   */\n  private _parentTransform: TransformComponent;\n\n  /**\n   * Calculation cache to\n   * @return {[type]} [description]\n   */\n  private _cachePVM: Matrix = new Matrix();\n\n  private _cacheVM: Matrix = new Matrix();\n\n  /**\n   * Cache of forward direction of this object\n   */\n  private _forward: Vector3 = new Vector3([0, 0, -1, 0]);\n\n  /**\n   * Cache of up direction of this object.\n   */\n  private _up: Vector3 = new Vector3([0, 1, 0, 0]);\n\n  /**\n   * Cache of right direction of this object.\n   */\n  private _right: Vector3 = new Vector3([1, 0, 0, 0]);\n\n  private _globalPosition: Vector3 = new Vector3([0, 0, 0]);\n\n  private _globalScale: Vector3 = new Vector3([1, 1, 1]);\n\n  private _matrixTransformMode = false;\n\n  private _updatedTransform = true;\n\n  private _globalTransform: Matrix = new Matrix();\n\n  private _globalTransformInverse: Matrix;\n\n  /**\n   * Global transform that consider parent transform and local transform\n   * @return {[type]} [description]\n   */\n  public get globalTransform(): Matrix {\n    this._updateTransform();\n    return this._globalTransform;\n  }\n\n  public get globalTransformInverse(): Matrix {\n    if (!this._globalTransformInverse) {\n      this._globalTransformInverse = Matrix.inverse(this.globalTransform);\n    }else {\n      this._updateTransform();\n    }\n    return this._globalTransformInverse;\n  }\n\n  public get globalPosition(): Vector3 {\n    this._updateTransform();\n    return this._globalPosition;\n  }\n\n  public get globalScale(): Vector3 {\n    this._updateTransform();\n    return this._globalScale;\n  }\n\n  public get forward(): Vector3 {\n    this._updateTransform();\n    return this._forward;\n  }\n\n  public get up(): Vector3 {\n    this._updateTransform();\n    return this._up;\n  }\n\n  public get right(): Vector3 {\n    this._updateTransform();\n    return this._right;\n  }\n\n  public calcPVM(camera: CameraComponent): Matrix {\n    mat4.mul(this._cachePVM.rawElements, camera.ProjectionViewMatrix.rawElements, this.globalTransform.rawElements);\n    return this._cachePVM;\n  }\n\n  public calcVM(camera: CameraComponent): Matrix {\n    mat4.mul(this._cacheVM.rawElements, camera.ViewMatrix.rawElements, this.globalTransform.rawElements);\n    return this._cacheVM;\n  }\n\n  public $awake(): void {\n    // register observers\n    this.getAttributeRaw(\"position\").watch((v) => {\n      this.notifyUpdateTransform();\n    });\n    this.getAttributeRaw(\"rotation\").watch((v) => {\n      this.notifyUpdateTransform();\n    });\n    this.getAttributeRaw(\"scale\").watch((v) => {\n      this.notifyUpdateTransform();\n    });\n    // assign attribute values to field\n    this.__bindAttributes();\n  }\n\n  public $mount(): void {\n    this._parentTransform = this.node.parent.getComponent(TransformComponent);\n    if (this._parentTransform) {\n      this._parentTransform._children.push(this);\n    }\n    this._updateTransform();\n  }\n\n  public $unmount(): void {\n    if (this._parentTransform) {\n      this._parentTransform._children.splice(this._parentTransform._children.indexOf(this), 1);\n      this._parentTransform = null;\n    }\n  }\n\n  public notifyUpdateTransform(): void {\n    if (!this._updatedTransform) {\n      this._updatedTransform = true;\n      this._children.forEach(c => c.notifyUpdateTransform());\n    }\n  }\n\n  public applyMatrix(mat: Matrix): void {\n    this.setAttribute(\"scale\",  mat.getScaling());\n    this.setAttribute(\"rotation\", mat.getRotation());\n    this.setAttribute(\"position\", mat.getTranslation());\n  }\n\n  private _updateTransform(noDirectionalUpdate?: boolean): void {\n    if (!this._updatedTransform) {\n      return;\n    }\n    this._updatedTransform = false;\n    mat4.fromRotationTranslationScale(this.localTransform.rawElements, this.rotation.rawElements, this.position.rawElements, this.scale.rawElements);\n    this._updateGlobalTransform(noDirectionalUpdate);\n  }\n\n  /**\n   * Update global transoform.\n   */\n  private _updateGlobalTransform(noDirectionalUpdate?: boolean): void {\n    if (!this._parentTransform) {\n      mat4.copy(this._globalTransform.rawElements, this.localTransform.rawElements);\n    } else {\n      mat4.mul(this._globalTransform.rawElements, this._parentTransform.globalTransform.rawElements, this.localTransform.rawElements);\n    }\n    if (this._globalTransformInverse) { // Once globalTransformInverse was requested from the other class, this will be updated after that frame\n      mat4.invert(this._globalTransformInverse.rawElements, this._globalTransform.rawElements);\n    }\n    if (!noDirectionalUpdate) {\n      this._updateDirections();\n    }\n    this._updateGlobalProperty();\n    this.node.emit(\"transformUpdated\", this);\n  }\n\n  private _updateDirections(): void {\n    vec4.transformMat4(this._forward.rawElements, TransformComponent._forwardBase.rawElements, this.globalTransform.rawElements);\n    vec4.transformMat4(this._up.rawElements, TransformComponent._upBase.rawElements, this.globalTransform.rawElements);\n    vec4.transformMat4(this._right.rawElements, TransformComponent._rightBase.rawElements, this.globalTransform.rawElements);\n  }\n\n  private _updateGlobalProperty(): void {\n    if (!this._parentTransform) {\n      vec3.copy(this._globalPosition.rawElements, this.position.rawElements);\n      vec3.copy(this._globalScale.rawElements, this.scale.rawElements);\n    } else {\n      vec3.transformMat4(this._globalPosition.rawElements, this.position.rawElements, this._parentTransform.globalTransform.rawElements);\n      vec3.transformMat4(this._globalScale.rawElements, this.scale.rawElements, this._parentTransform.globalTransform.rawElements); // TODO buggy\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/TransformComponent.ts","class HashCalculator {\n  public static calcHash(source: string): number {\n    let hash = 0;\n    if (source.length === 0) {\n      return hash;\n    }\n    for (let i = 0; i < source.length; i++) {\n      const char = source.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n  }\n}\n\nexport default HashCalculator;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Util/HashCalculator.ts","import AABB from \"grimoirejs-math/ref/AABB\";\nimport Vector3 from \"grimoirejs-math/ref/Vector3\";\nimport Buffer from \"../Resource/Buffer\";\nimport IGLInstancedArrayInterface from \"../Resource/GLExt/IGLInstancedArrayInterface\";\nimport GLExtRequestor from \"../Resource/GLExtRequestor\";\nimport Program from \"../Resource/Program\";\nimport HashCalculator from \"../Util/HashCalculator\";\nimport IndexBufferInfo from \"./IndexBufferInfo\";\nimport VertexBufferAccessor from \"./VertexBufferAccessor\";\nexport interface GeometryVertexBufferAccessor extends VertexBufferAccessor {\n    bufferIndex: number;\n}\n/**\n * The geometry class for managing buffer resource\n */\nexport default class Geometry {\n\n    private static _lastGeometry: Map<WebGLRenderingContext, Geometry> = new Map<WebGLRenderingContext, Geometry>();\n\n    /**\n     * Hash calculator of accessors map.\n     * If this value was same with the other geometry, the 2 geometries have same accessors.\n     * 'Same' DOES NOT mean that these geometries have a buffers containing same elements.\n     * But, if there was a accessor named 'A' in one of them, the other one should exist.\n     */\n    public get accessorHash(): number {\n      return this._accessorHashCache;\n    }\n    /**\n     * Vertex buffer\n     * @type {Buffer[]}\n     */\n    public buffers: Buffer[] = [];\n\n    public indices: { [geometryType: string]: IndexBufferInfo } = {};\n\n    public accessors: { [semantics: string]: GeometryVertexBufferAccessor } = {};\n\n    public aabb: AABB = new AABB([Vector3.Zero]);\n\n    private instanciator: IGLInstancedArrayInterface;\n\n    private _accessorHashCache = 0;\n\n    /**\n     * bind a vertex buffer to specified attribute variable.\n     * @param  {Geometry} geometry      [description]\n     * @param  {Program}  program       [description]\n     * @param  {string}   attributeName [description]\n     * @param  {string}   semantics    [description]\n     * @return {boolean}                [description]\n     */\n    public static bindBufferToAttribute(geometry: Geometry, program: Program, attributeName: string, semantics: string): boolean {\n        const index = program.findAttributeLocation(attributeName);\n        if (index < 0) {\n            return false;\n        }\n        const accessors = geometry.accessors[semantics];\n        if (!accessors) { // when the accessor was not existing\n            throw new Error(`Specified buffer \"${semantics} was not found on this geometry while attempt to bind \"${attributeName}\" of attribute variables.\\n\n      All of the vertex buffer available on this geometry is ${Object.keys(geometry.accessors)}\"`);\n        }\n        const buffer = geometry.buffers[accessors.bufferIndex];\n        buffer.bind();\n        program.gl.vertexAttribPointer(index, accessors.size, accessors.type, accessors.normalized, accessors.stride, accessors.offset);\n        if (accessors.instancingDivisor > 0) {\n            geometry.instanciator.vertexAttribDivisorANGLE(index, accessors.instancingDivisor);\n        }\n        return true;\n    }\n\n    public static drawWithCurrentVertexBuffer(geometry: Geometry, indexName: string, count: number = Number.MAX_VALUE, offset = 0): void {\n        const targetIndex = geometry.indices[indexName];\n        if (targetIndex === void 0) {\n            throw new Error(`Specified index buffer \"${indexName}\" was not found on this geometry.All of the index buffer available on this geometry is \"${Object.keys(geometry.indices)}\"`);\n        }\n        targetIndex.index.bind();\n        if (targetIndex.instanceCount > 0) {\n            geometry.instanciator.drawElementsInstancedANGLE(targetIndex.topology, Math.min(targetIndex.count, count), targetIndex.type, Math.min(offset * targetIndex.byteSize + targetIndex.byteOffset, targetIndex.byteOffset + (targetIndex.count - 1) * targetIndex.byteSize), targetIndex.instanceCount);\n        } else {\n            targetIndex.index.gl.drawElements(targetIndex.topology, Math.min(targetIndex.count, count), targetIndex.type, Math.min(offset * targetIndex.byteSize + targetIndex.byteOffset, targetIndex.byteOffset + (targetIndex.count - 1) * targetIndex.byteSize));\n        }\n    }\n\n    constructor(public gl: WebGLRenderingContext) {\n        GLExtRequestor.request(\"ANGLE_instanced_arrays\", true);\n        this.instanciator = GLExtRequestor.get(gl).extensions[\"ANGLE_instanced_arrays\"];\n    }\n\n    public addAttributes(buffer: number[] | BufferSource, accessors: { [semantcis: string]: VertexBufferAccessor }, usage?: number): void;\n    public addAttributes(buffer: number[] | BufferSource | Buffer, accessors: { [semantics: string]: VertexBufferAccessor }): void;\n    public addAttributes(buffer: Buffer | number[] | BufferSource, accessors: { [semantics: string]: VertexBufferAccessor }, usage: number = WebGLRenderingContext.STATIC_DRAW): void {\n        const index = this.buffers.length;\n        let keepBuffer = false;\n        for (const semantic in accessors) {\n            const accessor = accessors[semantic] as GeometryVertexBufferAccessor;\n            accessor.bufferIndex = index;\n            if (accessor.size === void 0) {\n                throw new Error(`Accessor specified with the semantics \"${semantic}\" is not containing size as paranmeter.`);\n            }\n            if (accessor.type === void 0) {\n                accessor.type = WebGLRenderingContext.FLOAT;\n            }\n            if (accessor.stride === void 0) {\n                accessor.stride = accessor.size * this._attribTypeToByteSize(accessor.type);\n            }\n            if (accessor.offset === void 0) {\n                accessor.offset = 0;\n            }\n            if (accessor.normalized === void 0) {\n                accessor.normalized = false;\n            }\n            if (accessor.keepOnBuffer === void 0) {\n              // If target semantic was named 'POSITION', default option for keeping buffer is true.\n              accessor.keepOnBuffer = semantic === \"POSITION\";\n            }\n            keepBuffer = keepBuffer || !!accessor.keepOnBuffer;\n            this.accessors[semantic] = accessor;\n        }\n        buffer = this._ensureToBeVertexBuffer(buffer, usage, keepBuffer);\n        this.buffers.push(buffer);\n        this._recalculateAccsessorHash();\n    }\n\n    /**\n     * add new index buffer to this geometry.\n     * @param {string}                       indexName [description]\n     * @param {Buffer|number[]|BufferSource} buffer    [description]\n     * @param {number                    =         WebGLRenderingContext.TRIANGLES} topology [description]\n     * @param {number                    =         0}                               offset   [description]\n     * @param {number                    =         null}                            count    [description]\n     * @param {number                    =         0}                               type     [description]\n     */\n    public addIndex(indexName: string, instanceCount: number, buffer: Buffer | number[] | BufferSource, topology?: number, offset?: number, count?: number, type?: number): void;\n    public addIndex(indexName: string, buffer: Buffer | number[] | BufferSource, topology?: number, offset?: number, count?: number, type?: number): void;\n    public addIndex(indexName: string, bufferOrInstanceCount: Buffer | number[] | BufferSource | number, bufferOrTopology: Buffer | number[] | BufferSource | number, offsetOrTopology: number, countOrOffset: number = null, typeOrCount = 0, type?: number): void {\n        let buffer: Buffer | number[] | BufferSource;\n        let topology: number;\n        let offset: number;\n        let count: number;\n        let instanceCount: number;\n        if (typeof bufferOrInstanceCount === \"number\") { // instanced\n            instanceCount = bufferOrInstanceCount;\n            buffer = bufferOrTopology as Buffer | number[] | BufferSource;\n            topology = offsetOrTopology;\n            offset = countOrOffset;\n            count = typeOrCount;\n            if (!type) {\n                type = 0;\n            }\n            if (typeof offset !== \"number\") {\n                offset = 0;\n            }\n            if (typeof topology !== \"number\") {\n                topology = WebGLRenderingContext.TRIANGLES;\n            }\n        } else {\n            buffer = bufferOrInstanceCount;\n            topology = bufferOrTopology as number;\n            offset = offsetOrTopology;\n            count = countOrOffset;\n            type = typeOrCount;\n            if (typeof topology !== \"number\") {\n                topology = WebGLRenderingContext.TRIANGLES;\n            }\n            if (typeof offset !== \"number\"){\n                offset = 0;\n            }\n        }\n        if (!count) {\n            if ((buffer instanceof Buffer || buffer instanceof ArrayBuffer || buffer instanceof DataView)) {\n                throw new Error(\"The argument 'count' is necessary if you specified buffer with an instance of Buffer or ArrayBuffer\");\n            } else {\n                count = buffer[\"length\"];\n            }\n        }\n        if (type === 0) {\n            type = this._indexTypeFromCount(count);\n        }\n        buffer = this._ensureToBeIndexBuffer(buffer, type);\n        this.indices[indexName] = {\n            byteOffset: offset,\n            byteSize: this._indexTypeToByteSize(type),\n            type,\n            topology,\n            count,\n            index: buffer,\n            instanceCount,\n        };\n    }\n\n    public drawByDefault(indexName: string, attribNames: string[], program: Program, count = Number.MAX_VALUE, offset = 0): void {\n        attribNames.forEach(name => {\n            Geometry.bindBufferToAttribute(this, program, name, name);\n        });\n        Geometry.drawWithCurrentVertexBuffer(this, indexName, count, offset);\n    }\n\n    public clone(): Geometry {\n        const geometry = new Geometry(this.gl);\n        geometry.buffers = [].concat(this.buffers);\n        geometry.accessors = {...this.accessors};\n        geometry.indices = {...this.indices};\n        geometry.aabb = new AABB([this.aabb.pointLBF, this.aabb.pointRTN]);\n        return geometry;\n    }\n\n    /**\n     * Make sure buffer sources converted into Buffer\n     * @param  {Buffer|BufferSource|number[]} buffer [description]\n     * @return {Buffer}                              [description]\n     */\n    private _ensureToBeVertexBuffer(buffer: Buffer | BufferSource | number[], usage: number, keepBuffer: boolean): Buffer {\n        if (!(buffer instanceof Buffer)) {\n            let bufferSource = buffer;\n            if (Array.isArray(bufferSource)) {\n                bufferSource = new Float32Array(bufferSource);\n            }\n            buffer = new Buffer(this.gl, WebGLRenderingContext.ARRAY_BUFFER, usage);\n            buffer.keepSource = keepBuffer;\n            buffer.update(bufferSource);\n        }\n        return buffer;\n    }\n\n    /**\n     * Make sure buffer sources converted into Buffer\n     * @param  {Buffer|BufferSource|number[]} buffer [description]\n     * @return {Buffer}                              [description]\n     */\n    private _ensureToBeIndexBuffer(buffer: Buffer | BufferSource | number[], type: number): Buffer {\n        if (!(buffer instanceof Buffer)) {\n            let bufferSource = buffer;\n            if (Array.isArray(bufferSource)) {\n                bufferSource = new (this._indexTypeToArrayConstructor(type))(bufferSource);\n            }\n            buffer = new Buffer(this.gl, WebGLRenderingContext.ELEMENT_ARRAY_BUFFER, WebGLRenderingContext.STATIC_DRAW);\n            buffer.update(bufferSource);\n        } else {\n            if (buffer.target !== WebGLRenderingContext.ELEMENT_ARRAY_BUFFER) {\n                throw new Error(\"The usage of buffer specified as index buffer is not ELEMENT_ARRAY_BUFFER\");\n            }\n        }\n        return buffer;\n    }\n\n    private _indexTypeFromCount(count: number): number {\n        if (count < 256) {\n            return WebGLRenderingContext.UNSIGNED_BYTE;\n        } else if (count < 65536) {\n            return WebGLRenderingContext.UNSIGNED_SHORT;\n        } else if (count < 4294967296) {\n            return WebGLRenderingContext.UNSIGNED_INT;\n        } else {\n            throw new Error(\"Index count exceeds 4,294,967,296. WebGL can not handle such a big index buffer\");\n        }\n    }\n\n    private _indexTypeToArrayConstructor(type: number): (new (arr: number[]) => ArrayBufferView) {\n        switch (type) {\n            case WebGLRenderingContext.UNSIGNED_BYTE:\n                return Uint8Array;\n            case WebGLRenderingContext.UNSIGNED_SHORT:\n                return Uint16Array;\n            case WebGLRenderingContext.UNSIGNED_INT:\n                return Uint32Array;\n            default:\n                throw new Error(\"Unsupported index type\");\n        }\n    }\n\n    private _indexTypeToByteSize(type: number): number {\n        switch (type) {\n            case WebGLRenderingContext.UNSIGNED_BYTE:\n                return 1;\n            case WebGLRenderingContext.UNSIGNED_SHORT:\n                return 2;\n            case WebGLRenderingContext.UNSIGNED_INT:\n                return 4;\n            default:\n                throw new Error(\"Unsupported index type\");\n        }\n    }\n\n    private _attribTypeToByteSize(type: number): number {\n        switch (type) {\n            case WebGLRenderingContext.FLOAT:\n            case WebGLRenderingContext.UNSIGNED_INT:\n                return 4;\n            case WebGLRenderingContext.UNSIGNED_SHORT:\n                return 2;\n            case WebGLRenderingContext.UNSIGNED_BYTE:\n                return 1;\n            default:\n                throw new Error(`Unsupported attribute variable type \"${type}\"`);\n        }\n    }\n\n    private _recalculateAccsessorHash(): void {\n      let hashSource = \"\";\n      for (const key in this.accessors) {\n        hashSource += key + \"|\";\n      }\n      this._accessorHashCache = HashCalculator.calcHash(hashSource);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Geometry/Geometry.ts","import UniformProxy from \"../Resource/UniformProxy\";\nimport IMaterialArgument from \"./IMaterialArgument\";\nimport Material from \"./Material\";\nimport Pass from \"./Pass\";\nimport PassProgram from \"./PassProgram\";\nimport IPassRecipe from \"./Schema/IPassRecipe\";\nimport IVariableInfo from \"./Schema/IVariableInfo\";\nimport Technique from \"./Technique\";\nimport UniformResolverContainer from \"./UniformResolverContainer\";\n\nexport type IUniformRegisterOnRegister = (proxy: UniformProxy, args: IMaterialArgument) => void;\n\nexport type IUniformRegisterOnDispose = () => void;\n\nexport type IUniformRegisterOnUpdate = (passProgram: PassProgram, newValue: any, oldValue: any) => void;\n\nexport type IUniformRegisterer = (variableInfo: IVariableInfo, pass: Pass, technique: Technique, material: Material) => IUniformRegisterOnRegister | {\n    register: IUniformRegisterOnRegister,\n    dispose?: IUniformRegisterOnDispose,\n    update?: IUniformRegisterOnUpdate,\n  };\n\nexport class UniformResolverRegistry {\n\n  private _generators: { [semantics: string]: IUniformRegisterer } = {};\n\n  public add(semantic: string, generator: IUniformRegisterer): void {\n    if (typeof generator !== \"function\") {\n      throw new Error(\"secound argument of add must be function\");\n    }\n    this._generators[semantic.toUpperCase()] = generator;\n  }\n\n  public generateRegisterers(pass: Pass, passInfo: IPassRecipe): UniformResolverContainer {\n    const registerers: IUniformRegisterOnRegister[] = [], disposers: IUniformRegisterOnDispose[] = [], updators: { [variableName: string]: IUniformRegisterOnUpdate } = {};\n    for (const key in passInfo.uniforms) {\n      const valueInfo = passInfo.uniforms[key];\n      const semantic = valueInfo.semantic;\n      const registeredGenerator = this._generators[semantic];\n      if (!registeredGenerator) {\n        throw new Error(`There was no suitable registerer for specified semantic ${semantic}`);\n      }\n      const registerer = registeredGenerator(valueInfo, pass, pass.technique, pass.material);\n      if (typeof registerer === \"function\") {\n        registerers.push(registerer);\n      } else {\n        registerers.push(registerer.register);\n        if (registerer.dispose) {\n          disposers.push(registerer.dispose);\n        }\n        if (registerer.update) {\n          updators[key] = registerer.update;\n        }\n      }\n    }\n    return new UniformResolverContainer(registerers, disposers, updators);\n  }\n}\n\nexport default new UniformResolverRegistry();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/UniformResolverRegistry.ts","import Texture2D from \"../Resource/Texture2D\";\n\nexport default class TextureSizeCalculator {\n  public static getPow2Size(width: number, height: number): { width: number, height: number } {\n    const nw = Math.pow(2, Math.ceil(Math.log2(width))); // largest 2^n integer that does not exceed s\n    const nh = Math.pow(2, Math.ceil(Math.log2(height))); // largest 2^n integer that does not exceed s\n    return {\n      width: Math.max(1, Math.min(nw, Texture2D.maxTextureSize)),\n      height: Math.max(1, Math.min(nh, Texture2D.maxTextureSize)),\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Util/TextureSizeCalculator.ts","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Texture2D from \"../../Resource/Texture2D\";\nexport default class TextureContainer extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    minFilter: {\n      converter: \"Enum\",\n      default: \"LINEAR\",\n      table: {\n        LINEAR: WebGLRenderingContext.LINEAR,\n        NEAREST: WebGLRenderingContext.NEAREST,\n        NEAREST_MIPMAP_NEAREST: WebGLRenderingContext.NEAREST_MIPMAP_NEAREST,\n        NEAREST_MIPMAP_LINEAR: WebGLRenderingContext.NEAREST_MIPMAP_LINEAR,\n        LINEAR_MIPMAP_NEAREST: WebGLRenderingContext.LINEAR_MIPMAP_NEAREST,\n        LINEAR_MIPMAP_LINEAR: WebGLRenderingContext.LINEAR_MIPMAP_LINEAR,\n      },\n    },\n    magFilter: {\n      converter: \"Enum\",\n      default: \"LINEAR\",\n      table: {\n        LINEAR: WebGLRenderingContext.LINEAR,\n        NEAREST: WebGLRenderingContext.NEAREST,\n      },\n    },\n    wrapS: {\n      converter: \"Enum\",\n      default: \"REPEAT\",\n      table: {\n        REPEAT: WebGLRenderingContext.REPEAT,\n        MIRRORED_REPEAT: WebGLRenderingContext.MIRRORED_REPEAT,\n        CLAMP_TO_EDGE: WebGLRenderingContext.CLAMP_TO_EDGE,\n      },\n    },\n    wrapT: {\n      converter: \"Enum\",\n      default: \"REPEAT\",\n      table: {\n        REPEAT: WebGLRenderingContext.REPEAT,\n        MIRRORED_REPEAT: WebGLRenderingContext.MIRRORED_REPEAT,\n        CLAMP_TO_EDGE: WebGLRenderingContext.CLAMP_TO_EDGE,\n      },\n    },\n  };\n\n  public texture: Texture2D;\n\n  public $mount(): void {\n    this.texture = new Texture2D(this.companion.get(\"gl\"));\n    this.texture.magFilter = this.getAttribute(\"magFilter\");\n    this.texture.minFilter = this.getAttribute(\"minFilter\");\n    this.texture.wrapT = this.getAttribute(\"wrapT\");\n    this.texture.wrapS = this.getAttribute(\"wrapS\");\n    this.getAttributeRaw(\"magFilter\").watch(v => this.texture.magFilter = v);\n    this.getAttributeRaw(\"minFilter\").watch(v => this.texture.minFilter = v);\n    this.getAttributeRaw(\"wrapS\").watch(v => this.texture.wrapS = v);\n    this.getAttributeRaw(\"wrapT\").watch(v => this.texture.wrapT = v);\n  }\n\n  public $unmount(): void {\n    this.texture.destroy();\n    this.texture = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/TextureContainer.ts","/**\n * Provide abstraction of resolving named resource such as Geometry, Materials.\n */\nexport default class NameResolver<T> {\n    public static UNLOADED = 0;\n\n    public static RESOLVING = 1;\n\n    public static RESOLVED = 2;\n\n    /**\n     * Resolved items\n     */\n    private _resolved: { [name: string]: T } = {};\n\n    /**\n     * Name to Resource-resolvers\n     */\n    private _resolvers: { [name: string]: Promise<T> } = {};\n\n    /**\n     * Name to waiting resolvers\n     */\n    private _handlers: { [name: string]: ((resolved: T) => void)[] } = {};\n\n    /**\n     * Obtain the named resource.\n     * @return {Promise<T>} the resource\n     */\n    public get(name: string): Promise<T> {\n        if (this._resolved[name] !== void 0) {\n            return Promise.resolve(this._resolved[name]);\n        } else {\n            return this._waitForResolved(name);\n        }\n    }\n\n    /**\n     * Get status of specified resource.\n     * This method would return NameResolver.UNLOADED,NameResolver.RESOLVED or NameResolver.RESOLVING\n     * @param  {string} name resource name to check status\n     * @return {number}      status code\n     */\n    public getStatus(name: string): number {\n        if (this._resolvers[name] !== void 0) {\n            return NameResolver.RESOLVING;\n        } else if (this._resolved[name] !== void 0) {\n            return NameResolver.RESOLVED;\n        } else {\n            return NameResolver.UNLOADED;\n        }\n    }\n\n    /**\n     * Register named resource\n     * @param  {string}     name      name of the resource\n     * @param  {Promise<T>} generator Promise to resolve the resource\n     * @return {Promise<T>} The promise of resource\n     */\n    public async register(name: string, generator: Promise<T> | T): Promise<T> {\n        if (this._isPromise(generator)) {\n            try {\n                if (this._resolvers[name] !== void 0) {\n                    throw new Error(`Dupelicated named resource '${name}' was registered.`);\n                }\n                this._resolvers[name] = generator;\n                const resolved = await generator;\n                this._resolvers[name] = void 0;\n                this._callHandlers(name, resolved);\n                this._resolved[name] = resolved;\n                return resolved;\n            } catch (e) {\n                throw new Error(`Unexpected error has occured during resolution of named resource '${name}'\\n${e}`);\n            }\n        } else {\n            return this.register(name, Promise.resolve(generator));\n        }\n    }\n\n    /**\n     * Get promise to wait the named resource registered.\n     * @param  {string}     name name of the resource\n     * @return {Promise<T>}     Promise to wait for registering\n     */\n    private _waitForResolved(name: string): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            if (this._handlers[name] === void 0) {\n                this._handlers[name] = [];\n            }\n            this._handlers[name].push((resolved: T) => {\n                resolve(resolved);\n            });\n        });\n    }\n\n    /**\n     * Call handler to notify the named resource was loaded.\n     * @param {string} name      name of the resource\n     * @param {T}      resolved Promise to wait for registering\n     */\n    private _callHandlers(name: string, resolved: T): void {\n        if (this._handlers[name] === void 0) {\n            return;\n        }\n        this._handlers[name].forEach(f => f(resolved));\n        delete this._handlers[name];\n    }\n\n    private _isPromise(generator: Promise<T> | T): generator is Promise<T> {\n        return (typeof generator[\"then\"] === \"function\");\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Asset/NameResolver.ts","import Namespace from \"grimoirejs/ref/Base/Namespace\";\nimport Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Timer from \"../Util/Timer\";\nimport AssetLoadingManager from \"./AssetLoadingManagerComponent\";\nimport LoopManager from \"./LoopManagerComponent\";\ntype TimerCoroutine = GeneratorFunction;\ntype CoroutineTuple = { coroutine: Iterator<number>; next: number; container: Component; tag?: string | symbol };\n\nclass CoroutineRegistry {\n  public coroutines: CoroutineTuple[] = [];\n\n  public callCoroutine(criteria: number, timer: Timer): void {\n    let removeTarget: CoroutineTuple[];\n    this.coroutines.forEach(val => {\n      if (val.next <= criteria) {\n        if (val.container.disposed) { // if component was disposed, coroutine will be deleted\n          if (!removeTarget) {\n            removeTarget = [];\n          }\n          removeTarget.push(val);\n          return; // Skip current coroutine\n        }\n        if (!val.container.isActive) {\n          return;\n        }\n        const next = val.coroutine.next(timer);\n        if (next.done || next.value < 0) { // if coroutine was finished\n          if (!removeTarget) {\n            removeTarget = [];\n          }\n          removeTarget.push(val);\n        } else {\n          if (val.next + next.value < criteria) { // some frames are dropped\n            val.next = criteria;\n          } else {\n            val.next = val.next + next.value;\n          }\n        }\n      }\n    });\n    if (removeTarget) { // remove actually\n      // remove completed tasks\n      removeTarget.forEach(f => {\n        const i = this.coroutines.indexOf(f);\n        this.coroutines.splice(i, 1);\n      });\n    }\n  }\n\n  public register(container: Component, coroutine: () => IterableIterator<number>, tag?: string | symbol): void {\n    const generator = coroutine.call(container);\n    this.coroutines.push({\n      coroutine: generator,\n      next: 0,\n      container,\n      tag,\n    });\n  }\n\n  public unregister(container: Component, tag?: string | symbol): void {\n    const removeTarget: CoroutineTuple[] = [];\n    if (tag) {\n      this.coroutines.forEach(f => {\n        if (f.container === container && f.tag === tag) {\n          removeTarget.push(f);\n        }\n      });\n    } else {\n      this.coroutines.forEach(f => {\n        if (f.container === container) {\n          removeTarget.push(f);\n        }\n      });\n    }\n    removeTarget.forEach(v => {\n      const index = this.coroutines.indexOf(v);\n      this.coroutines.splice(index);\n    });\n  }\n}\n\nexport default class BasicComponent extends Component {\n\n  public static attributes: { [name: string]: IAttributeDeclaration } = {};\n  private _loopManagerBackingStore: LoopManager;\n\n  private _assetLoadingManagerBackingStore: AssetLoadingManager;\n\n  /**\n   * Getter for loop manager used for loop mamnagement\n   * @return {LoopManager} [description]\n   */\n  public get loopManager(): LoopManager {\n    if (!this._loopManagerBackingStore) {\n      this._loopManagerBackingStore = this.node.getComponentInAncestor(LoopManager);\n    }\n    return this._loopManagerBackingStore;\n  }\n  /**\n   * Getter for assetLoading manager\n   * @return {LoopManager} [description]\n   */\n  public get assetLoadingManager(): AssetLoadingManager {\n    if (!this._assetLoadingManagerBackingStore) {\n      this._assetLoadingManagerBackingStore = this.node.getComponentInAncestor(AssetLoadingManager);\n    }\n    return this._assetLoadingManagerBackingStore;\n  }\n\n  /**\n   * Register coroutine invoked by timer in millisecound.\n   * Yield values from coroutine will be used as next frame to recall the generator.\n   * Ensure this is not called exactly specified timing. This will be called in the frame after specified timing.\n   */\n  protected __registerTimerCoroutine(coroutine: () => IterableIterator<number>, tag?: string | symbol): void {\n    // check companion containing coroutine cache\n    let coroutines = this.companion.get(\"timer-coroutine\") as CoroutineRegistry;\n    if (!coroutines) {\n      coroutines = new CoroutineRegistry();\n      this.loopManager.register((t: Timer) => coroutines.callCoroutine(t.time, t), 100);\n      this.companion.set(Namespace.define(this.node.name.ns.qualifiedName).for(\"timer-coroutine\"), coroutines);\n    }\n    coroutines.register(this, coroutine, tag);\n  }\n  /**\n   * Register coroutine invoked by timer in frame count.\n   * Yield values from coroutine will be used as next frame to recall the generator.\n   */\n  protected __registerFrameCoroutine(coroutine: () => IterableIterator<number>, tag?: string | symbol): void {\n    // check companion containing coroutine cache\n    let coroutines = this.companion.get(\"frame-coroutine\") as CoroutineRegistry;\n    if (!coroutines) {\n      coroutines = new CoroutineRegistry();\n      this.loopManager.register((t: Timer) => coroutines.callCoroutine(t.frameCount, t), 100);\n      this.companion.set(Namespace.define(this.node.name.ns.qualifiedName).for(\"frame-coroutine\"), coroutines);\n    }\n    coroutines.register(this, coroutine, tag);\n  }\n  /**\n   * Call method after specified time elapsed.\n   * If the component was disabled, specified method will be called after component being enabled.\n   * @param  {Timer}  method [description]\n   * @return {[type]}        [description]\n   */\n  protected __invoke(method: (timer: Timer) => void, timeInMillis: number): void {\n    const _that = this;\n    this.__registerTimerCoroutine(function*() {\n      const timer = yield timeInMillis;\n      method.call(_that, timer as Timer);\n    });\n  }\n\n  protected __unregisterTimerCoroutine(tag?: string | symbol): void {\n    const coroutines = this.companion.get(\"timer-coroutine\") as CoroutineRegistry;\n    if (coroutines) {\n      coroutines.unregister(this, tag);\n    }\n  }\n\n  protected __unregisterFrameCoroutine(tag?: string | symbol): void {\n    const coroutines = this.companion.get(\"frame-coroutine\") as CoroutineRegistry;\n    if (coroutines) {\n      coroutines.unregister(this, tag);\n    }\n  }\n\n  protected __registerAssetLoading<T>(loadingPromise: Promise<T>): Promise<T> {\n    return this.assetLoadingManager.loader.register(loadingPromise, this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/BasicComponent.ts","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Timer from \"../Util/Timer\";\ninterface LoopAction {\n  action(timer: Timer): void;\n  priorty: number;\n}\n\n/**\n * 全体のループを管理しているコンポーネント。あまり直接ユーザーがいじることはありません。\n */\nexport default class LoopManagerComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    loopEnabled: {\n      default: false,\n      converter: \"Boolean\",\n    },\n    fpsRestriction: {\n      default: 60,\n      converter: \"Number\",\n    },\n  };\n\n  private _loopActions: LoopAction[] = [];\n\n  private _registerNextLoop: () => void;\n\n  private _timer: Timer;\n\n  public $awake(): void {\n    this._registerNextLoop =\n      window.requestAnimationFrame  // if window.requestAnimationFrame is defined or undefined\n        ?\n        () => { // When window.requestAnimationFrame is supported\n          window.requestAnimationFrame(this._loop.bind(this));\n        }\n        :\n        () => { // When window.requestAnimationFrame is not supported.\n          window.setTimeout(this._loop.bind(this), 1000 / 60);\n        };\n  }\n\n  public $mount(): void {\n    this.getAttributeRaw(\"loopEnabled\").watch((attr) => {\n      if (attr) {\n        this._begin();\n      }\n    });\n    this._timer = new Timer();\n    this.getAttributeRaw(\"fpsRestriction\").watch((attr) => {\n      this._timer.fpsRestriction = attr;\n    }, true);\n    this._timer.internalUpdate();\n  }\n\n  public register(action: (timer: Timer) => void, priorty: number): void {\n    this._loopActions.push({\n      action,\n      priorty,\n    });\n    this._loopActions.sort((a, b) => a.priorty - b.priorty);\n  }\n\n  private _begin(): void {\n    this._registerNextLoop();\n  }\n\n  private _loop(): void {\n    if (this._timer.internalUpdate()) {\n      this.node.emit(\"loop\", {\n        timer: this._timer,\n      });\n      this._loopActions.forEach((a) => a.action(this._timer));\n    }\n    this._registerNextLoop();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/LoopManagerComponent.ts","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS&&window.GrimoireJS.lib.math?window.GrimoireJS.lib.math.Matrix:undefined;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs-math/ref/Matrix.js\n// module id = 17\n// module chunks = 0","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS&&window.GrimoireJS.lib.math?window.GrimoireJS.lib.math.Vector4:undefined;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs-math/ref/Vector4.js\n// module id = 18\n// module chunks = 0","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport ISceneUpdateArgument from \"../SceneRenderer/ISceneUpdateArgument\";\nimport RenderQueueRegistry from \"../SceneRenderer/RenderQueueRegistry\";\nimport Timer from \"../Util/Timer\";\n\n/**\n * 特定のシーン内に関連する処理を行うためのコンポーネント\n * このコンポーネントには属性が存在しません。\n */\nexport default class SceneComponent extends Component {\n\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    // Specify the attributes user can intaract\n  };\n\n  public sceneDescription: { [key: string]: any };\n\n  public queueRegistory: RenderQueueRegistry = new RenderQueueRegistry();\n\n  /**\n   * The index of loop executed last time.\n   * @type {number}\n   */\n  private _lastUpdateIndex: number;\n\n  private static _sceneDescriptionCreationHandlers: ((sd: { [key: string]: any }, scene: SceneComponent) => void)[] = [];\n\n  public static onSceneDescriptionCreation(handler: (sd: { [key: string]: any }, scene: SceneComponent) => void): void {\n    SceneComponent._sceneDescriptionCreationHandlers.push(handler);\n  }\n\n  public $mount(): void {\n    this.sceneDescription = {};\n    SceneComponent._sceneDescriptionCreationHandlers.forEach(v => v(this.sceneDescription, this));\n  }\n\n  /**\n   * Notify update scene only when send update message is needed.\n   * @param {Timer} timer [description]\n   */\n  public updateScene(timer: Timer): void {\n    if (this._lastUpdateIndex !== timer.frameCount) {\n      const sceneUpdateInfo: ISceneUpdateArgument = {\n        sceneDescription: this.sceneDescription,\n        timer,\n      };\n      this.node.broadcastMessage(\"update\", sceneUpdateInfo);\n      this._lastUpdateIndex = timer.frameCount;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/SceneComponent.ts","import MaterialFactory from \"../Material/MaterialFactory\";\nimport GLRelatedRegistryBase from \"./GLRelatedRegistryBase\";\ninterface ExtensionRequest {\n  extensionName: string;\n  isNecessary: boolean;\n}\n\nexport default class GLExtRequestor extends GLRelatedRegistryBase {\n\n  public static registryName = \"GLExtensionRequestor\";\n  /**\n   * Some of extensions needed to override resolving extensions by this.\n   */\n  public static _customExtensionResolvers: { [key: string]: (gl: WebGLRenderingContext) => any } = {};\n\n  public static _requestObserver: ((name: string) => void)[] = [];\n\n  public static get(gl: WebGLRenderingContext): GLExtRequestor {\n    return this.__get(gl, GLExtRequestor);\n  }\n\n  /**\n   * Extension list requested to use.\n   * @type {string[]}\n   */\n  private static _requestedExtensions: ExtensionRequest[] = [];\n\n  /**\n   * Check specified extension was supported on this device.\n   * Note: This method would throw an exception if there was no WebGL context initialized yet.\n   * @param  {string}  extName [description]\n   * @return {boolean}         [description]\n   */\n  public static supported(extName: string): boolean {\n    const fg = GLExtRequestor._getFirst();\n    if (!fg) {\n      throw new Error(\"There was no WebGLRenderingContext initialized yet\");\n    } else {\n      return fg.extensions[extName] !== undefined && fg.extensions[extName] !== null;\n    }\n  }\n\n  /**\n   * Request extension to use.\n   * @param {string} str [description]\n   */\n  public static request(extName: string, isNecessary = false): void {\n    const index = GLExtRequestor._requestIndexOf(extName);\n    if (index > -1 && isNecessary) {\n      GLExtRequestor._requestedExtensions[index] = { extensionName: extName, isNecessary };\n    } else if (index === -1) {\n      GLExtRequestor._requestedExtensions.push({ extensionName: extName, isNecessary });\n    }\n    GLExtRequestor._requestObserver.forEach((o) => o(extName));\n  }\n\n  private static _getFirst(): GLExtRequestor {\n    return GLExtRequestor.__getAll(GLExtRequestor)[0];\n  }\n\n  private static _requestIndexOf(extName: string): number {\n    for (let i = 0; i < GLExtRequestor._requestedExtensions.length; i++) {\n      if (GLExtRequestor._requestedExtensions[i].extensionName === extName) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  public extensions: { [key: string]: any } = {};\n\n  private _readyExtensions: { [key: string]: boolean } = {};\n\n  constructor(public gl: WebGLRenderingContext) {\n    super();\n    this._resolveRequested();\n    GLExtRequestor._requestObserver.push(this._resolveExtensionSafely.bind(this));\n  }\n\n  /**\n   * Resolve all extension requested already.\n   */\n  private _resolveRequested(): void {\n    GLExtRequestor._requestedExtensions.forEach((e) => {\n      this._resolveExtensionSafely(e.extensionName);\n    });\n  }\n\n  private _resolveExtensionSafely(extName: string): void {\n    const e = GLExtRequestor._requestedExtensions[GLExtRequestor._requestIndexOf(extName)];\n    if (!this._resolveExtension(e.extensionName) && e.isNecessary) {\n      throw new Error(`A WebGL extension '${e.extensionName}' was requested. But that is not supported on this device.`);\n    }\n  }\n\n  private _resolveExtension(name: string): boolean {\n    if (this._readyExtensions[name]) {\n      return true;\n    }\n    let ext;\n    if (typeof GLExtRequestor._customExtensionResolvers[name] === \"undefined\") {\n      ext = this.extensions[name] = this.gl.getExtension(name);\n    } else {\n      ext = this.extensions[name] = GLExtRequestor._customExtensionResolvers[name](this.gl);\n    }\n    this._readyExtensions[name] = this.extensions[name] !== void 0;\n    if (ext) {\n      MaterialFactory.get(this.gl).macro.setValue(name.toUpperCase(), \"\");\n    }\n    return !!this._readyExtensions[name];\n  }\n}\n\nGLExtRequestor._customExtensionResolvers[\"WEBGL_color_buffer_float\"] = (gl: WebGLRenderingContext) => {\n  let isSupported: boolean;\n  if (gl.getExtension(\"WEBGL_color_buffer_float\") === null) {\n    const fbo = gl.createFramebuffer();\n    const tex = gl.createTexture();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0);\n    if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\n      isSupported = false;\n    } else {\n      isSupported = true;\n    }\n    gl.deleteTexture(tex);\n    gl.deleteFramebuffer(fbo);\n  } else {\n    isSupported = true;\n  }\n  return isSupported;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/GLExtRequestor.ts","import IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport GLRelatedRegistryBase from \"../Resource/GLRelatedRegistryBase\";\nimport Geometry from \"./Geometry\";\nimport IGeometryFactoryDelegate from \"./IGeometryFactoryDelegate\";\n\n/**\n * Provides the feature to instanciate primitive geometry.\n */\nexport default class GeometryFactory extends GLRelatedRegistryBase{\n\n  public static registryName = \"GeometryFactory\";\n\n  /**\n   * Delegates to be used as factory\n   */\n  public static factoryDelegates: { [typeName: string]: IGeometryFactoryDelegate } = {};\n\n  /**\n   * Argument inputs to be used for construction of geometry.\n   */\n  public static factoryArgumentDeclarations: { [typeName: string]: { [argName: string]: IAttributeDeclaration } } = {};\n\n  public static factoryExtentions: { [typeName: string]: ((geometry: Geometry, attrs: { [attrKey: string]: any }) => void)[] } = {};\n\n  /**\n   * Get geometry factory by WebGLRenderingContext\n   * @param gl\n   */\n  public static get(gl: WebGLRenderingContext): GeometryFactory{\n    return this.__get(gl, GeometryFactory);\n  }\n\n  /**\n   * Add new type geometry\n   * @param {string}                   typeName        [description]\n   * @param {IAttributeDeclaration }}             argumentDeclarations [description]\n   * @param {IGeometryFactoryDelegate} factoryDelegate [description]\n   */\n  public static addType(typeName: string, argumentDeclarations: { [argName: string]: IAttributeDeclaration }, factoryDelegate: IGeometryFactoryDelegate): void {\n    GeometryFactory.factoryDelegates[typeName] = factoryDelegate;\n    GeometryFactory.factoryArgumentDeclarations[typeName] = argumentDeclarations;\n  }\n\n  public static extend(typeName: string, extender: (geometry: Geometry, attrs: { [attrKey: string]: any }) => Promise<void> | void): void {\n    if (GeometryFactory.factoryExtentions[typeName] === void 0) {\n      GeometryFactory.factoryExtentions[typeName] = [];\n    }\n    GeometryFactory.factoryExtentions[typeName].push(extender);\n  }\n\n  constructor(public gl: WebGLRenderingContext) {\n    super();\n  }\n\n  public async instanciate(type: string, args: { [argName: string]: any }): Promise<Geometry> {\n    const factoryDelegate = GeometryFactory.factoryDelegates[type];\n    if (!factoryDelegate) {\n      throw new Error(`Can not instanciate unknown geometry type ${type}`);\n    }\n    const geometry = await factoryDelegate(this.gl, args);\n    if (GeometryFactory.factoryExtentions[type] !== void 0) {\n      const exts = GeometryFactory.factoryExtentions[type];\n      for (let i = 0; i < exts.length; i++) {\n        const p = exts[i](geometry, args);\n        if (p) {\n          await p;\n        }\n      }\n    }\n    return geometry;\n  }\n\n  public instanciateAsDefault(type: string): Promise<Geometry> {\n    const decl = GeometryFactory.factoryArgumentDeclarations[type];\n    const args: { [key: string]: any } = {};\n    for (const attr in decl) {\n      const attrDecl = decl[attr];\n      args[attr] = attrDecl.default;\n    }\n    return this.instanciate(type, args);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Geometry/GeometryFactory.ts","import GrimoireInterface from \"grimoirejs\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Material from \"../Material/Material\";\nimport DrawPriorty from \"../SceneRenderer/DrawPriorty\";\nimport MaterialComponent from \"./MaterialComponent\";\nimport MaterialContainerBase from \"./MaterialContainerBase\";\n\n/**\n * マテリアルとマテリアルへの属性を管理するためのコンポーネント\n * このコンポーネントは将来的に`MeshRenderer`と統合されます。\n * 指定されたマテリアルの初期化の管理や、マテリアルによって動的に追加される属性の管理を行います、\n */\nexport default class MaterialContainerComponent extends MaterialContainerBase {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    /**\n     * 対象のマテリアル\n     */\n    material: {\n      converter: \"Material\",\n      default: \"new(unlit)\",\n      componentBoundTo: \"_materialComponent\", // When the material was specified with the other material tag, this field would be assigned.\n    },\n    /**\n     * 描画順序\n     *\n     * デフォルトの状態では、マテリアルから読み込んだ描画順序設定を用います\n     */\n    drawOrder: {\n      converter: \"String\",\n      default: \"Auto\",\n    },\n    transparent: {\n      converter: \"Boolean\",\n      default: true,\n    },\n  };\n\n  public static rewriteDefaultMaterial(materialName: string): void {\n    if (materialName !== MaterialContainerComponent._defaultMaterial) {\n      MaterialContainerComponent._defaultMaterial = materialName;\n      GrimoireInterface.componentDeclarations.get(\"MaterialContainer\").attributes[\"material\"].default = `new(${materialName})`;\n    }\n  }\n\n  public static get defaultMaterial(): string {\n    return this._defaultMaterial;\n  }\n\n  private static _defaultMaterial = \"unlit\";\n\n  public getDrawPriorty(depth: number, technique: string): number {\n    if (!this.materialReady && !this.isActive) { // If material was not ready\n      return Number.MAX_VALUE;\n    }\n    let orderCriteria;\n    if (this._drawOrder === \"Auto\") {\n      if (this.material.techniques[technique].drawOrder === \"Auto\") {\n        orderCriteria = DrawPriorty[this._transparent ? \"UseAlpha\" : \"NoAlpha\"];\n      } else {\n        orderCriteria = DrawPriorty[this.material.techniques[technique].drawOrder];\n      }\n    } else {\n      orderCriteria = DrawPriorty[this._drawOrder];\n    }\n    if (orderCriteria === void 0) {\n      throw new Error(`Specified drawing order \"${this.material.techniques[technique].drawOrder}\" is not defined`);\n    }\n    if (orderCriteria.descending) {\n      return (1.0 - depth / 10000) * orderCriteria.priorty;\n    } else {\n      return depth / 10000 * orderCriteria.priorty;\n    }\n  }\n\n  public material: Material;\n\n  public materialArgs: { [key: string]: any; } = {};\n\n  public materialReady = false;\n\n  public useMaterial = false;\n\n  private _materialComponent: MaterialComponent;\n\n  private _drawOrder: string;\n\n  private _registeredAttributes: boolean;\n\n  private _transparent: boolean;\n\n  public $mount(): void {\n    this.getAttributeRaw(\"material\").watch(this._onMaterialChanged.bind(this));\n    this.__registerAssetLoading(this._onMaterialChanged());\n    this.getAttributeRaw(\"drawOrder\").boundTo(\"_drawOrder\");\n    this.getAttributeRaw(\"transparent\").boundTo(\"_transparent\");\n  }\n\n  /**\n   * When the material attribute is changed.\n   */\n  private async _onMaterialChanged(): Promise<void> {\n    const materialPromise = this.getAttribute(\"material\") as Promise<Material>;\n    if (materialPromise === null) {\n      this.useMaterial = false;\n      return; // When specified material is null\n    }\n    this.useMaterial = true;\n    if (this._registeredAttributes) {\n      this.__removeExposedMaterialParameters();\n    }\n    if (!this._materialComponent) { // the material must be instanciated by attribute.\n      await this._prepareInternalMaterial(materialPromise);\n    } else {\n      await this._prepareExternalMaterial(materialPromise);\n    }\n  }\n\n  /**\n   * Resolve materials only when the material required from external material component.\n   * @return {Promise<void>} [description]\n   */\n  private async _prepareExternalMaterial(materialPromise: Promise<Material>): Promise<void> {\n    const material = await materialPromise; // waiting for material load completion\n    this.material = material;\n    this.materialArgs = this._materialComponent.materialArgs;\n    this.materialReady = true;\n  }\n\n  private async _prepareInternalMaterial(materialPromise: Promise<Material>): Promise<void> {\n    // obtain promise of instanciating material\n    if (!materialPromise) {\n      return;\n    }\n    const material = await materialPromise; // waiting for material load completion\n    this.material = material;\n    this.__exposeMaterialParameters(this.material);\n    this._registeredAttributes = true;\n    this.materialReady = true;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/MaterialContainerComponent.ts","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport IRenderRendererMessage from \"../Messages/IRenderRendererMessage\";\nimport IResizeViewportMessage from \"../Messages/IResizeViewportMessage\";\nimport ViewportMouseEvent from \"../Objects/ViewportMouseEvent\";\nimport CanvasRegionRenderingTarget from \"../Resource/RenderingTarget/CanvasRegionRenderingTarget\";\nimport RenderingTargetRegistry from \"../Resource/RenderingTarget/RenderingTargetRegistry\";\nimport Viewport from \"../Resource/Viewport\";\nimport TextureSizeCalculator from \"../Util/TextureSizeCalculator\";\nimport Timer from \"../Util/Timer\";\nimport CameraComponent from \"./CameraComponent\";\nexport default class RendererComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    regionName: {\n      converter: \"String\",\n      default: null,\n    },\n    camera: {\n      converter: \"Component\",\n      default: \"camera\",\n      target: \"Camera\",\n    },\n    viewport: {\n      converter: \"Viewport\",\n      default: \"auto\",\n    },\n    handleMouse: {\n      converter: \"Boolean\",\n      default: true,\n    },\n  };\n\n  public camera: CameraComponent;\n\n  public renderingTarget: CanvasRegionRenderingTarget;\n\n  public get viewport(): Viewport {\n    if (this._viewportCache) {\n      return this._viewportCache;\n    } else {\n      this._viewportCache = this._viewportSizeGenerator((this.companion.get(\"gl\") as WebGLRenderingContext).canvas);\n      return this._viewportCache;\n    }\n  }\n\n  private _gl: WebGLRenderingContext;\n\n  private _canvas: HTMLCanvasElement;\n\n  private _viewportSizeGenerator: (canvas: HTMLCanvasElement) => Viewport;\n\n  private _viewportCache: Viewport;\n\n  private _mouseLeaveHandler: (e: MouseEvent) => void;\n\n  private _mouseEnterHandler: (e: MouseEvent) => void;\n\n  private _mouseMoveHandler: (e: MouseEvent) => void;\n\n  private _mouseDownHandler: (e: MouseEvent) => void;\n\n  private _mouseUpHandler: (e: MouseEvent) => void;\n\n  private _wasInside = false;\n\n  public $awake(): void {\n    // initializing attributes\n    this.getAttributeRaw(\"camera\").boundTo(\"camera\");\n    this.getAttributeRaw(\"viewport\").watch((v) => {\n      this._viewportSizeGenerator = v;\n      this.$resizeCanvas();\n    });\n    // viewport converter returns a delegate to generate viewport size\n    this._viewportSizeGenerator = this.getAttribute(\"viewport\");\n    let regionName = this.getAttribute(\"regionName\");\n    if (!regionName) {\n      regionName = \"renderer-\" + this.node.index;\n    }\n    this.renderingTarget = new CanvasRegionRenderingTarget(this.companion.get(\"gl\"));\n    this.renderingTarget.setViewport(this.viewport);\n    RenderingTargetRegistry.get(this.companion.get(\"gl\")).setRenderingTarget(regionName, this.renderingTarget);\n    this._initializeMouseHandlers();\n  }\n\n  public $mount(): void {\n    this._gl = this.companion.get(\"gl\") as WebGLRenderingContext;\n    this._canvas = this.companion.get(\"canvasElement\") as HTMLCanvasElement;\n    this.getAttributeRaw(\"handleMouse\").watch(a => {\n      if (a) {\n        this._enableMouseHandling();\n      } else {\n        this._disableMouseHandling();\n      }\n    }, true);\n    if (this.node.children.length === 0) { // complement render stage\n      this.node.addChildByName(\"render-scene\", {});\n    }\n    this.$resizeCanvas();\n  }\n\n  public $unmount(): void {\n    this._disableMouseHandling();\n  }\n\n  public $treeInitialized(): void {\n    // This should be called after mounting all of tree nodes in children\n    this.$resizeCanvas();\n  }\n\n  public $resizeCanvas(): void {\n    this._viewportCache = this._viewportSizeGenerator(this._canvas);\n    this.renderingTarget.setViewport(this._viewportCache);\n    const pow2Size = TextureSizeCalculator.getPow2Size(this._viewportCache.Width, this._viewportCache.Height);\n    this.node.broadcastMessage(\"resizeViewport\", {\n      width: this._viewportCache.Width,\n      height: this._viewportCache.Height,\n      pow2Width: pow2Size.width,\n      pow2Height: pow2Size.height,\n    } as IResizeViewportMessage);\n  }\n\n  public $renderViewport(args: { timer: Timer }): void {\n    this.node.broadcastMessage(\"render\", {\n      camera: this.camera,\n      viewport: this._viewportCache,\n      timer: args.timer,\n    } as IRenderRendererMessage);\n  }\n\n  private _initializeMouseHandlers() {\n    // initializing mouse handlers\n    this._mouseMoveHandler = (e: MouseEvent) => {\n      if (this._isViewportInside(e)) {\n        if (!this._wasInside) { // If the last mouse pointer was inside of canvas but not inside of viewport\n          this._sendMouseEvent(\"mouseenter\", e);\n        }\n        this._sendMouseEvent(\"mousemove\", e);\n        this._wasInside = true; // Mark as last pointer was inside of viewport\n      } else {\n        if (this._wasInside) { // if position of last mouse pointer was inside and now the pointer is out side of viewport but inside of canvas\n          this._sendMouseEvent(\"mouseleave\", e);\n        }\n        this._wasInside = false; // Mark as last pointer was not inside of viewport\n      }\n    };\n    this._mouseEnterHandler = (e: MouseEvent) => {\n      if (this._isViewportInside(e)) { // If mouse entered and inside of viewport\n        this._sendMouseEvent(\"mouseenter\", e);\n        this._wasInside = true;\n      }\n    };\n    this._mouseLeaveHandler = (e: MouseEvent) => {\n      if (this._wasInside) { // If mouse left canvas area and last mouse position was on viewport area\n        this._sendMouseEvent(\"mouseleave\", e);\n      }\n      this._wasInside = false;\n    };\n    this._mouseDownHandler = (e: MouseEvent) => {\n      if (this._isViewportInside(e)) {\n        this._sendMouseEvent(\"mousedown\", e);\n        this._wasInside = true;\n      }\n    };\n    // Mouse up can be called even if mouse pointer was not inside of viewport\n    this._mouseUpHandler = (e: MouseEvent) => {\n      this._sendMouseEvent(\"mouseup\", e);\n    };\n  }\n\n  private _enableMouseHandling(): void {\n    this._canvas.addEventListener(\"mousemove\", this._mouseMoveHandler);\n    this._canvas.addEventListener(\"mouseleave\", this._mouseLeaveHandler);\n    this._canvas.addEventListener(\"mouseenter\", this._mouseEnterHandler);\n    this._canvas.addEventListener(\"mousedown\", this._mouseDownHandler);\n    this._canvas.addEventListener(\"mouseup\", this._mouseUpHandler);\n  }\n\n  private _disableMouseHandling(): void {\n    this._canvas.removeEventListener(\"mousemove\", this._mouseMoveHandler);\n    this._canvas.removeEventListener(\"mouseleave\", this._mouseLeaveHandler);\n    this._canvas.removeEventListener(\"mouseenter\", this._mouseEnterHandler);\n    this._canvas.removeEventListener(\"mousedown\", this._mouseDownHandler);\n    this._canvas.removeEventListener(\"mouseup\", this._mouseUpHandler);\n  }\n\n  private _sendMouseEvent(eventName: string, e: MouseEvent): void {\n    if (!this.isActive) {\n      return;\n    }\n    this.node.emit(eventName);\n    this.node.broadcastMessage(eventName, this._toViewportMouseArgs(e));\n  }\n\n  /**\n   * Check mouse is inside of viewport\n   * @param  {MouseEvent} e [description]\n   * @return {boolean}      [description]\n   */\n  private _isViewportInside(e: MouseEvent): boolean {\n    const rc = this._getRelativePosition(e);\n    const n = this._viewportCache.toLocalNormalized(rc[0], rc[1]);\n    return n[0] >= 0 && n[0] <= 1 && n[1] >= 0 && n[1] <= 1;\n  }\n\n  /**\n   * Obtain mouse point of relative coordinate from element.\n   * @param  {MouseEvent} e [description]\n   * @return {number[]}     [description] x,y,width,height\n   */\n  private _getRelativePosition(e: MouseEvent): number[] {\n    const rect = this._canvas.getBoundingClientRect();\n    const positionX = rect.left + window.pageXOffset;\n    const positionY = rect.top + window.pageYOffset;\n    return [e.pageX - positionX, rect.height - (e.pageY - positionY), rect.width, rect.height];\n  }\n\n  /**\n   * Convert mouse args into viewport mouse event\n   * @param  {MouseEvent}         e [description]\n   * @return {ViewportMouseEvent}   [description]\n   */\n  private _toViewportMouseArgs(e: MouseEvent): ViewportMouseEvent {\n    const ro = this._getRelativePosition(e);\n    const r = this._viewportCache.toLocal(ro[0], ro[1]);\n    const n = this._viewportCache.toLocalNormalized(ro[0], ro[1]);\n    return {...e,\n      viewportX: r[0],\n      viewportY: r[1],\n      viewportNormalizedX: n[0],\n      viewportNormalizedY: n[1],\n      canvasX: ro[0],\n      canvasY: ro[1],\n      canvasNormalizedX: ro[0] / ro[2],\n      canvasNormalizedY: ro[1] / ro[3],\n      inside: this._isViewportInside(e)};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/RendererComponent.ts","import GLRelatedRegistryBase from \"../GLRelatedRegistryBase\";\nimport CanvasRenderingTarget from \"./CanvasRenderingTarget\";\nimport IRenderingTarget from \"./IRenderingTarget\";\n\ntype RenderingTargetResolver = (renderingTarget: IRenderingTarget) => void;\n\n/**\n * RenderingTargetRegistry is container class of rendering target.\n * Rendering target consists of 2 types.\n * Offscreen rendering target is used for rendering into non screen buffer(Texture)\n * Default rendering target is used for rendering into screen.\n */\nexport default class RenderingTargetRegistry extends GLRelatedRegistryBase {\n\n    public static registryName = \"RenderingTargetRegistry\";\n\n    /**\n     * Obtain reference of the class by WebGLRenderingContext.\n     * @param gl\n     */\n    public static get(gl: WebGLRenderingContext): RenderingTargetRegistry {\n        return this.__get(gl, RenderingTargetRegistry);\n    }\n\n    private _renderingTargets: { [key: string]: IRenderingTarget } = {};\n\n    private _renderingTargetResolver: { [key: string]: RenderingTargetResolver[] } = {};\n\n    constructor(public gl: WebGLRenderingContext) {\n        super();\n        // default rendering target\n        this.setRenderingTarget(\"canvas\", new CanvasRenderingTarget(gl));\n    }\n\n    /**\n     * Register a rendering target to be resolved\n     * @param name\n     * @param renderingTarget\n     */\n    public setRenderingTarget(name: string, renderingTarget: IRenderingTarget): void {\n        if (name === \"default\") {\n            throw new Error(\"Rendering target can't be named as 'default'.\");\n        }\n        this._renderingTargets[name] = renderingTarget;\n        this._resolveRenderingTargets(name, renderingTarget);\n    }\n\n    /**\n     * Obtain a rendering taregt from name.\n     */\n    public async getRenderingTarget(name: string): Promise<IRenderingTarget> {\n        const renderingTarget = this._renderingTargets[name];\n        if (renderingTarget) {\n            return renderingTarget;\n        } else {\n            return this._waitForRenderingTarget(name);\n        }\n    }\n\n    /**\n     * List of names being resolved aleady\n     */\n    public get targetNames(): string[] {\n        return Object.keys(this._renderingTargets);\n    }\n\n    private async _waitForRenderingTarget(name: string): Promise<IRenderingTarget> {\n        if (this._renderingTargetResolver[name] === undefined) {\n            this._renderingTargetResolver[name] = [];\n        }\n        return new Promise<IRenderingTarget>((resolver, reject) => {\n            this._renderingTargetResolver[name].push(resolver);\n        });\n    }\n\n    private _resolveRenderingTargets(name: string, target: IRenderingTarget): void {\n        const resolvers = this._renderingTargetResolver[name];\n        if (resolvers) {\n            resolvers.forEach(r => r(target));\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/RenderingTarget/RenderingTargetRegistry.ts","import GLResource from \"./GLResource\";\n\nexport default class RenderBuffer extends GLResource<WebGLRenderbuffer> {\n  constructor(gl: WebGLRenderingContext) {\n    super(gl, gl.createRenderbuffer());\n  }\n\n  public update(format: number, width: number, height: number): void {\n    this.gl.bindRenderbuffer(WebGLRenderingContext.RENDERBUFFER, this.resourceReference);\n    this.gl.renderbufferStorage(WebGLRenderingContext.RENDERBUFFER, format, width, height);\n    this.valid = true;\n  }\n\n  public bind(): void {\n    this.gl.bindRenderbuffer(WebGLRenderingContext.RENDERBUFFER, this.resourceReference);\n  }\n\n  public destroy(): void {\n    this.gl.deleteRenderbuffer(this.resourceReference);\n    super.destroy();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/RenderBuffer.ts","import GLRelatedRegistryBase from \"../GLRelatedRegistryBase\";\nimport Renderbuffer from \"../RenderBuffer\";\nimport Texture2D from \"../Texture2D\";\n/**\n * =\n */\nexport default class RenderingBufferResourceRegistry extends GLRelatedRegistryBase {\n\n    public static registryName = \"RenderingBufferResourceRegistry\";\n    /**\n     * Obtain reference of the class by WebGLRenderingContext.\n     * @param gl\n     */\n    public static get(gl: WebGLRenderingContext): RenderingBufferResourceRegistry {\n        return this.__get(gl, RenderingBufferResourceRegistry);\n    }\n\n    public backbuffers: { [key: string]: Texture2D } = {};\n\n    public depthBuffers: { [key: string]: Renderbuffer } = {};\n\n    constructor(public gl: WebGLRenderingContext) {\n        super();\n    }\n\n    public setBackbuffer(name: string, backbuffer: Texture2D): void {\n        this.backbuffers[name] = backbuffer;\n    }\n\n    public getBackbuffer(name: string): Texture2D {\n        return this.backbuffers[name];\n    }\n\n    public setDepthBuffer(name: string, depthBuffer: Renderbuffer): void {\n        this.depthBuffers[name] = depthBuffer;\n    }\n\n    public getDepthBuffer(name: string): Renderbuffer {\n        return this.depthBuffers[name];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/RenderingTarget/RenderingBufferResourceRegistry.ts","import IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport BasicComponent from \"../BasicComponent\";\nimport ConstantSizeResourceResizer from \"./ConstantSizeResourceResizer\";\nimport ResourceResizerComponent from \"./ResourceResizerComponentBase\";\nimport ViewportSizeResourceResizer from \"./ViewportSizeResourceResizer\";\n/**\n * Abstract class of ResizableResource container.\n */\nexport default class ResizableResourceUpdator extends BasicComponent {\n    public static resizers: { [key: string]: typeof ResourceResizerComponent } = {\n        ViewportSize: ViewportSizeResourceResizer,\n        Constant: ConstantSizeResourceResizer,\n    };\n\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        resizerType: {\n            converter: \"String\",\n            default: \"Constant\",\n        },\n    };\n\n    /**\n     * Resize texture buffer\n     * @param width\n     * @param height\n     */\n    public resize(width: number, height: number): void {\n        // Nothing to do here. Resize features are depends on what resouces are managed by for each classes.\n        // These should be considered by the classes override this class.\n    }\n\n    public $awake(): void {\n        const resizer = this.node.getComponent(ResourceResizerComponent);\n        if (!resizer) {\n            const resizerType = this.getAttribute(\"resizerType\");\n            const resizerCtor = ResizableResourceUpdator.resizers[resizerType];\n            if (!resizerCtor) {\n                throw new Error(`Specified resizer '${resizerType}' is not yet registered to resizable resource updator`);\n            }\n            setImmediate(() => {\n                this.node.addComponent(resizerCtor); // darkside\n            });\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/ResizableResourceUpdator.ts","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport TextureSizeCalculator from \"../../Util/TextureSizeCalculator\";\nimport ResizableResourceUpdator from \"./ResizableResourceUpdator\";\n\n/**\n * Base class of texture resizer\n */\nexport default class TextureResizerComponentBase extends Component {\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        keepPow2Size: {\n            converter: \"Boolean\",\n            default: true,\n        },\n    };\n\n    private _lastWidth = 0;\n\n    private _lastHeight = 0;\n\n    /**\n     * Resize all resources on this node.\n     * @param width\n     * @param height\n     */\n    protected __resizeResources(width: number, height: number): void {\n        if (this.getAttribute(\"keepPow2Size\")) {\n            let newSize = TextureSizeCalculator.getPow2Size(width, height);\n            width = newSize.width;\n            height = newSize.height;\n        }\n        if (width === this._lastWidth && height === this._lastHeight) {\n            return;\n        }\n        this.node.getComponents(ResizableResourceUpdator)\n            .forEach(resizable => resizable.resize(width, height));\n        this._lastWidth = width;\n        this._lastHeight = height;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/ResourceResizerComponentBase.ts","import GrimoireJS from \"grimoirejs\";\nimport Color4 from \"grimoirejs-math/ref/Color4\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport IRenderingTarget from \"../../Resource/RenderingTarget/IRenderingTarget\";\nimport RenderStageBase from \"./RenderStageBase\";\nexport default class SingleBufferRenderStageBase extends RenderStageBase {\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        out: {\n            converter: \"RenderingTarget\",\n            default: \"default\",\n        },\n        clearColor: {\n            default: \"#0000\",\n            converter: \"Color4\",\n        },\n        clearColorEnabled: {\n            default: true,\n            converter: \"Boolean\",\n        },\n        clearDepthEnabled: {\n            default: true,\n            converter: \"Boolean\",\n        },\n        clearDepth: {\n            default: 1,\n            converter: \"Number\",\n        },\n    };\n\n    public clearColor: Color4;\n\n    public clearColorEnabled: boolean;\n\n    public clearDepth: number;\n\n    public clearDepthEnabled: boolean;\n\n    public _out: Promise<IRenderingTarget>;\n\n    public out: IRenderingTarget;\n\n    public $awake(): void {\n        this.getAttributeRaw(\"clearColor\").boundTo(\"clearColor\");\n        this.getAttributeRaw(\"clearColorEnabled\").boundTo(\"clearColorEnabled\");\n        this.getAttributeRaw(\"clearDepthEnabled\").boundTo(\"clearDepthEnabled\");\n        this.getAttributeRaw(\"clearDepth\").boundTo(\"clearDepth\");\n        this.getAttributeRaw(\"out\").watch((promise: Promise<IRenderingTarget>) => {\n            this._out = promise;\n            promise.then(r => this.out = r);\n        }, true);\n    }\n\n    /**\n     * Setup rendering target(Attaching FBO, clearning depth or color buffers)\n     */\n    protected __beforeRender(): boolean {\n        if (!super.__beforeRender()) {\n            return false;\n        }\n        if (!this.out) {\n            return false;\n        }\n        let clearFlag = 0;\n        if (this.clearColorEnabled) {\n            clearFlag |= WebGLRenderingContext.COLOR_BUFFER_BIT;\n        }\n        if (this.clearDepthEnabled) {\n            clearFlag |= WebGLRenderingContext.DEPTH_BUFFER_BIT;\n        }\n        this.out.beforeDraw(clearFlag, this.clearColor.rawElements as number[], this.clearDepth);\n        return true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/RenderStage/SingleBufferRenderStageBase.ts","import IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Texture2D from \"../../Resource/Texture2D\";\nimport ResizableResourceUpdator from \"./ResizableResourceUpdator\";\nimport TextureContainer from \"./TextureContainer\";\n\nexport default class TextureUpdatorComponentBase extends ResizableResourceUpdator {\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        flipY: {\n            converter: \"Boolean\",\n            default: true,\n        },\n        premultipliedAlpha: {\n            converter: \"Boolean\",\n            default: false,\n        },\n    };\n\n    private textureComponent: TextureContainer;\n    protected get __texture(): Texture2D {\n        return this.textureComponent.texture;\n    }\n\n    public $awake(): void {\n        super.$awake();\n        this.textureComponent = this.node.getComponent(TextureContainer);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/TextureUpdatorComponentBase.ts","/**\n * Resolve resources with caching.\n */\nexport default class CacheResolver<T> {\n  public cache: { [key: string]: T } = {};\n\n  public resolvers: { [key: string]: Promise<T> } = {};\n\n  constructor(public toAbsolute: (relative: string) => string) {\n\n  }\n\n  public async resolve(src: string, resolver: (abs: string) => Promise<T>): Promise<T> {\n    const abs = this.toAbsolute(src);\n    if (this._cached(abs)) {\n      return this.cache[abs];\n    } else if (this._resolving(abs)) {\n      return await this.resolvers[abs];\n    } else {\n      this.resolvers[abs] = resolver(abs);\n      const result = await this.resolvers[abs];\n      this._resolved(abs, result);\n      return result;\n    }\n  }\n\n  private _cached(abs: string): boolean {\n    return typeof this.cache[abs] !== \"undefined\";\n  }\n\n  private _resolving(abs: string): boolean {\n    return typeof this.resolvers[abs] !== \"undefined\";\n  }\n\n  private _resolved(abs: string, result: T): void {\n    delete this.resolvers[abs];\n    this.cache[abs] = result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Asset/CacheResolver.ts","import CacheResolver from \"./CacheResolver\";\nexport default class ExternalResourceResolver<T> extends CacheResolver<T> {\n\n  /**\n   * Check specified url is dataUrl or not\n   * @param  {string}  dataUrl [description]\n   * @return {boolean}         [description]\n   */\n  public static isDataURL(dataUrl: string): boolean {\n      return !!dataUrl.match(/^\\s*data\\:.*;base64/);\n  }\n\n  /**\n   * Make sure that is data URL.\n   * @param  {string} href [description]\n   * @return {string}      [description]\n   */\n  private static _toAbsolute(href: string): string {\n    if (href.match(/^blob\\:/m) || ExternalResourceResolver.isDataURL(href)) { // the specified address is blob URL\n      return href;\n    }\n    const link = document.createElement(\"a\");\n    link.href = href;\n    return (link.protocol + \"//\" + link.host + link.pathname + link.search + link.hash);\n  }\n\n  constructor() {\n    super(ExternalResourceResolver._toAbsolute);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Asset/ExternalResourceResolver.ts","import ExternalResourceResolver from \"./ExternalResourceResolver\";\nexport class ImageResolver extends ExternalResourceResolver<HTMLImageElement> {\n\n    public static defaultCORSConfig = \"anonymous\";\n\n    /**\n     * Cors config resolvers.\n     * If all of resolvers returns null, defaultCORSConfig will be used.\n     */\n    public static corsResolvers: ((path: string) => string)[] = [];\n\n    public resolve(path: string): Promise<HTMLImageElement> {\n        return super.resolve(path, (abs) => {\n            return new Promise((resolve, reject) => {\n                const imgTag = new Image();\n                imgTag.crossOrigin = this._getCORSConfig(abs);\n                imgTag.onload = () => {\n                    resolve(imgTag);\n                };\n                imgTag.onerror = (e) => {\n                    reject(`Error has been occured during loading \"${abs}(${path})\"\\n${e}`);\n                };\n                imgTag.src = abs;\n            });\n        });\n    }\n\n    private _getCORSConfig(path: string): string {\n      let corsConfig = null;\n      for (let i = 0; i < ImageResolver.corsResolvers.length; i++) {\n        corsConfig = ImageResolver.corsResolvers[i](path);\n        if (corsConfig !== null) {\n          break;\n        }\n      }\n      if (corsConfig === null) {\n        corsConfig = ImageResolver.defaultCORSConfig;\n      }\n      return corsConfig;\n    }\n}\n\nexport default new ImageResolver();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Asset/ImageResolver.ts","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport DefaultLoaderChunk from \"raw-loader!../Asset/defaultLoader.html\";\nimport AssetLoader from \"../Asset/AssetLoader\";\n\n/**\n * アセットの読み込みを司るコンポーネント。ローダーの表示などを司る。\n */\nexport default class AssetLoadingManagerComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    /**\n     * ローディング状況(読み取り専用)\n     *\n     * 現在の読み込み状況を0-1で表す。\n     */\n    loadingProgress: {\n      default: 0,\n      converter: \"Number\",\n    },\n    /**\n     * リソースの読み込み完了後に、自動的にレンダリングループを開始するかどうか\n     */\n    autoStart: {\n      default: true,\n      converter: \"Boolean\",\n    },\n    /**\n     * リソースのロード時にローディング画面を表示するかどうか\n     */\n    enableLoader: {\n      default: true,\n      converter: \"Boolean\",\n    },\n  };\n\n  public loader: AssetLoader = new AssetLoader();\n\n  private _documentResolver: () => void;\n\n  private _loaderElement: Element;\n\n  public $treeInitialized(): void {\n    if (this.getAttribute(\"autoStart\")) {\n      this._autoStart();\n    }\n    this._documentResolver();\n  }\n\n  public $awake(): void {\n    this.companion.set(this.name.ns.for(\"loader\"), this.loader);\n    this.loader.register(new Promise((resolve) => { this._documentResolver = resolve; }), this);\n    const canvasContainer = this.companion.get(\"canvasContainer\") as HTMLDivElement;\n    if (!this.getAttribute(\"enableLoader\")) {\n      return;\n    }\n    const loaderContainer = document.createElement(\"div\");\n    loaderContainer.innerHTML = DefaultLoaderChunk;\n    loaderContainer.style.width = loaderContainer.style.height = \"100%\";\n    canvasContainer.appendChild(loaderContainer);\n    this._loaderElement = loaderContainer;\n  }\n\n  private async _autoStart(): Promise<void> {\n    await this.loader.promise;\n    if (this._loaderElement) {\n      this._loaderElement.remove();\n    }\n    this.node.emit(\"asset-load-completed\");\n    this.tree(\"goml\").setAttribute(\"loopEnabled\", true);\n    const canvas = this.companion.get(\"canvasElement\") as HTMLCanvasElement;\n    canvas.classList.add(\"gr-resource-loaded-canvas\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/AssetLoadingManagerComponent.ts","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS.Base.Namespace;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs/ref/Base/Namespace.js\n// module id = 35\n// module chunks = 0","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS&&window.GrimoireJS.lib.math?window.GrimoireJS.lib.math.GLM:undefined;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs-math/ref/GLM.js\n// module id = 36\n// module chunks = 0","import IMaterialArgument from \"./IMaterialArgument\";\nimport Pass from \"./Pass\";\nimport ITechniqueRecipe from \"./Schema/ITechniqueRecipe\";\nimport Technique from \"./Technique\";\n/**\n * Provides abstraction of configurations for multiple shaders.\n */\nexport default class Material {\n\n    public techniques: { [key: string]: Technique } = {};\n\n    constructor(public gl: WebGLRenderingContext, public techniqueRecipes: { [key: string]: ITechniqueRecipe }) {\n        for (const key in techniqueRecipes) {\n            this.techniques[key] = new Technique(this, techniqueRecipes[key]);\n        }\n    }\n\n    public draw(arg: IMaterialArgument): void {\n        const technique = this.techniques[arg.technique];\n        if (technique) {\n            technique.draw(arg);\n        }\n    }\n\n    /**\n     * Clone this material to new instance.\n     * @return {Material} new material instance\n     */\n    public clone(): Material {\n        const cloned = new Material(this.gl, this.techniqueRecipes);\n        for (const techniqueKey in this.techniques) {\n          const technique = this.techniques[techniqueKey];\n          const destTechnique = cloned.techniques[techniqueKey];\n          for (const passIndex in technique.passes) {\n            const pass = technique.passes[passIndex];\n            const destPass = destTechnique.passes[passIndex];\n            for (const argument in pass.arguments) {\n              destPass[argument] = pass[argument];\n            }\n          }\n        }\n        return cloned;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Material.ts","export type TypedArrayConstructor = (new (length: number) => ArrayBufferView) & (new (array: ArrayLike<number>) => ArrayBufferView) & (new (buffer: ArrayBufferLike, byteOffset?: number, length?: number) => ArrayBufferView);\n/**\n * Provides misc features for WebGL.\n * Typically not limited to specific context.\n */\nexport default class GLUtility {\n    /**\n     * Obtain typed array constructor from GL type.\n     * @param type\n     */\n    public static typeToTypedArrayConstructor(type: number): TypedArrayConstructor {\n        switch (type) {\n            case WebGLRenderingContext.UNSIGNED_BYTE:\n                return Uint8Array;\n            case WebGLRenderingContext.UNSIGNED_SHORT:\n                return Uint16Array;\n            case WebGLRenderingContext.UNSIGNED_INT:\n                return Uint32Array;\n            case WebGLRenderingContext.BYTE:\n                return Int8Array;\n            case WebGLRenderingContext.SHORT:\n                return Int16Array;\n            case WebGLRenderingContext.INT:\n                return Int32Array;\n            case WebGLRenderingContext.FLOAT:\n                return Float32Array;\n            default:\n                throw new Error(`Element type ${type} is not valid for buffer elements`);\n        }\n    }\n\n    /**\n     * Obtain GL type from typed array buffer view.\n     * @param buffer\n     */\n    public static arrayBufferToElementType(buffer: ArrayBufferView) {\n        if (buffer instanceof Uint8Array) {\n            return WebGLRenderingContext.UNSIGNED_BYTE;\n        }\n        if (buffer instanceof Uint16Array) {\n            return WebGLRenderingContext.UNSIGNED_SHORT;\n        }\n        if (buffer instanceof Uint32Array) {\n            return WebGLRenderingContext.UNSIGNED_INT;\n        }\n        if (buffer instanceof Int8Array) {\n            return WebGLRenderingContext.BYTE;\n        }\n        if (buffer instanceof Int16Array) {\n            return WebGLRenderingContext.SHORT;\n        }\n        if (buffer instanceof Int32Array) {\n            return WebGLRenderingContext.INT;\n        }\n        if (buffer instanceof Float32Array) {\n            return WebGLRenderingContext.FLOAT;\n        }\n        throw new Error(\"Unknown buffer element type\");\n    }\n\n    /**\n     *\n     * @param format\n     */\n    public static formatToElementCount(format: number): number {\n        switch (format) {\n            case WebGLRenderingContext.RGBA:\n                return 4;\n            case WebGLRenderingContext.RGB:\n                return 3;\n            default:\n                throw new Error(\"Unknown buffer format\");\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/GLUtility.ts","import IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Material from \"../Material/Material\";\nimport MaterialFactory from \"../Material/MaterialFactory\";\nimport MaterialContainerBase from \"./MaterialContainerBase\";\nexport default class MaterialComponent extends MaterialContainerBase {\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        type: {\n            converter: \"String\",\n            default: null,\n        },\n    };\n\n    public materialPromise: Promise<Material>;\n\n    public material: Material;\n\n    public ready: boolean;\n\n    public materialArgs: { [key: string]: any } = {};\n\n    public $mount(): void {\n        const typeName = this.getAttribute(\"type\");\n        if (typeName && typeof typeName === \"string\") {\n            const materialFactory = MaterialFactory.get(this.companion.get(\"gl\"));\n            this.materialPromise = materialFactory.instanciate(typeName);\n            this._registerAttributes();\n        } else {\n            throw new Error(\"Material type name must be sppecified and string\");\n        }\n    }\n\n    private async _registerAttributes(): Promise<void> {\n        this.material = await this.materialPromise;\n        this.__exposeMaterialParameters(this.material);\n        this.ready = true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/MaterialComponent.ts","import Namespace from \"grimoirejs/ref/Base/Namespace\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Material from \"../Material/Material\";\nimport BasicComponent from \"./BasicComponent\";\n\n/**\n * Base class for container component for material and material arguments.\n * Basically used for MaterialComponent and MaterialContainerComponent\n */\nexport default class MaterialContainerBase extends BasicComponent {\n\n  protected _lastParameters: { [key: string]: IAttributeDeclaration & { __lastValue?: any } } = {};\n\n  /**\n   * Expose sepcified parameters as attribute parameters on this component\n   * @param {Material} material [description]\n   */\n  protected __exposeMaterialParameters(material: Material, keepVariable = true): void {\n    const nextParameters: { [key: string]: IAttributeDeclaration } = {};\n    for (const techniqueName in material.techniques) {\n      const technique = material.techniques[techniqueName];\n      for (const passIndex in technique.passes) {\n        const pass = technique.passes[passIndex];\n        const passNamespace = Namespace.define(`${techniqueName}.pass${passIndex}`);\n        for (const argumentKey in pass.argumentDeclarations) {\n          const argumentFQN = passNamespace.for(argumentKey).fqn;\n          // Register pass variable as a attribute of this tag.\n          // Pass variables are registered with nested namespaces as following syntax.\n          // ${techniqueName}.pass${passIndex}.${variableName}\n          // EX) hitarea.pass0.enabled\n          nextParameters[argumentFQN] = pass.argumentDeclarations[argumentKey];\n          this.__addAttribute(argumentFQN, pass.argumentDeclarations[argumentKey]);\n          try {\n            if (typeof pass.arguments[argumentKey] !== \"undefined\") {\n              this.setAttribute(argumentFQN, pass.arguments[argumentKey]);\n            } else if (keepVariable && this._lastParameters[argumentFQN] !== void 0 && this._lastParameters[argumentFQN].converter === pass.argumentDeclarations[argumentKey].converter) {\n              this.setAttribute(argumentFQN, this._lastParameters[argumentFQN].__lastValue);\n            }\n            // Register handlers to update pass variables when tag variable was changed\n            this.getAttributeRaw(argumentFQN).watch((n, o) => {\n              pass.setArgument(argumentKey, n, o);\n            }, true);\n          } catch (e) {\n            throw new Error(\"Parsing variable failed\");\n          }\n        }\n      }\n    }\n    this._lastParameters = nextParameters;\n  }\n\n  protected __removeExposedMaterialParameters(): void {\n    for (const key in this._lastParameters) {\n      this._lastParameters[key].__lastValue = this.getAttribute(key);\n      this.__removeAttributes(key);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/MaterialContainerBase.ts","import Viewport from \"../Viewport\";\nimport IRenderingTarget from \"./IRenderingTarget\";\n\n/**\n * Rendering target to render into canvas\n */\nexport default class CanvasRenderingTarget implements IRenderingTarget {\n    public beforeDraw(clearFlag: number, color: number[], depth: number): void {\n        this.gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, null);\n        if (clearFlag){\n            this.__configureClearScissor();\n            let clearTarget = 0;\n            if ((clearFlag & WebGLRenderingContext.COLOR_BUFFER_BIT) !== 0 && color) {\n                this.gl.clearColor.apply(this.gl, color);\n                clearTarget |= WebGLRenderingContext.COLOR_BUFFER_BIT;\n            }\n            if ((clearFlag & WebGLRenderingContext.DEPTH_BUFFER_BIT) !== 0 && depth !== null) {\n                this.gl.clearDepth(depth);\n                clearTarget |= WebGLRenderingContext.DEPTH_BUFFER_BIT;\n            }\n            if (clearTarget !== 0) {\n                this.gl.clear(clearTarget);\n            }\n        }\n        this.getViewport().configure(this.gl);\n    }\n    /**\n     * Actual buffer width of rendered buffer.\n     * This value can't be changed by viewport.\n     * Just depending on canvas size.\n     */\n    public getBufferWidth(): number {\n        return this.gl.canvas.width;\n    }\n    /**\n     * Actual buffer height of rendered buffer.\n     * This value can't be changed by viewport.\n     * Just depending on canvas size.\n     */\n    public getBufferHeight(): number {\n        return this.gl.canvas.height;\n    }\n    public getViewport(): Viewport {\n        return new Viewport(0, 0, this.getBufferWidth(), this.getBufferHeight());\n    }\n\n    protected __configureClearScissor(): void{\n        this.gl.disable(WebGLRenderingContext.SCISSOR_TEST);\n    }\n\n    constructor(public gl: WebGLRenderingContext){\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/RenderingTarget/CanvasRenderingTarget.ts","import GLResource from \"./GLResource\";\nimport RenderBuffer from \"./RenderBuffer\";\nimport Texture2D from \"./Texture2D\";\n\nexport default class FrameBuffer extends GLResource<WebGLFramebuffer> {\n  constructor(gl: WebGLRenderingContext) {\n    super(gl, gl.createFramebuffer());\n  }\n\n  public update(boundTo: RenderBuffer, attachTo?: number): void;\n  public update(boundTo: Texture2D, level?: number, bindIndex?: number): void;\n  public update(boundTo: Texture2D | RenderBuffer, level?: number, bindIndex?: number): void {\n    this.gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, this.resourceReference);\n    if (boundTo instanceof Texture2D) {\n      if (typeof bindIndex === \"undefined\") {\n        bindIndex = 0;\n      }\n      if (typeof level === \"undefined\") {\n        level = 0;\n      }\n      this.gl.framebufferTexture2D(WebGLRenderingContext.FRAMEBUFFER, WebGLRenderingContext.COLOR_ATTACHMENT0 + bindIndex, WebGLRenderingContext.TEXTURE_2D, boundTo.resourceReference, level);\n      if (this.gl.checkFramebufferStatus(WebGLRenderingContext.FRAMEBUFFER) !== WebGLRenderingContext.FRAMEBUFFER_COMPLETE) {\n        throw new Error(\"INCOMPLETE framebuffer\");\n      }\n    } else if (boundTo instanceof RenderBuffer) {\n      const registerTarget: number = typeof level === \"undefined\" ? WebGLRenderingContext.DEPTH_ATTACHMENT : level;\n      this.gl.framebufferRenderbuffer(WebGLRenderingContext.FRAMEBUFFER, registerTarget, WebGLRenderingContext.RENDERBUFFER, boundTo.resourceReference);\n    }\n    this.gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, null);\n  }\n\n  public bind(): void {\n    this.gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, this.resourceReference);\n  }\n\n  public destroy(): void {\n    super.destroy();\n    this.gl.deleteFramebuffer(this.resourceReference);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/FrameBuffer.ts","import IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport RenderBuffer from \"../../Resource/RenderBuffer\";\nimport RenderingBufferResourceRegistry from \"../../Resource/RenderingTarget/RenderingBufferResourceRegistry\";\nimport ResizableResourceUpdator from \"./ResizableResourceUpdator\";\nexport default class RenderBufferComponent extends ResizableResourceUpdator {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    name: {\n      converter: \"String\",\n      default: null,\n    },\n  };\n\n  public buffer: RenderBuffer;\n\n  public $awake(): void {\n    super.$awake();\n    this.buffer = new RenderBuffer(this.companion.get(\"gl\"));\n    this.buffer.update(WebGLRenderingContext.DEPTH_COMPONENT16, 1, 1);\n    const name = this.getAttribute(\"name\");\n    if (name) {\n      RenderingBufferResourceRegistry.get(this.companion.get(\"gl\")).setDepthBuffer(name, this.buffer);\n    }\n  }\n\n  public $unmount(): void {\n    this.buffer.destroy();\n    this.buffer = null;\n  }\n\n  public resize(width: number, height: number): void {\n    this.buffer.update(WebGLRenderingContext.DEPTH_COMPONENT16, width, height);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/RenderBufferUpdator.ts","import Vector2 from \"grimoirejs-math/ref/Vector2\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport ResourceResizerComponentBase from \"./ResourceResizerComponentBase\";\n\n/**\n * Resource resizer that resizes all of ResizableResourceUpdator bounded to this node.\n * This resource resizer will resize by given resolution attribute.\n */\nexport default class ConstantSizeResourceResizer extends ResourceResizerComponentBase {\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        resolution: {\n            converter: \"Vector2\",\n            default: \"512,512\",\n        },\n    };\n\n    public $mount(): void {\n        this.getAttributeRaw(\"resolution\").watch(n => {\n            const res = n as Vector2;\n            this.__resizeResources(res.X, res.Y);\n        }, true);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/ConstantSizeResourceResizer.ts","import Vector2 from \"grimoirejs-math/ref/Vector2\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport IResizeViewportMessage from \"../../Messages/IResizeViewportMessage\";\nimport RendererComponent from \"../RendererComponent\";\nimport ResourceResizerComponentBase from \"./ResourceResizerComponentBase\";\n\n/**\n * Resource resizer that resizes all of ResizableResourceUpdator bounded to this node.\n * This resource resizer will resize these by considering viewport size.\n */\nexport default class ViewportSizeResourceResizer extends ResourceResizerComponentBase {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    resolutionScale: {\n      converter: \"Vector2\",\n      default: \"1\",\n    },\n    keepPow2Size: {\n      converter: \"Boolean\",\n      default: true,\n    },\n  };\n\n  public $mount(): void {\n    const renderer = this.node.getComponentInAncestor(RendererComponent);\n    if (renderer) {\n      this.__resizeResources(renderer.viewport.Width, renderer.viewport.Height);\n    } else {\n      throw new Error(\"Resizable resource with ViewportSizeResourceResizer must be child of RendererComponent\");\n    }\n  }\n\n  public $resizeViewport(arg: IResizeViewportMessage): void {\n    const scale = this.getAttribute(\"resolutionScale\") as Vector2;\n    this.__resizeResources(arg.width * scale.X, arg.height * scale.Y);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/ViewportSizeResourceResizer.ts","import Vector4 from \"grimoirejs-math/ref/Vector4\";\nconst rc = 511;\nconst gc = rc << 8;\nconst bc = gc << 8;\nconst ac = bc << 8;\nexport default class MeshIndexCalculator {\n  public static fromIndex(index: number): Vector4 {\n    return new Vector4((index & rc) / 255, ((index & gc) >> 8) / 255, ((index & bc) >> 16) / 255, ((index & ac) >> 24) / 255);\n  }\n\n  public static fromColor(color: Uint8Array): number {\n    return color[0] + (color[1] << 8) + (color[2] << 16) + (color[3] << 24);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Util/MeshIndexCalculator.ts","import GrimoireJS from \"grimoirejs\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport IRenderRendererMessage from \"../../Messages/IRenderRendererMessage\";\nimport CameraComponent from \"../CameraComponent\";\nimport SingleBufferRenderStageBase from \"./SingleBufferRenderStageBase\";\nexport default class RenderSceneComponent extends SingleBufferRenderStageBase {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    layer: {\n      converter: \"String\",\n      default: \"default\",\n    },\n    camera: {\n      default: null,\n      converter: \"Component\",\n      target: \"Camera\",\n    },\n    technique: {\n      default: \"default\",\n      converter: \"String\",\n    },\n  };\n\n  public layer: string;\n\n  public camera: CameraComponent;\n\n  public technique: string;\n\n  private _gl: WebGLRenderingContext;\n\n  // messages\n\n  public $awake(): void {\n    super.$awake();\n    this.metadata.type = \"scene\";\n    this.getAttributeRaw(\"layer\").boundTo(\"layer\");\n    this.getAttributeRaw(\"camera\").boundTo(\"_camera\");\n    this.getAttributeRaw(\"technique\").boundTo(\"technique\");\n    this.getAttributeRaw(\"camera\").watch((cam: CameraComponent) => {\n      this.metadata.camera = cam ? cam.node.id : null;\n    }, true);\n    this.getAttributeRaw(\"technique\").watch((t: string) => {\n      this.metadata.technique = t;\n    }, true);\n    this.getAttributeRaw(\"layer\").watch((t: string) => {\n      this.metadata.layer = t;\n    }, true);\n  }\n\n  public $mount(): void {\n    this._gl = this.companion.get(\"gl\");\n  }\n\n  public $render(args: IRenderRendererMessage): void {\n    const camera = this.camera ? this.camera : args.camera;\n    if (!camera) {\n      return;\n    }\n    if (!this.__beforeRender()) {\n      return;\n    }\n    camera.updateContainedScene(args.timer);\n    camera.renderScene({\n      renderer: this,\n      camera,\n      layer: this.layer,\n      viewport: this.out.getViewport(),\n      timer: args.timer,\n      technique: this.technique,\n      sceneDescription: {},\n      rendererDescription: this.rendererDescription,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/RenderStage/RenderSceneComponent.ts","import EEObject from \"grimoirejs/ref/Base/EEObject\";\nimport Component from \"grimoirejs/ref/Node/Component\";\ntype AssetLoadingInfoTuple = {\n  promise: Promise<any>,\n  component: Component,\n};\n\n/**\n * Provides managing all promise on initializing resources.\n */\nclass AssetLoader extends EEObject {\n  /**\n   * Promise count registered.\n   * @type {number}\n   */\n  public registerCount = 0;\n  /**\n   * Promise count finished successfully.\n   * @type {number}\n   */\n  public loadCount = 0;\n  /**\n   * Promise count completed(success and errored)\n   * @type {number}\n   */\n  public completeCount = 0;\n  /**\n   * Promise count errored\n   * @type {number}\n   */\n  public errorCount = 0;\n  /**\n   * Main promise to provide tasks for waiting for all resource loading.\n   * @type {Promise<void>}\n   */\n  public promise: Promise<void> = new Promise<void>((resolve) => { this._resolve = resolve; });\n  /**\n   * For memorize resolve function generated by main promise.\n   * @type {[type]}\n   */\n  private _resolve: () => void;\n\n  /**\n   * Register an promise to be waited until finished.\n   */\n  public async register<T>(promise: Promise<T>, component: Component): Promise<T> {\n    this.registerCount++;\n    let result: T = null;\n    try {\n      result = await promise;\n      this.loadCount++;\n    } catch (e) {\n      console.error(`Failed to resolve asset loading promise.\\n\\nLoading fired by: ${component.name.fqn}\\nAttached node:${component.node.name.fqn}\\n${e}`);\n      this.errorCount++;\n    }\n    this.completeCount++;\n    this._checkLoadCompleted();\n    return result;\n  }\n\n  /**\n   * Verify all promises are completed.\n   */\n  private _checkLoadCompleted(): void {\n    this.emit(\"progress\", this);\n    if (this.registerCount === this.completeCount) {\n      this._resolve();\n    }\n  }\n}\nexport default AssetLoader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Asset/AssetLoader.ts","import ExternalResourceResolver from \"./ExternalResourceResolver\";\nexport class TextFileResolver extends ExternalResourceResolver<string> {\n\n  public resolve(path: string): Promise<string> {\n    return super.resolve(path, (abs) => {\n      if (TextFileResolver.isDataURL(abs)) {\n        return Promise.resolve(this._dataUriToText(abs));\n      }\n      return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", abs);\n        xhr.onload = (v) => {\n          resolve(xhr.responseText);\n        };\n        xhr.onerror = (e) => {\n          reject(e);\n        };\n        xhr.send();\n      });\n    });\n  }\n\n  private _dataUriToText(dataUrl: string): string {\n    const splittedUri = dataUrl.split(\",\");\n    const byteString = atob(splittedUri[1]);\n    return byteString;\n}\n}\n\nexport default new TextFileResolver();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Asset/TextFileResolver.ts","/**\n * VideoResolver provides abstraction of loading feature for video element.\n * Despite the other resolvers, VideoResolver doesn't extends ExternalResourceResolver since\n * that element contains frame operation also and it affects frame control in each function of grimoire using.\n * @param  {string}                    path [description]\n * @return {Promise<HTMLVideoElement>}      [description]\n */\nexport class VideoResolver {\n\n    public static defaultCORSConfig = \"anonymous\";\n\n    /**\n     * Cors config resolvers.\n     * If all of resolvers returns null, defaultCORSConfig will be used.\n     */\n    public static corsResolvers: ((path: string) => string)[] = [];\n\n    public resolve(path: string): Promise<HTMLVideoElement> {\n        return new Promise<HTMLVideoElement>((resolve, reject) => {\n            const video = document.createElement(\"video\");\n            video.crossOrigin = this._getCORSConfig(path);\n            video.preload = \"auto\";\n            video.addEventListener(\"canplay\", () => {\n                resolve(video);\n            });\n            video.addEventListener(\"canplaythrough\", () => {\n                resolve(video);\n            });\n            video.onerror = (e) => {\n                reject(`Error has been occured during loading \"${path}\"\\n${e}`);\n            };\n            video.src = path;\n            video.load();\n            if (video.readyState > 3) {\n                resolve(video);\n            }\n        });\n    }\n\n    private _getCORSConfig(path: string): string {\n        let corsConfig = null;\n        for (let i = 0; i < VideoResolver.corsResolvers.length; i++) {\n            corsConfig = VideoResolver.corsResolvers[i](path);\n            if (corsConfig !== null) {\n                break;\n            }\n        }\n        if (corsConfig === null) {\n            corsConfig = VideoResolver.defaultCORSConfig;\n        }\n        return corsConfig;\n    }\n}\n\nexport default new VideoResolver();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Asset/VideoResolver.ts","export default class Timer {\n\n  public timeScale = 1;\n  public fpsRestriction = 60;\n  private _time: number;\n  private _lastRealTime: number;\n  private _unrestrictedLastRealTime: number;\n  private _accumlatedSkipFrame = 0;\n  private _deltaTime: number;\n  private _frameCount = 0;\n  private _lastFPS: number;\n\n  public get deltaTime() {\n    return this._deltaTime;\n  }\n\n  public get time() {\n    return this._time;\n  }\n\n  public get timeInSecound() {\n    return this._time / 1000;\n  }\n\n  public get frameCount() {\n    return this._frameCount;\n  }\n\n  public get FPS() {\n    return this._lastFPS ? this._lastFPS.toFixed(2) : Number.NaN;\n  }\n\n  /**\n   * Do not call this method manually.\n   * This method is only use for internal procedure in framework.\n   * @return {[type]} [description]\n   */\n  public internalUpdate(): boolean {\n    this._frameCount++;\n    const time = Date.now();\n    if (this._shouldUpdate(time)) {\n      this._updateTimer(time);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private _shouldUpdate(time: number): boolean {\n    if (this._time === void 0) {\n      this._unrestrictedLastRealTime = time;\n      return true; // first frame\n    } else {\n      const realDelta = time - this._unrestrictedLastRealTime;\n      const idealDelta = 1000 / this.fpsRestriction;\n      this._unrestrictedLastRealTime = time;\n      if (Math.abs(idealDelta - realDelta * 2.0 - this._accumlatedSkipFrame) < Math.abs(idealDelta - realDelta - this._accumlatedSkipFrame)) {\n        this._accumlatedSkipFrame += realDelta;\n        return false;\n      } else {\n        this._accumlatedSkipFrame = 0;\n        return true;\n      }\n    }\n  }\n\n  private _updateTimer(time: number): void {\n    if (this._lastRealTime === undefined) {\n      this._time = 0;\n      this._deltaTime = 0;\n    } else {\n      this._deltaTime = time - this._lastRealTime;\n      this._time += this.timeScale * this._deltaTime;\n    }\n    this._lastRealTime = time;\n    if (this._lastFPS === undefined) {\n      if (this.deltaTime !== 0) {\n        this._lastFPS = 1000 / this.deltaTime;\n      }\n    } else {\n      this._lastFPS = (this._lastFPS + (1000 / this.deltaTime)) / 2;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Util/Timer.ts","import GLM from \"grimoirejs-math/ref/GLM\";\nconst { vec3, vec4, mat4 } = GLM;\nimport Matrix from \"grimoirejs-math/ref/Matrix\";\nimport Vector3 from \"grimoirejs-math/ref/Vector3\";\nimport Vector4 from \"grimoirejs-math/ref/Vector4\";\nimport Component from \"grimoirejs/ref/Node/Component\";\nimport GomlNode from \"grimoirejs/ref/Node/GomlNode\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport IRenderArgument from \"../SceneRenderer/IRenderArgument\";\nimport RenderQueue from \"../SceneRenderer/RenderQueue\";\nimport Timer from \"../Util/Timer\";\nimport SceneComponent from \"./SceneComponent\";\nimport TransformComponent from \"./TransformComponent\";\n/**\n * シーンを描画するカメラのコンポーネント\n * このコンポーネントによって、透視射影や正方射影などの歪みを調整します。\n * また、このコンポーネントの付属するノードに属する`Transoform`によって、カメラの位置や向きが確定されます。\n */\nexport default class CameraComponent extends Component {\n\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        /**\n         * カメラの視野角。\n         * orthogonal属性がtrueである場合この属性は無視されます。\n         */\n        fovy: {\n            default: \"45d\",\n            converter: \"Angle2D\",\n        },\n        /**\n         * カメラに映るもっとも近い距離です。\n         * 0よりも大きく、far属性よりも小さい必要があります。\n         */\n        near: {\n            default: 0.01,\n            converter: \"Number\",\n        },\n        /**\n         * カメラに映る最も遠い距離です。\n         * near属性よりも大きい必要があります。\n         *\n         * far - nearの値があまりにも大きいと、Z-fighting(手前の物体が奥に表示されたように見えたりする)現象が起きる可能性があります。\n         * この差があまりに大きい時、カメラに映る物体の座標の小さいz座標の値の差は0に近似されます。\n         * 逆にこの値が小さい時は、カメラに映る物体はある程度小さいz座標の差でも問題なく表示されます。\n         * **大切なのは、写したい空間よりも無駄に大きくしないこと。常に適切な値を設定するべきです**\n         */\n        far: {\n            default: 100,\n            converter: \"Number\",\n        },\n        /**\n         * カメラのアスペクト比\n         * カメラの横の大きさと縦の大きさの比率を指定します。autoAspect属性がtrueである時、毎回のレンダリング時にこの値を自動調整します。\n         */\n        aspect: {\n            default: 1.6,\n            converter: \"Number\",\n        },\n        /**\n         * アスペクト比の自動調整が有効か否か\n         * レンダリング時にそのビューポートの大きさに応じて比率を自動調整するかどうかを示します。\n         */\n        autoAspect: {\n            default: true,\n            converter: \"Boolean\",\n        },\n        /**\n         * 正射影時の横の基準サイズ\n         * 正射影時はfovy属性を用いて自動的に写す領域を決定できません。\n         * そのため、横の一片のサイズをこの属性で指定します。**アスペクト比は計算に用いられることに注意してください。**\n         */\n        orthoSize: {\n            default: 100,\n            converter: \"Number\",\n        },\n        /**\n         * このカメラが正射影かどうか\n         *\n         * この属性がfalseである場合、カメラは透視射影としてシーンをレンダリングします。この場合、レンダリング結果にパース(奥行き感)が出ます。\n         * 一方、この属性がtrueである場合、カメラは正射影としてシーンをレンダリングします。この場合、レンダリング結果には奥行き感は出ません。\n         */\n        orthogonal: {\n            default: false,\n            converter: \"Boolean\",\n        },\n    };\n\n    private static _frontOrigin: Vector4 = new Vector4(0, 0, -1, 0);\n    private static _upOrigin: Vector4 = new Vector4(0, 1, 0, 0);\n\n    public containedScene: SceneComponent;\n\n    public transform: TransformComponent;\n\n    protected __viewMatrix: Matrix = new Matrix();\n    protected __projectionMatrix: Matrix = new Matrix();\n    protected __invProjectionMatrix: Matrix = new Matrix();\n    protected __projectionViewMatrix: Matrix = new Matrix();\n\n    private _autoAspect: boolean;\n\n    private _aspectCache: number;\n\n    private _renderQueue: RenderQueue = new RenderQueue();\n\n    private _eyeCache: Vector3 = Vector3.Zero;\n    private _lookAtCache: Vector3 = Vector3.Zero;\n    private _upCache: Vector3 = Vector3.Zero;\n    private _far: number;\n    private _near: number;\n    private _fovy: number;\n    private _orthoSize: number;\n    private _aspect: number;\n    private _orthographic = false;\n\n    public get ViewMatrix(): Matrix {\n        return this.__viewMatrix;\n    }\n    public get ProjectionMatrix(): Matrix {\n        return this.__projectionMatrix;\n    }\n    public get InvProjectionMatrix(): Matrix {\n        return this.__invProjectionMatrix;\n    }\n    public get ProjectionViewMatrix(): Matrix {\n        return this.__projectionViewMatrix;\n    }\n    public get Far(): number {\n        return this._far;\n    }\n    public set Far(far: number) {\n        this._far = far;\n        this._recalculateProjection();\n    }\n    public get Near(): number {\n        return this._near;\n    }\n    public set Near(near: number) {\n        this._near = near;\n        this._recalculateProjection();\n    }\n    public get Aspect(): number {\n        return this._aspect;\n    }\n    public set Aspect(aspect: number) {\n        this._aspect = aspect;\n        this._recalculateProjection();\n    }\n    public get Fovy(): number {\n        return this._fovy;\n    }\n\n    public set Fovy(fov: number) {\n        this._fovy = fov;\n        this._recalculateProjection();\n    }\n\n    public get OrthoSize(): number {\n        return this._orthoSize;\n    }\n\n    public set OrthoSize(size: number) {\n        this._orthoSize = size;\n    }\n\n    public set OrthographicMode(isOrtho: boolean) {\n        this._orthographic = isOrtho;\n        this._recalculateProjection();\n    }\n\n    public get OrthographicMode(): boolean {\n        return this._orthographic;\n    }\n\n    public set AutoAspect(autoMode: boolean) {\n        if (this._autoAspect !== autoMode) {\n            this._autoAspect = autoMode;\n            this._recalculateProjection();\n        }\n    }\n\n    public get AutoAspect(): boolean {\n        return this._autoAspect;\n    }\n\n    /**\n   * Find scene tag recursively.\n   * @param  {GomlNode}       node [the node to searching currently]\n   * @return {SceneComponent}      [the scene component found]\n   */\n    private static _findContainedScene(node: GomlNode): SceneComponent {\n        if (node.parent) {\n            const scene = node.parent.getComponent(SceneComponent);\n            if (scene) {\n                return scene;\n            } else {\n                return CameraComponent._findContainedScene(node.parent);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    public $awake(): void {\n        this.getAttributeRaw(\"far\").watch((v) => {\n            this.Far = v;\n        }, true);\n        this.getAttributeRaw(\"near\").watch((v) => {\n            this.Near = v;\n        }, true);\n        this.getAttributeRaw(\"fovy\").watch((v) => {\n            this.Fovy = v;\n        }, true);\n        this.getAttributeRaw(\"aspect\").watch((v) => {\n            this.Aspect = v;\n        }, true);\n        this.getAttributeRaw(\"orthoSize\").watch((v) => {\n            this.OrthoSize = v;\n        }, true);\n        this.getAttributeRaw(\"orthogonal\").watch((v) => {\n            this.OrthographicMode = v;\n        }, true);\n        this.getAttributeRaw(\"autoAspect\").boundTo(\"_autoAspect\");\n    }\n\n    public $mount(): void {\n        this.transform = this.node.getComponent(TransformComponent);\n        this.containedScene = CameraComponent._findContainedScene(this.node);\n        this.containedScene.queueRegistory.registerQueue(this._renderQueue);\n        this.node.on(\"transformUpdated\", this.updateTransform.bind(this));\n        this.updateTransform();\n    }\n\n    public $unmount(): void {\n        this.containedScene.queueRegistory.unregisterQueue(this._renderQueue);\n        this.containedScene = null;\n    }\n\n    /**\n     * Convert global position of transoform to viewport relative position.\n     * @param  {TransformComponent} transform The transform to convert position\n     * @return {Vector3}                      Viewport relative position\n     */\n    public getViewportRelativePosition(transform: TransformComponent): Vector3;\n    /**\n     * Convert specified world position to viewport relative position.\n     * @param  {Vector3} worldPos [description]\n     * @return {Vector3}          [description]\n     */\n    public getViewportRelativePosition(worldPos: Vector3): Vector3;\n    public getViewportRelativePosition(input: Vector3 | TransformComponent): Vector3 {\n        let inputVector;\n        if (input instanceof TransformComponent) {\n            inputVector = input.globalPosition;\n        } else {\n            inputVector = input;\n        }\n        return Matrix.transformPoint(this.ProjectionViewMatrix, inputVector);\n    }\n\n    public updateContainedScene(timer: Timer): void {\n        if (this.containedScene) {\n            this.containedScene.updateScene(timer);\n        }\n    }\n\n    public renderScene(args: IRenderArgument): void {\n        if (this.containedScene) {\n            this._justifyAspect(args);\n            args.sceneDescription = this.containedScene.sceneDescription;\n            this._renderQueue.renderAll(args);\n        }\n    }\n\n    public updateTransform(): void {\n        const transform = this.transform;\n        vec3.transformMat4(this._eyeCache.rawElements, Vector3.Zero.rawElements, transform.globalTransform.rawElements);\n        vec4.transformMat4(this._lookAtCache.rawElements, CameraComponent._frontOrigin.rawElements, transform.globalTransform.rawElements);\n        vec3.add(this._lookAtCache.rawElements, this._lookAtCache.rawElements, this._eyeCache.rawElements);\n        vec4.transformMat4(this._upCache.rawElements, CameraComponent._upOrigin.rawElements, transform.globalTransform.rawElements);\n        mat4.lookAt(this.__viewMatrix.rawElements, this._eyeCache.rawElements, this._lookAtCache.rawElements, this._upCache.rawElements);\n        mat4.mul(this.__projectionViewMatrix.rawElements, this.__projectionMatrix.rawElements, this.__viewMatrix.rawElements);\n    }\n\n    private _justifyAspect(args: IRenderArgument): void {\n        if (this._autoAspect) {\n            const asp = args.viewport.Width / args.viewport.Height;\n            if (this._aspectCache !== asp) { // Detect changing viewport size\n                this.setAttribute(\"aspect\", asp);\n                this._aspectCache = asp;\n            }\n        }\n    }\n\n    private _recalculateProjection(): void {\n        if (!this._orthographic) {\n            mat4.perspective(this.__projectionMatrix.rawElements, this._fovy, this._aspect, this._near, this._far);\n        } else {\n            mat4.ortho(this.__projectionMatrix.rawElements, -this._orthoSize * this._aspect, this._orthoSize * this._aspect, -this._orthoSize, this._orthoSize, this._near, this._far);\n        }\n        mat4.mul(this.__projectionViewMatrix.rawElements, this.__projectionMatrix.rawElements, this.__viewMatrix.rawElements);\n        mat4.invert(this.__invProjectionMatrix.rawElements, this.__projectionMatrix.rawElements);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/CameraComponent.ts","import IRenderable from \"./IRenderable\";\nimport IRenderArgument from \"./IRenderArgument\";\ntype RenderElement = {\n  renderable: IRenderable;\n  priortyCache: number;\n};\n\ntype SortedRenderablesDictionary = {\n  rendarables: RenderElement[];\n  lastFrame: number;\n};\n\nexport default class RenderQueue {\n  private _sortedRenderablesByTechniques: { [technique: string]: SortedRenderablesDictionary } = {};\n\n  private _rendeables: IRenderable[] = [];\n\n  public add(rendarable: IRenderable): void {\n    this._rendeables.push(rendarable);\n    for (const technique in this._sortedRenderablesByTechniques) {\n      this._sortedRenderablesByTechniques[technique].rendarables.push({ renderable: rendarable, priortyCache: 0 });\n    }\n  }\n\n  public remove(rendarable: IRenderable): void {\n    this._removeFromRenderables(rendarable, this._rendeables);\n    for (const tech in this._sortedRenderablesByTechniques) {\n      this._removeFromRenderables(rendarable, this._sortedRenderablesByTechniques[tech].rendarables);\n    }\n  }\n\n  public renderAll(args: IRenderArgument): void {\n    const targetTechnique = args.sortingTechnique || args.technique;\n    this._ensureCacheForTechnique(targetTechnique);\n    this._sortForTechnique(args, targetTechnique);\n    this._sortedRenderablesByTechniques[targetTechnique].rendarables.forEach((r) => {\n      r.renderable.render(args);\n    });\n  }\n\n  private _sortForTechnique(args: IRenderArgument, technique: string): void {\n    const techniqueCache = this._sortedRenderablesByTechniques[technique];\n    if (techniqueCache.lastFrame === args.timer.frameCount) {\n      return;\n    } else {\n      for (let i = 0; i < techniqueCache.rendarables.length; i++) {\n        techniqueCache.rendarables[i].priortyCache = techniqueCache.rendarables[i].renderable.getRenderingPriorty(args.camera, technique);\n      }\n      techniqueCache.rendarables.sort((a, b) => a.priortyCache - b.priortyCache);\n      techniqueCache.lastFrame = args.timer.frameCount;\n    }\n  }\n\n  private _ensureCacheForTechnique(technique: string): void {\n    if (this._sortedRenderablesByTechniques[technique]) {\n      return;\n    }\n    this._sortedRenderablesByTechniques[technique] = {\n      lastFrame: -1,\n      rendarables: this._rendeables.map(r => {\n        return {\n          renderable: r,\n          priortyCache: -1,\n        };\n      }),\n    };\n  }\n\n  private _removeFromRenderables(renderable: IRenderable, source: IRenderable[] | RenderElement[]): void {\n    let index = 0;\n    for (; index < source.length; index++) {\n      const r = source[index];\n      const rIndex = (r as IRenderable).index || (r as RenderElement).renderable.index;\n      if (rIndex === renderable.index) {\n        break;\n      }\n    }\n    if (source.length !== index) {\n      source.splice(index, 1);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/SceneRenderer/RenderQueue.ts","import IRenderable from \"./IRenderable\";\nimport RenderQueue from \"./RenderQueue\";\n\nexport default class RenderQueueRegistry {\n  private _queues: RenderQueue[] = [];\n  private _renderables: IRenderable[] = [];\n\n  public registerQueue(queue: RenderQueue): void {\n    this._queues.push(queue);\n    this._renderables.forEach(r => queue.add(r));\n  }\n\n  public unregisterQueue(queue: RenderQueue): void {\n    const index = this._queues.indexOf(queue);\n    if (index > -1) {\n      this._queues.splice(index, 1);\n    }\n  }\n\n  public addRenderable(rendarable: IRenderable): void {\n    this._renderables.push(rendarable);\n    this._queues.forEach(q => q.add(rendarable));\n    rendarable.setRenderableIndex(this._renderables.length);\n  }\n\n  public removeRenderable(renderable: IRenderable): void {\n    const index = this._renderables.indexOf(renderable);\n    if (index === -1) {\n      return; // Could not find specified renderable\n    }\n    this._renderables.splice(index, 1);\n    this._renderables.forEach((r, i) => {\n      r.setRenderableIndex(i + 1);\n    });\n    this._queues.forEach(q => q.remove(renderable));\n  }\n\n  public getByIndex(index: number): IRenderable {\n    return this._renderables[index];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/SceneRenderer/RenderQueueRegistry.ts","import Namespace from \"grimoirejs/ref/Base/Namespace\";\nimport gr from \"grimoirejs/ref/Interface/GrimoireInterface\";\nimport Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport CanvasSizeObject from \"../Objects/CanvasSizeObject\";\nimport GLExtRequestor from \"../Resource/GLExtRequestor\";\nimport Texture2D from \"../Resource/Texture2D\";\nimport WebGLRenderingContextWithId from \"../Resource/WebGLRenderingContextWithId\";\nconst ns = Namespace.define(\"grimoirejs-fundamental\");\n\nenum ResizeMode {\n  Aspect,\n  Fit,\n  Manual,\n}\n\n/**\n * キャンバスの初期化及び設定を司るコンポーネント\n * このコンポーネントによって、適切な位置に`<canvas>`を初期化してWebGLコンテキストを初期化します。\n */\nexport default class CanvasInitializerComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    /**\n     * キャンバスタグの横幅を指定します。\n     */\n    width: {\n      default: \"fit\",\n      converter: \"CanvasSize\",\n    },\n    /**\n     * キャンバスタグの縦幅を指定します。\n     */\n    height: {\n      default: \"fit\",\n      converter: \"CanvasSize\",\n    },\n    /**\n     * キャンバス要素の直接の親要素のコンテナに割り当てるidを指定します。\n     */\n    containerId: {\n      default: \"\",\n      converter: \"String\",\n    },\n    /**\n     * キャンバス要素の直接の親要素のコンテナに割り当てるクラス名を指定します。\n     */\n    containerClass: {\n      default: \"gr-container\",\n      converter: \"String\",\n    },\n    /**\n     * GLコンテキストの初期化時に、preserveDrawingBufferフラグを有効にするか指定します。\n     *\n     * 描画結果をdataURLに変換する際などはこの属性がtrueでないと正常にレンダリング結果を取得できません。\n     */\n    preserveDrawingBuffer: {\n      default: true,\n      converter: \"Boolean\",\n    },\n    /**\n     * GLコンテキストの初期化時に、MSAAによるアンチエイリアスを有効にするか指定します。\n     *\n     * この属性は、途中で動的に変更することができません。\n     */\n    antialias: {\n      default: true,\n      converter: \"Boolean\",\n    },\n  };\n\n  /**\n   * The canvas managed by this component\n   * @type {HTMLCanvasElement}\n   */\n  public canvas: HTMLCanvasElement;\n\n  private _scriptTag: HTMLScriptElement;\n\n  private _canvasContainer: HTMLDivElement;\n\n  // Resize mode of width\n  private _widthMode: ResizeMode;\n\n  // Resize mode of height\n  private _heightMode: ResizeMode;\n\n  // Ratio of aspect\n  private _ratio: number;\n\n  public $awake(): void {\n    this._scriptTag = this.companion.get(\"scriptElement\");\n    if (this._isContainedInBody(this._scriptTag)) {\n      // canvas should be placed siblings of the script tag\n      this._generateCanvas(this._scriptTag);\n    } else {\n      throw new Error(\"goml script should have body as ancesotor to instanciate canvas element in the location\");\n    }\n    // apply sizes on changed\n    this.getAttributeRaw(\"width\").watch(() => {\n      this._resize();\n    });\n    this.getAttributeRaw(\"height\").watch(() => {\n      this._resize();\n    });\n    this.getAttributeRaw(\"antialias\").watch(() => {\n      console.warn(\"Changing antialias attribute is not supported. This is only works when the canvas element created.\");\n    });\n    this.getAttributeRaw(\"preserveDrawingBuffer\").watch(() => {\n      console.warn(\"Changing preserveDrawingBuffer attribute is not supported. This is only works when the canvas element created.\");\n    });\n  }\n\n  public notifySizeChanged(): void {\n    this._onWindowResize();\n  }\n\n  /**\n   * Generate canvas element\n   * @param  {Element}           parent [description]\n   * @return {HTMLCanvasElement}        [description]\n   */\n  private _generateCanvas(scriptTag: Element): HTMLCanvasElement {\n    this._autoFixForBody(scriptTag);\n    this.canvas = document.createElement(\"canvas\");\n    window.addEventListener(\"resize\", () => this._onWindowResize());\n    this._configureCanvas(this.canvas, scriptTag as HTMLScriptElement);\n    const gl = this._getContext(this.canvas);\n    this.companion.set(ns.for(\"gl\"), gl);\n    this.companion.set(ns.for(\"canvasElement\"), this.canvas);\n    this.companion.set(ns.for(\"GLExtRequestor\"), new GLExtRequestor(gl));\n    Texture2D.generateDefaultTexture(gl);\n    return this.canvas;\n  }\n\n  private _resize(supressBroadcast?: boolean): void {\n    const widthRaw = this.getAttribute(\"width\") as CanvasSizeObject;\n    const heightRaw = this.getAttribute(\"height\") as CanvasSizeObject;\n    this._widthMode = this._asResizeMode(widthRaw);\n    this._heightMode = this._asResizeMode(heightRaw);\n    if (this._widthMode === this._heightMode && this._widthMode === ResizeMode.Aspect) {\n      throw new Error(\"Width and height could not have aspect mode in same time!\");\n    }\n    if (this._widthMode === ResizeMode.Aspect) {\n      this._ratio = widthRaw.aspect;\n    }\n    if (this._heightMode === ResizeMode.Aspect) {\n      this._ratio = heightRaw.aspect;\n    }\n    if (this._widthMode === ResizeMode.Manual) {\n      this._applyManualWidth(widthRaw.size, supressBroadcast);\n    }\n    if (this._heightMode === ResizeMode.Manual) {\n      this._applyManualHeight(heightRaw.size, supressBroadcast);\n    }\n    this._onWindowResize(supressBroadcast);\n  }\n\n  private _onWindowResize(supressBroadcast?: boolean): void {\n    const size = this._getParentSize();\n    if (this._widthMode === ResizeMode.Fit) {\n      this._applyManualWidth(size[0], supressBroadcast);\n    }\n    if (this._heightMode === ResizeMode.Fit) {\n      if (size[1] === 0 && gr.debug) {\n        console.warn(\"Canvas height parameter specified as fit and height of parent element is 0.\\n This is possibly the reason you haven't set css to html or body element.\");\n      }\n      this._applyManualHeight(size[1], supressBroadcast);\n    }\n  }\n\n  private _applyManualWidth(width: number, supressBroadcast?: boolean): void {\n    if (width === this.canvas.width) {\n      return;\n    }\n    this.canvas.width = width;\n    this._canvasContainer.style.width = width + \"px\";\n    if (!supressBroadcast) {\n      this.node.broadcastMessage(1, \"resizeCanvas\");\n    }\n    if (this._heightMode === ResizeMode.Aspect) {\n      this._applyManualHeight(width / this._ratio, supressBroadcast);\n    }\n  }\n\n  private _applyManualHeight(height: number, supressBroadcast?: boolean): void {\n    if (height === this.canvas.height) {\n      return;\n    }\n    this.canvas.height = height;\n    this._canvasContainer.style.height = height + \"px\";\n    if (!supressBroadcast) {\n      this.node.broadcastMessage(1, \"resizeCanvas\");\n    }\n    if (this._widthMode === ResizeMode.Aspect) {\n      this._applyManualWidth(height * this._ratio, supressBroadcast);\n    }\n  }\n\n  private _getParentSize(): number[] {\n    const parent = this._canvasContainer.parentElement;\n    const cs = getComputedStyle(parent);\n\n    const paddingX = parseFloat(cs.paddingLeft) + parseFloat(cs.paddingRight);\n    const paddingY = parseFloat(cs.paddingTop) + parseFloat(cs.paddingBottom);\n\n    const borderX = parseFloat(cs.borderLeftWidth) + parseFloat(cs.borderRightWidth);\n    const borderY = parseFloat(cs.borderTopWidth) + parseFloat(cs.borderBottomWidth);\n\n    // Element width and height minus padding and border\n    const elementWidth = parent.offsetWidth - paddingX - borderX;\n    const elementHeight = parent.offsetHeight - paddingY - borderY;\n    return [elementWidth, elementHeight];\n  }\n\n  /**\n   * Get resize mode from raw attribute of height or width\n   * @param  {string  | number}      mode [description]\n   * @return {ResizeMode}   [description]\n   */\n  private _asResizeMode(cso: CanvasSizeObject): ResizeMode {\n    if (cso.mode === \"fit\") {\n      return ResizeMode.Fit;\n    } else if (cso.mode === \"aspect\") {\n      return ResizeMode.Aspect;\n    } else {\n      return ResizeMode.Manual;\n    }\n  }\n\n  private _configureCanvas(canvas: HTMLCanvasElement, scriptTag: HTMLScriptElement): void {\n    canvas.style.position = \"absolute\";\n    canvas.style.top = \"0px\";\n    canvas.style.left = \"0px\";\n    this._canvasContainer = document.createElement(\"div\");\n    this._canvasContainer.style.position = \"relative\";\n    this._canvasContainer.style.overflow = \"hidden\";\n    this._canvasContainer.appendChild(canvas);\n    if (this.getAttribute(\"containerId\")) {\n      this._canvasContainer.id = this.getAttribute(\"containerId\");\n    }\n    if (this.getAttribute(\"containerClass\")) {\n      this._canvasContainer.className = this.getAttribute(\"containerClass\");\n    }\n    this.companion.set(ns.for(\"canvasContainer\"), this._canvasContainer);\n    scriptTag.parentElement.insertBefore(this._canvasContainer, scriptTag.nextSibling);\n    this._resize(true);\n  }\n\n  private _getContext(canvas: HTMLCanvasElement): WebGLRenderingContextWithId {\n    const contextConfig = {\n      antialias: this.getAttribute(\"antialias\"),\n      preserveDrawingBuffer: this.getAttribute(\"preserveDrawingBuffer\"),\n    };\n    let context: WebGLRenderingContext = canvas.getContext(\"webgl\", contextConfig) as WebGLRenderingContext;\n    if (!context) {\n      context = canvas.getContext(\"experimental-webgl\", contextConfig) as WebGLRenderingContext;\n    }\n    if (!context) {\n      throw new Error(\"Failed to initializing WebGL context. Make sure your browser supporting WebGL.\");\n    }\n    return this._applyContextId(context);\n  }\n\n  /**\n   * Insert __id__property to be identify rendering contexts\n   */\n  private _applyContextId(context: WebGLRenderingContext): WebGLRenderingContextWithId {\n    const contextWithId = context as WebGLRenderingContextWithId;\n    contextWithId.__id__ = Math.random().toString(36).slice(-6); // Generating random string\n    return contextWithId;\n  }\n\n  /**\n   * Check the tag is included in the body\n   * @param  {Element} tag [description]\n   * @return {boolean}     [description]\n   */\n  private _isContainedInBody(tag: Element): boolean {\n    if (!tag.parentElement) {\n      return false;\n    }\n    if (tag.parentNode.nodeName === \"BODY\") {\n      return true;\n    }\n    return this._isContainedInBody(tag.parentElement);\n  }\n\n  private _autoFixForBody(scriptTag: Element): void {\n    if (scriptTag.parentElement.nodeName === \"BODY\") {\n      const boudningBox = document.body.getBoundingClientRect();\n      if (boudningBox.height === 0) {\n        document.body.style.height = \"100%\";\n        document.body.parentElement.style.height = \"100%\";\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/CanvasInitializerComponent.ts","module.exports = \"/*Header start*/\\n// helper macros\\n#ifdef FS\\n  #define FS_PREC(prec,type) precision prec type;\\n  #define VS_PREC(prec,type)\\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\\n    #if GL_FRAGMENT_PRECISION_HIGH > 0\\n      #define PREFER_HIGHP highp\\n    #else\\n      #define PREFER_HIGHP mediump\\n    #endif\\n  #endif\\n  #ifndef GL_FRAGMENT_PRECISION_HIGH\\n    #define PREFER_HIGHP mediump\\n  #endif\\n#endif\\n#ifdef VS\\n#define VS_PREC(prec,type) precision prec type;\\n#define FS_PREC(prec,type)\\n#endif\\n// constants\\n#define PI 3.141592653589793\\n#define E 2.718281828459045\\n#define LN2 0.6931471805599453\\n#define LN10 2.302585092994046\\n#define LOG2E 1.4426950408889634\\n#define LOG10E 0.4342944819032518\\n#define SQRT2 1.4142135623730951\\n#define SQRT1_2 0.7071067811865476\\n\\n/*Header end*/\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/Shaders/header.glsl\n// module id = 56\n// module chunks = 0","import IPassRecipe from \"../Material/Schema/IPassRecipe\";\nimport ITechniqueRecipe from \"../Material/Schema/ITechniqueRecipe\";\nimport HashCalculator from \"../Util/HashCalculator\";\nimport SortTransformUtility from \"./SortTransformUtility\";\nclass SortParser {\n  /**\n   * Cache to prevent double loading\n   */\n  private static _parsedCache: { [key: number]: { [key: string]: ITechniqueRecipe } } = {};\n\n  public static parse(source: string): Promise<{ [key: string]: ITechniqueRecipe }> {\n    const sourceHash = HashCalculator.calcHash(source);\n    if (SortParser._parsedCache[sourceHash] !== void 0) { // When specified source was loaded already\n      return new Promise((resolve, reject) => {\n        resolve(SortParser._parsedCache[sourceHash]);\n      });\n    } else {\n      return SortParser._parse(source).then(v => {\n        SortParser._parsedCache[source] = v;\n        return v;\n      });\n    }\n  }\n\n  private static _parse(source: string): Promise<{ [key: string]: ITechniqueRecipe }> {\n    return new Promise((resolve, reject) => {\n      const result: { [key: string]: ITechniqueRecipe; } = {};\n      SortTransformUtility.resolveImports(SortTransformUtility.removeComment(source)).then(uncommented => {\n        try {\n          const techniqueSources = SortTransformUtility.separateTechniqueSource(uncommented);\n          for (const key in techniqueSources) {\n            result[key] = SortParser._parseTechnique(techniqueSources[key]);\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    });\n  }\n\n  private static _parseTechnique(techniqueSource: string): ITechniqueRecipe {\n    const drawOrder = SortTransformUtility.fetchDrawOrder(techniqueSource) || \"Auto\";\n    const passSources = SortTransformUtility.separatePassSource(techniqueSource);\n    const passes: IPassRecipe[] = new Array(passSources.length);\n    for (let i = 0; i < passSources.length; i++) {\n      passes[i] = SortParser._parsePassSource(passSources[i]);\n    }\n    return {\n      drawOrder,\n      passes,\n    };\n  }\n\n  private static _parsePassSource(passSource: string): IPassRecipe {\n    const shaderSource = SortTransformUtility.removePreferences(passSource);\n    const attributes = SortTransformUtility.parseVariables(passSource, \"attribute\");\n    const uniforms = SortTransformUtility.parseVariables(passSource, \"uniform\");\n    const macros = SortTransformUtility.parseMacros(passSource);\n    const states = SortTransformUtility.parsePreferences(passSource);\n    return {\n      fragment: shaderSource,\n      vertex: shaderSource,\n      attributes,\n      uniforms,\n      macros,\n      states,\n    } as IPassRecipe;\n  }\n}\n\nexport default SortParser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sort/Parser.ts","import IMacro from \"../Material/Schema/IMacro\";\nimport IState from \"../Material/Schema/IState\";\nimport IVariableInfo from \"../Material/Schema/IVariableInfo\";\nimport CommentRemover from \"./CommentRemover\";\nimport ImportResolver from \"./ImportResolver\";\nimport NameSemanticPair from \"./NameSemanticsPair\";\nimport Preferences from \"./Preferences\";\nimport TypeToConstant from \"./TypeToConstant\";\n\nexport default class SortTransformUtility {\n  /**\n   * Separate .sort shader text with @Technique statements.\n   * @param  {string} uncommentedSource [description]\n   * @return {[type]}                   [description]\n   */\n  public static separateTechniqueSource(uncommentedSource: string): { [key: string]: string } {\n    if (uncommentedSource.indexOf(\"@Technique\") === -1) {\n      return { default: uncommentedSource };\n    } else {\n      const result = {};\n      const regex = /@Technique\\s+([a-zA-Z0-9_]+)/g;\n      let regexResult: RegExpExecArray;\n      while (regexResult = regex.exec(uncommentedSource)) {\n        const techniqueName = regexResult[1];\n        if (result[techniqueName] !== void 0) {\n          throw new Error(`Technique name ${techniqueName} is dupelicated`);\n        } else {\n          result[techniqueName] = SortTransformUtility.obtainNextSection(uncommentedSource, \"{\", \"}\", regexResult.index + regexResult.length);\n        }\n      }\n      return result;\n    }\n  }\n\n  /**\n   * Separate technique source with @Pass statement.\n   * @param  {string}   uncommentedSource [description]\n   * @return {string[]}                   [description]\n   */\n  public static separatePassSource(uncommentedSource: string): string[] {\n    if (uncommentedSource.indexOf(\"@Pass\") === -1) {\n      return [uncommentedSource];\n    } else {\n      const result = [];\n      const regex = /@Pass/g;\n      let regexResult: RegExpExecArray;\n      while (regexResult = regex.exec(uncommentedSource)) {\n        result.push(SortTransformUtility.obtainNextSection(uncommentedSource, \"{\", \"}\", regexResult.index + regexResult.length));\n      }\n      return result;\n    }\n  }\n\n  /**\n   * Fetch draw order preference from technique source.\n   * @param  {string} uncommentedTechniqueSource [description]\n   * @return {string}                            [description]\n   */\n  public static fetchDrawOrder(uncommentedTechniqueSource: string): string {\n    const regexResult = /@DrawOrder\\s*\\((\\w+)\\)/g.exec(uncommentedTechniqueSource);\n    if (regexResult) {\n      const firstPassIndex = uncommentedTechniqueSource.indexOf(\"@Pass\");\n      if (firstPassIndex !== -1 && firstPassIndex < regexResult.index) {\n        throw new Error(\"DrawOrder preference should be just under @Technique section\");\n      }\n      return regexResult[1];\n    }\n    return null;\n  }\n\n  public static removePreferences(source: string): string {\n    const regex = /@.+$/gm;\n    return source.replace(regex, \"\");\n  }\n\n  public static async resolveImports(uncommentedSource: string): Promise<string> {\n    while (true) {\n      const regexResult = /\\s*@import\\s+\"([^\"]+)\"/.exec(uncommentedSource);\n      if (!regexResult) { break; }\n      let importContent: string;\n      importContent = await SortTransformUtility.resolveImports(await ImportResolver.resolve(regexResult[1]));\n      if (typeof importContent !== \"string\") {\n        throw new Error(`Required shader chunk '${regexResult[1]}' was not found!!`);\n      }\n      uncommentedSource = uncommentedSource.replace(regexResult[0], `\\n${importContent}\\n`);\n    }\n    return uncommentedSource;\n  }\n\n  public static parseMacros(source: string): { [key: string]: IMacro } {\n    const result = {};\n    let regex = /@ExposeMacro\\s*\\(\\s*([a-zA-Z0-9_]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*,\\s*([a-zA-Z0-9_]+)\\s*\\)/g;\n    let regexResult;\n    while ((regexResult = regex.exec(source))) {\n      if (!regexResult[1] || !regexResult[2] || !regexResult[3] || !regexResult[4]) {\n        throw new Error(`Invalid parameter was passed on @ExposeMacro preference on '${regexResult[0]}'`);\n      }\n      if (regexResult[1] !== \"bool\" && regexResult[1] !== \"int\") {\n        throw new Error(`Invalid macro type \"${regexResult[1]}\". regexResult type must be int or bool`);\n      }\n      let value;\n      if (regexResult[1] === \"bool\") {\n        if (regexResult[4] !== \"true\" && regexResult[4] !== \"false\") {\n          throw new Error(`Default macro value \"${regexResult[4]}\" is invalid for bool type macro. Must be true or false`);\n        }\n        value = regexResult[4] === \"true\";\n      } else {\n        value = parseFloat(regexResult[4]);\n        if (isNaN(value)) {\n          throw new Error(`Default macro value \"${regexResult[4]}\" is invalid for int type macro. Must be a number.`);\n        }\n      }\n      result[regexResult[2]] = {\n        name: regexResult[2],\n        macroName: regexResult[3],\n        type: regexResult[1],\n        value,\n        target: \"expose\",\n      } as IMacro;\n    }\n    regex = /@ReferMacro\\s*\\(\\s*([a-zA-Z0-9_]+)\\s*,\\s*(.+)\\s*\\)/g;\n    while ((regexResult = regex.exec(source))) {\n      if (!regexResult[1] || !regexResult[2]) {\n        throw new Error(`Invalid parameter was passed on @ReferMacro preference on '${regexResult[0]}'`);\n      }\n      result[regexResult[1]] = {\n        name: regexResult[1],\n        macroName: regexResult[1],\n        value: regexResult[2],\n        target: \"refer\",\n      } as IMacro;\n    }\n    return result;\n  }\n\n  public static parsePreferences(source: string): IState {\n    const result: IState = {\n      enable: [WebGLRenderingContext.CULL_FACE, WebGLRenderingContext.BLEND, WebGLRenderingContext.DEPTH_TEST],\n      functions: {\n        blendColor: [0, 0, 0, 0],\n        cullFace: [WebGLRenderingContext.BACK],\n        blendFuncSeparate: [WebGLRenderingContext.ONE, WebGLRenderingContext.ZERO, WebGLRenderingContext.ONE, WebGLRenderingContext.ZERO],\n        blendEquationSeparate: [WebGLRenderingContext.FUNC_ADD, WebGLRenderingContext.FUNC_ADD],\n        lineWidth: [1],\n        frontFace: [WebGLRenderingContext.CCW],\n        depthRange: [0, 1],\n        depthFunc: [WebGLRenderingContext.LESS],\n        depthMask: [true],\n        colorMask: [true, true, true, true],\n      },\n      dynamicState: [],\n    };\n    const regex = /@([A-Za-z]+)\\(([\\sa-zA-Z_0-9,\\.\\-]*)\\)/g;\n    let regexResult;\n    while ((regexResult = regex.exec(source))) {\n      const prefParser = Preferences[regexResult[1]];\n      if (!prefParser) {\n        throw new Error(`Unknown pass preference ${regexResult[1]} was specified.`);\n      }\n      prefParser(result, regexResult[2].split(\",\").map(m => m.trim()));\n    }\n    return result;\n  }\n\n  public static asValidJSON(json: string): string {\n    const regex = /([\\{,]\\s*)([a-zA-Z0-9_]+)(\\s*\\:)/gm;\n    const result = json.replace(regex, '$1\"$2\"$3');\n    return result;\n  }\n\n  public static removeComment(source: string): string {\n    return CommentRemover.remove(source);\n  }\n\n  public static obtainNextSection(source: string, begin: string, end: string, offset: number): string {\n    const beginningPosition = source.indexOf(begin, offset);\n    if (beginningPosition === -1) {\n      throw new Error(`Begining section charactor '${begin}' was not found.`);\n    }\n    if (begin.length > 1 || end.length > 1) {\n      throw new Error(\"Invalid parameter\");\n    }\n    let matchingCount = 1;\n    const beginCode = begin.charCodeAt(0);\n    const endCode = end.charCodeAt(0);\n    for (let i = beginningPosition + 1; i < source.length; i++) {\n      const current = source.charCodeAt(i);\n      if (current === beginCode) {\n        matchingCount++;\n      } else if (current === endCode) {\n        matchingCount--;\n      }\n      if (matchingCount === 0) {\n        return source.substring(beginningPosition + 1, i);\n      }\n    }\n    throw new Error(\"Invalid bracket matching\");\n  }\n\n  public static generateVariableFetchRegex(variableType: string): RegExp {\n    return new RegExp(`(?:@([a-zA-Z0-9_]+)?(\\\\{.+\\\\})?)?\\\\s*${variableType}\\\\s+(?:(lowp|mediump|highp)\\\\s+)?([a-z0-9A-Z]+)\\\\s+([a-zA-Z0-9_]+)(?:\\\\s*\\\\[\\\\s*([a-zA-Z0-9_]+)\\\\s*\\\\]\\\\s*)?\\\\s*;`, \"g\");\n  }\n\n  public static parseVariables(source: string, variableType: string): { [key: string]: IVariableInfo } {\n    const result = {};\n    const regex = SortTransformUtility.generateVariableFetchRegex(variableType);\n    let regexResult: RegExpExecArray;\n    while ((regexResult = regex.exec(source))) {\n      const name = regexResult[5];\n      const type = TypeToConstant[regexResult[4]];\n      const precision = regexResult[3];\n      const rawAnnotations = regexResult[2];\n      const isArray = regexResult[6] !== void 0;\n      let arrayCount;\n      let semantic = regexResult[1];\n      if (!semantic) {\n        semantic = NameSemanticPair[variableType][name];\n        if (!semantic) {\n          semantic = variableType === \"uniform\" ? \"USER_VALUE\" : name.toUpperCase();\n        }\n      }\n      if (isArray) {\n        arrayCount = parseInt(regexResult[6], 10);\n        if (isNaN(arrayCount)) {\n          arrayCount = regexResult[6];\n        }\n      }\n      result[name] = {\n        semantic,\n        name,\n        type,\n        precision,\n        attributes: rawAnnotations ? JSON.parse(SortTransformUtility.asValidJSON(rawAnnotations)) : {},\n        isArray,\n        count: arrayCount,\n      } as IVariableInfo;\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sort/SortTransformUtility.ts","/**\n * Status of parsing\n */\nenum CommentParsingStatus {\n  Default,\n  SingleQuotationString,\n  DoubleQuatationString,\n  MultilineComment,\n  SinglelineComment,\n}\n\nexport default class CommentRemover {\n  public removedSource: string;\n\n  private _status: CommentParsingStatus = CommentParsingStatus.Default;\n\n  private _afterSlush = false;\n\n  private get _isInComment(): boolean {\n    return this._status === CommentParsingStatus.MultilineComment || this._status === CommentParsingStatus.SinglelineComment;\n  }\n\n  public static remove(source: string): string {\n    const remover = new CommentRemover(source);\n    return remover.removedSource;\n  }\n\n  constructor(public source: string) {\n    this.removedSource = this._remove();\n  }\n\n  private _remove(): string {\n    let text = \"\";\n    let last;\n    for (let i = 0; i < this.source.length; i++) {\n      const c = this.source.charAt(i);\n      const cn = this.source.charAt(i + 1);\n      if (c === \"\\\\\") {\n        this._afterSlush = true;\n        i++;\n        continue;\n      }\n      switch (this._status) {\n        case CommentParsingStatus.Default:\n          this._defaultParsing(c, cn);\n          break;\n      }\n      if (!this._isInComment || c === \"\\n\") {\n        text += c;\n      }\n      switch (this._status) {\n        case CommentParsingStatus.MultilineComment:\n        case CommentParsingStatus.SinglelineComment:\n          this._checkCommentEnd(last, c);\n      }\n      last = c;\n    }\n    return text;\n  }\n\n  private _defaultParsing(current: string, next: string): void {\n    if (current === \"'\") {\n      this._status = CommentParsingStatus.SingleQuotationString;\n    }\n    if (current === \"\\\"\") {\n      this._status = CommentParsingStatus.DoubleQuatationString;\n    }\n    if (current === \"/\" && next === \"/\") {\n      this._status = CommentParsingStatus.SinglelineComment;\n    }\n    if (current === \"/\" && next === \"*\") {\n      this._status = CommentParsingStatus.MultilineComment;\n    }\n  }\n\n  private _checkCommentEnd(last: string, current: string): void {\n    if (current === \"\\n\" && this._status === CommentParsingStatus.SinglelineComment) {\n      this._status = CommentParsingStatus.Default;\n      return;\n    }\n    if (last === \"*\" && current === \"/\" && this._status === CommentParsingStatus.MultilineComment) {\n      this._status = CommentParsingStatus.Default;\n      return;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sort/CommentRemover.ts","import CacheResolver from \"../Asset/CacheResolver\";\nimport DefaultStaticImport from \"../Material/Defaults/DefaultStaticImport\";\nexport class ImportResolver extends CacheResolver<string> {\n  public staticImports: { [key: string]: string } = {...DefaultStaticImport};\n\n  private static _toAbsolute(href: string): string {\n    const link = document.createElement(\"a\");\n    link.href = href;\n    return (link.protocol + \"//\" + link.host + link.pathname + link.search + link.hash);\n  }\n\n  constructor() {\n    super((str) => {\n      const regex = /^https?:\\/\\/.*/gm;\n      return regex.test(str) ? ImportResolver._toAbsolute(str) : str;\n    });\n  }\n  public resolve(path: string): Promise<string> {\n    return super.resolve(path, (abs) => {\n      return this._resolve(path);\n    });\n  }\n\n  private async _resolve(path: string): Promise<string> {\n    if (typeof this.staticImports[path] === \"string\") {\n      return this.staticImports[path];\n    } else {\n      return await this._fromExternal(path);\n    }\n  }\n\n  private _fromExternal(path: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", path);\n      xhr.onload = (v) => {\n        resolve(xhr.responseText);\n      };\n      xhr.onerror = (e) => {\n        reject(e);\n      };\n      xhr.send();\n    });\n  }\n}\n\nexport default new ImportResolver();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sort/ImportResolver.ts","import BasicVert from \"raw-loader!../../Shaders/basic-vert.glsl\";\nimport ScreenVert from \"raw-loader!../../Shaders/screen-vert.glsl\";\nexport default {\n    \"basic-vert\": BasicVert,\n    \"screen-vert\": ScreenVert,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Defaults/DefaultStaticImport.ts","export default {\n  attribute: {\n    position: \"POSITION\",\n    normal: \"NORMAL\",\n    texCoord: \"TEXCOORD\",\n  },\n  uniform: {\n    _time: \"TIME\",\n    _viewportSize: \"VIEWPORT_SIZE\",\n    _matL: \"LOCAL\",\n    _matM: \"MODEL\",\n    _matV: \"VIEW\",\n    _matP: \"PROJECTION\",\n    _matVM: \"MODELVIEW\",\n    _matPVM: \"MODELVIEWPROJECTION\",\n    _matIM: \"MODELINVERSE\",\n    _matIV: \"VIEWINVERSE\",\n    _matIP: \"PROJECTIONINVERSE\",\n    _matIVM: \"MODELVIEWINVERSE\",\n    _matIPVM: \"MODELVIEWPROJECTIONINVERSE\",\n    _matITM: \"MODELINVERSETRANSPOSE\",\n    _matITVM: \"MODELVIEWINVERSETRANSPOSE\",\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sort/NameSemanticsPair.ts","import IState from \"../Material/Schema/IState\";\n\nfunction asGLConstantArgs(args: string[], length: number): number[] {\n  if (args.length !== length) {\n    throw new Error(\"Unmatching argument count on preference parse\");\n  }\n  return args.map(arg => {\n    const argNum = WebGLRenderingContext[arg];\n    if (typeof argNum !== \"number\") {\n      throw new Error(`Unknown WebGL constant ${arg} was specified`);\n    }\n    return argNum;\n  });\n}\n\nfunction asNumberArgs(args: string[], length: number): number[] {\n  if (args.length !== length) {\n    throw new Error(\"Unmatching argument count on preference parse\");\n  }\n  return args.map(arg => {\n    const argNum = Number.parseFloat(arg);\n    if (isNaN(argNum)) {\n      throw new Error(\"Failed to parse number on preference parsing\");\n    }\n    return argNum;\n  });\n}\n\nfunction asBooleanArgs(args: string[], length: number): boolean[] {\n  if (args.length !== length) {\n    throw new Error(\"Unmatching argument count on preference parse\");\n  }\n  return args.map(arg => {\n    if (arg !== \"true\" && arg !== \"false\") {\n      throw new Error(`${arg} is not boolean`);\n    }\n    return arg === \"true\";\n  });\n}\n\nexport default {\n  Enable(state: IState, args: string[]) {\n    const enableTarget = WebGLRenderingContext[args[0]];\n    if (typeof enableTarget !== \"number\") {\n      throw new Error(`Unknown WebGL constant \"${args[0]}\" was specified on @Enable`);\n    }\n    state.enable.push(enableTarget);\n  },\n  Disable(state: IState, args: string[]) {\n    const disableTarget = WebGLRenderingContext[args[0]];\n    if (typeof disableTarget !== \"number\") {\n      throw new Error(`Unknown WebGL constant \"${args[0]}\" was specified on @Disable`);\n    }\n    const index = state.enable.indexOf(disableTarget);\n    if (index !== -1) {\n      state.enable.splice(index, 1);\n    }\n  },\n  BlendFunc(state: IState, args: string[]) {\n    const config = asGLConstantArgs(args, 2);\n    state.functions.blendFuncSeparate = [config[0], config[1], config[0], config[1]];\n  },\n  BlendFuncSeparate(state: IState, args: string[]) {\n    state.functions.blendFuncSeparate = asGLConstantArgs(args, 4);\n  },\n  BlendEquation(state: IState, args: string[]) {\n    const config = asGLConstantArgs(args, 1);\n    state.functions.blendEquationSeparate = [config[0], config[0]];\n  },\n  BlendEquationSeparate(state: IState, args: string[]) {\n    state.functions.blendEquationSeparate = asGLConstantArgs(args, 4);\n  },\n  BlendColor(state: IState, args: string[]) {\n    state.functions.blendColor = asNumberArgs(args, 4);\n  },\n  ColorMask(state: IState, args: string[]) {\n    state.functions.colorMask = asBooleanArgs(args, 4);\n    state.enable.push(WebGLRenderingContext.COLOR_WRITEMASK);\n  },\n  CullFace(state: IState, args: string[]) {\n    state.functions.cullFace = asGLConstantArgs(args, 1);\n  },\n  DepthFunc(state: IState, args: string[]) {\n    state.functions.depthFunc = asGLConstantArgs(args, 1);\n  },\n  DepthRange(state: IState, args: string[]) {\n    state.functions.depthRange = asNumberArgs(args, 2);\n  },\n  DepthMask(state: IState, args: string[]) {\n    state.functions.depthMask = asBooleanArgs(args, 1);\n  },\n  FrontFace(state: IState, args: string[]) {\n    state.functions.frontFace = asGLConstantArgs(args, 1);\n  },\n  LineWidth(state: IState, args: string[]) {\n    state.functions.lineWidth = asNumberArgs(args, 1);\n  },\n  PolygonOffset(state: IState, args: string[]) {\n    state.functions.polygonOffset = asNumberArgs(args, 2);\n    state.enable.push(WebGLRenderingContext.POLYGON_OFFSET_FILL);\n  },\n  Scissor(state: IState, args: string[]) {\n    state.functions.scissor = asNumberArgs(args, 4);\n    state.enable.push(WebGLRenderingContext.SCISSOR_TEST);\n  },\n  ExposeMacro() {\n    return;\n  },\n  ReferMacro() {\n    return;\n  },\n  DynamicState(state: IState, args: string[]) {\n    if (!args.length) {\n      throw new Error(\"DynamicState require at least 1 argument for specifying state resolver\");\n    }\n    const resolver = args[0];\n    args.splice(0, 1);\n    state.dynamicState.push({\n      stateResolver: resolver,\n      args,\n    });\n    return;\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sort/Preferences.ts","const gl = WebGLRenderingContext;\nexport default {\n  vec2: gl.FLOAT_VEC2,\n  vec3: gl.FLOAT_VEC3,\n  vec4: gl.FLOAT_VEC4,\n  ivec2: gl.INT_VEC2,\n  ivec3: gl.INT_VEC3,\n  ivec4: gl.INT_VEC4,\n  bvec2: gl.BOOL_VEC2,\n  bvec3: gl.BOOL_VEC3,\n  bvec4: gl.BOOL_VEC4,\n  float: gl.FLOAT,\n  int: gl.INT,\n  bool: gl.BOOL,\n  sampler2D: gl.SAMPLER_2D,\n  samplerCube: gl.SAMPLER_CUBE,\n  mat4: gl.FLOAT_MAT4,\n  mat3: gl.FLOAT_MAT3,\n  mat2: gl.FLOAT_MAT2,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sort/TypeToConstant.ts","import DefaultMacro from \"./Defaults/DefaultMacro\";\n/**\n * Manage macros which would be appended head of all shaders grimoire.js would load.\n */\nexport default class MacroRegistory {\n\n  /**\n   * The map of macro.\n   */\n  private _macro: { [macroName: string]: string } = {};\n\n  /**\n   * Handlers functions for changing macro.\n   */\n  private _observers: {[macroName: string]: ((value: string, isImmediateCall: boolean) => void)[]} = {};\n\n  constructor() {\n    for (const key in DefaultMacro) {\n      this.setValue(key, DefaultMacro[key]);\n    }\n  }\n\n  /**\n   * Set the value of macros.\n   * @param {string}    key [description]\n   * @param {string =   null}        val [description]\n   */\n  public setValue(key: string, val: string = null): void {\n    if (val === null) {\n      val = \"\";\n    }\n    if (this._macro[key] !== val) {\n      this._macro[key] = val;\n      if (!this._observers[key]) {\n        this._observers[key] = [];\n      }\n      this._notifyMacroChanged(key, val);\n    }\n  }\n\n  /**\n   * Get the value of macro.\n   * @param  {string} key [description]\n   * @return {string}     [description]\n   */\n  public getValue(key: string): string {\n    const macro = this._macro[key];\n    if (macro === null) {\n      return \"\";\n    }else {\n      return macro;\n    }\n  }\n\n  public watch(macroName: string, handler: (value: string, isImmediateCall: boolean) => void, immediate = false): void {\n    let observers = this._observers[macroName];\n    if (!observers) {\n      observers = this._observers[macroName] = [];\n    }\n    observers.push(handler);\n    if (immediate && this._macro[macroName] !== void 0) {\n      handler(this._macro[macroName], true);\n    }\n  }\n\n  public unwatch(macroName: string, handler: (value: string, isImmediateCall: boolean) => void): boolean {\n    const observers = this._observers[macroName];\n    if (!observers) {\n      return false;\n    }\n    for (let i = 0; i < observers.length; i++) {\n      if (observers[i] === handler) {\n        observers.splice(i, 1);\n        return true;\n      }\n    }\n  }\n\n  private _notifyMacroChanged(key: string, value: string): void {\n    for (let i = 0; i < this._observers[key].length; i++) {\n      this._observers[key][i](value, false);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/MacroRegistory.ts","export default {\n  GRIMOIRE: null,\n  WEBGL_VERSION: \"1\",\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Defaults/DefaultMacro.ts","import IMaterialArgument from \"./IMaterialArgument\";\nimport Material from \"./Material\";\nimport Pass from \"./Pass\";\nimport ITechniqueRecipe from \"./Schema/ITechniqueRecipe\";\n/**\n * Technique provides an abstraction of drawing with multiple shaders.\n * Technique represents a draw technique like (basic drawing, normal drawing,low quality drawing and so on)\n * By specifing which technique should be used in a drawing stage, users can easily to switch multiple drawing formulas.\n * @param  {Material}         publicmaterial [description]\n * @param  {ITechniqueRecipe} recipe         [description]\n * @return {[type]}                          [description]\n */\nexport default class Technique {\n\n  /**\n   * Draw prder priorty of this technique\n   */\n  public drawOrder: string;\n\n  /**\n   * Actual drawing stages of this technique\n   */\n  public passes: Pass[] = [];\n\n  constructor(public material: Material, recipe: ITechniqueRecipe) {\n    this.drawOrder = recipe.drawOrder;\n    this.passes = recipe.passes.map(p => {\n      return new Pass(this, p);\n    });\n  }\n\n  /**\n   * Draw with specified argument by this technique\n   * @param {IMaterialArgument} args [description]\n   */\n  public draw(args: IMaterialArgument): void {\n    for (let i = 0; i < this.passes.length; i++) {\n      this.passes[i].draw(args);\n    }\n  }\n\n  /**\n   * Destroy to release resources\n   */\n  public dispose(): void {\n    this.passes.forEach(p => p.dispose());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Technique.ts","import IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Geometry from \"../Geometry/Geometry\";\nimport ManagedProgram from \"../Resource/ManagedProgram\";\nimport GLStateConfigurator from \"./GLStateConfigurator\";\nimport IMaterialArgument from \"./IMaterialArgument\";\nimport Material from \"./Material\";\nimport MaterialFactory from \"./MaterialFactory\";\nimport PassProgram from \"./PassProgram\";\nimport IPassRecipe from \"./Schema/IPassRecipe\";\nimport Technique from \"./Technique\";\nimport UniformResolverContainer from \"./UniformResolverContainer\";\nimport UniformResolverRegistry from \"./UniformResolverRegistry\";\n/**\n * Pass provides single draw call for a geometry.\n * Containing arguments of uniform variables and gl state configruations for each drawing call.\n * @return {Material} [description]\n */\nexport default class Pass {\n  /**\n   * Pass program instance. This is not actual WebGLProgram instance.\n   * Pass will determine which WebGLProgram should be used by considering which geometry was used in actual drawing timing.\n   * @return {Material} [description]\n   */\n  public program: PassProgram;\n\n  /**\n   * Get related material\n   */\n  public get material(): Material {\n    return this.technique.material;\n  }\n\n  /**\n   * Declaration of argument attributes.\n   * @param  {Technique}   publictechnique  [description]\n   * @param  {IPassRecipe} publicpassRecipe [description]\n   * @return {[type]}                       [description]\n   */\n  public argumentDeclarations: { [key: string]: IAttributeDeclaration } = {};\n\n  /**\n   * Values of materila arguments.\n   * These values would be passed to GPU for rendering.\n   */\n  public arguments: { [key: string]: any } = {};\n\n  private _macroHandlers: { [key: string]: (value: any) => void } = {};\n\n  private _uniformResolvers: UniformResolverContainer;\n\n  private _dynamicStateResolver: (gl: WebGLRenderingContext, mat: IMaterialArgument) => void;\n\n  private _gl: WebGLRenderingContext;\n\n  private _argumentInitialized: boolean;\n\n  constructor(public technique: Technique, public passRecipe: IPassRecipe) {\n    this._uniformResolvers = UniformResolverRegistry.generateRegisterers(this, passRecipe);\n    this._gl = this.material.gl;\n    const factory = MaterialFactory.get(this._gl);\n    const macroRegister = factory.macro;\n    this._dynamicStateResolver = GLStateConfigurator.getDynamicStateResolver(this);\n    this.program = new PassProgram(this._gl, passRecipe.vertex, passRecipe.fragment);\n    // register macro\n    for (const key in passRecipe.macros) {\n      const macro = passRecipe.macros[key];\n      this.program.setMacro(macro.macroName, macro.value + \"\");\n      if (macro.target === \"expose\") {\n        this._macroHandlers[key] = (value) => { // when changed the macro\n          let assignValue;\n          if (macro.type === \"bool\") {\n            assignValue = value ? \"\" : undefined;\n          } else {\n            assignValue = value;\n          }\n          this.program.setMacro(macro.macroName, assignValue);\n        };\n        this.addArgument(key, {\n          converter: macro.type === \"bool\" ? \"Boolean\" : \"Number\",\n          default: macro.value,\n        });\n      } else if (macro.target === \"refer\") {\n        this.program.setMacro(macro.macroName, macro.value + \"\");\n        macroRegister.watch(macro.macroName, (val, immediate) => {\n            this.program.setMacro(macro.macroName, val);\n        }, true);\n      }\n    }\n  }\n  /**\n   * Execute single drawcall with specified arguments.\n   * @param {IMaterialArgument} args [description]\n   */\n  public draw(args: IMaterialArgument): void {\n    // configure programs and gl states\n    const p = this.program.getProgram(args.geometry);\n    p.use();\n    this._uniformResolvers.resolve(p.uniforms, args);\n    GLStateConfigurator.configureForPass(this._gl, this.passRecipe); // configure for gl states\n    this._dynamicStateResolver(this._gl, args);\n    // draw actually\n    for (const key in this.passRecipe.attributes) {\n      const attribute = this.passRecipe.attributes[key];\n      Geometry.bindBufferToAttribute(args.geometry, p, key, attribute.semantic);\n    }\n    Geometry.drawWithCurrentVertexBuffer(args.geometry, args.indexGroup, args.drawCount, args.drawOffset);\n  }\n\n  /**\n   * Append an argument as pass variable.\n   * This is mainly used for resolving uniform stages.\n   */\n  public addArgument(name: string, val: IAttributeDeclaration): void {\n    if (this._argumentInitialized) {\n      throw new Error(\"setArgument cant be called for initialized pass\");\n    }\n    this.argumentDeclarations[name] = val;\n  }\n  /**\n   * Update argument of specified value.\n   */\n  public setArgument(variableName: string, newValue: any, oldValue: any): void {\n    if (this._macroHandlers[variableName]) { // if the value was macro\n      this._macroHandlers[variableName](newValue);\n    } else {\n      this._uniformResolvers.update(this.program, variableName, newValue, oldValue);\n    }\n    this.arguments[variableName] = newValue;\n  }\n  /**\n   * Destroy pass to release resources.\n   */\n  public dispose(): void {\n    this._uniformResolvers.dispose();\n    this.program.dispose();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Pass.ts","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS&&window.GrimoireJS.lib.math?window.GrimoireJS.lib.math.AABB:undefined;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs-math/ref/AABB.js\n// module id = 69\n// module chunks = 0","import GLResource from \"./GLResource\";\n\nexport default class Buffer extends GLResource<WebGLBuffer> {\n  /**\n   * If this flag was true, buffer instance will keep Float32Array on class field.\n   */\n  public keepSource = false;\n\n  public get bufferSource(): BufferSource {\n    if (this.keepSource) {\n      return this._bufferSource;\n    } else {\n      throw new Error(\"Accessing bufferSource getter of Buffer class instance require keepSource flag being enabled before updating Buffer.\");\n    }\n  }\n\n  private _bufferSource: BufferSource = null;\n\n  constructor(gl: WebGLRenderingContext, public readonly target: number = WebGLRenderingContext.ARRAY_BUFFER, public usage: number = WebGLRenderingContext.STATIC_DRAW) {\n    super(gl, gl.createBuffer());\n  }\n\n  public update(length: number): void;\n  public update(buffer: BufferSource): void;\n  public update(offset: number, buffer: BufferSource): void;\n  public update(length: number | BufferSource, subBuffer?: BufferSource): void {\n    this.bind();\n    this._bufferSource = null;\n    if (subBuffer) {\n      if (!this.valid) {\n        this.gl.bufferData(this.target, length as number + subBuffer.byteLength, this.usage);\n      }\n      this.gl.bufferSubData(this.target, length as number, subBuffer);\n    } else {\n      if (typeof length === \"number\") {\n        this.gl.bufferData(this.target, length, this.usage);\n      } else {\n        this.gl.bufferData(this.target, length, this.usage);\n        this._bufferSource = length;\n      }\n    }\n    this.valid = true;\n  }\n\n  public bind(): void {\n    this.gl.bindBuffer(this.target, this.resourceReference);\n  }\n\n  public destroy(): void {\n    super.destroy();\n    this._bufferSource = null;\n    this.gl.deleteBuffer(this.resourceReference);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/Buffer.ts","import DefaultDynamicStateResolver from \"./Defaults/DefaultDynamicStateResolvers\";\nimport IMaterialArgument from \"./IMaterialArgument\";\nimport Pass from \"./Pass\";\nimport IDynamicStateResolver from \"./Schema/IDynamicStateResolver\";\nimport IPassRecipe from \"./Schema/IPassRecipe\";\nimport IState from \"./Schema/IState\";\nexport default class GLStateConfigurator {\n  private static _glEnableTargets: number[] = [\n    WebGLRenderingContext.CULL_FACE,\n    WebGLRenderingContext.DEPTH_TEST,\n    WebGLRenderingContext.STENCIL_TEST,\n    WebGLRenderingContext.BLEND,\n    WebGLRenderingContext.SCISSOR_TEST,\n    WebGLRenderingContext.DITHER,\n    WebGLRenderingContext.POLYGON_OFFSET_FILL,\n    WebGLRenderingContext.SAMPLE_ALPHA_TO_COVERAGE,\n    WebGLRenderingContext.SAMPLE_COVERAGE];\n\n  private static _dynamicStateResolvers: { [key: string]: IDynamicStateResolver } = { ...DefaultDynamicStateResolver };\n\n  public static registerDynamicStateResolver(key: string, resolver: IDynamicStateResolver): void {\n    GLStateConfigurator._dynamicStateResolvers[key] = resolver;\n  }\n\n  public static getDynamicStateResolver(pass: Pass): (gl: WebGLRenderingContext, mat: IMaterialArgument) => void {\n    if (pass.passRecipe.states.dynamicState) {\n      const dynamicStates = pass.passRecipe.states.dynamicState;\n      const functions = [] as ((gl: WebGLRenderingContext, mat: IMaterialArgument) => void)[];\n      for (let i = 0; i < dynamicStates.length; i++) {\n        const ds = dynamicStates[i];\n        const resolverGenerator = GLStateConfigurator._dynamicStateResolvers[ds.stateResolver];\n        if (!resolverGenerator) {\n          throw new Error(`Unknown dynamic state resolver '${ds.stateResolver}' was required`);\n        }\n        functions.push(resolverGenerator(ds.args, pass));\n      }\n      return (gl: WebGLRenderingContext, mat: IMaterialArgument) => functions.forEach(f => f(gl, mat));\n    }\n    return () => void 0;\n  }\n\n  /**\n   * Configure gl state based on pass recipe\n   */\n  public static configureForPass(gl: WebGLRenderingContext, passRecipe: IPassRecipe): void {\n    const states = passRecipe.states;\n    const functions = states.functions;\n    if (!states.disable) {\n      GLStateConfigurator.complementDisableState(passRecipe.states);\n    }\n    for (let i = 0; i < states.enable.length; i++) {\n      gl.enable(states.enable[i]);\n    }\n    for (let i = 0; i < states.disable.length; i++) {\n      gl.disable(states.disable[i]);\n    }\n    if (functions.blendColor) {\n      gl.blendColor(functions.blendColor[0], functions.blendColor[1], functions.blendColor[2], functions.blendColor[3]);\n    }\n    if (functions.blendEquationSeparate) {\n      gl.blendEquationSeparate(functions.blendEquationSeparate[0], functions.blendEquationSeparate[1]);\n    }\n    if (functions.blendFuncSeparate) {\n      gl.blendFuncSeparate(functions.blendFuncSeparate[0], functions.blendFuncSeparate[1], functions.blendFuncSeparate[2], functions.blendFuncSeparate[3]);\n    }\n    if (functions.colorMask) {\n      gl.colorMask(functions.colorMask[0], functions.colorMask[1], functions.colorMask[2], functions.colorMask[3]);\n    }\n    if (functions.cullFace) {\n      gl.cullFace(functions.cullFace[0]);\n    }\n    if (functions.depthFunc) {\n      gl.depthFunc(functions.depthFunc[0]);\n    }\n    if (functions.depthMask) {\n      gl.depthMask(functions.depthMask[0]);\n    }\n    if (functions.depthRange) {\n      gl.depthRange(functions.depthRange[0], functions.depthRange[1]);\n    }\n    if (functions.frontFace) {\n      gl.frontFace(functions.frontFace[0]);\n    }\n    if (functions.polygonOffset) {\n      gl.polygonOffset(functions.polygonOffset[0], functions.polygonOffset[1]);\n    }\n    if (functions.scissor) {\n      gl.scissor(functions.scissor[0], functions.scissor[1], functions.scissor[2], functions.scissor[3]);\n    }\n  }\n\n  /**\n   * Complement disabling state based on enabled states.\n   */\n  public static complementDisableState(state: IState): void {\n    if (!state.disable) {\n      state.disable = [];\n    }\n    for (const key of GLStateConfigurator._glEnableTargets) {\n      if (state.enable.indexOf(key) === -1) {\n        state.disable.push(key);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/GLStateConfigurator.ts","import Pass from \"../Pass\";\nimport IDynamicStateResolver from \"../Schema/IDynamicStateResolver\";\nexport default {\n    \"dynamic-cull\": (args: string[], pass: Pass) => {\n        const attributeName = args[1] || \"cull\";\n        pass.addArgument(attributeName, {\n            converter: \"String\",\n            default: args[0] || \"back\",\n        });\n        const currentState = null;\n        function changeState(state: string) {\n            if (currentState !== state) {\n                pass.program.setMacro(\"CONTEXT_STATE_CULL\", state);\n            }\n        }\n        return (gl: WebGLRenderingContext) => {\n            if (pass.arguments[attributeName] !== \"none\") {\n                gl.enable(WebGLRenderingContext.CULL_FACE);\n                if (pass.arguments[attributeName] === \"back\") {\n                    gl.cullFace(WebGLRenderingContext.BACK);\n                    changeState(\"1\");\n                } else if (pass.arguments[attributeName] === \"front\") {\n                    gl.cullFace(WebGLRenderingContext.FRONT);\n                    changeState(\"2\");\n                } else {\n                    throw new Error(\"Unknown culling mode\");\n                }\n            } else {\n                gl.disable(WebGLRenderingContext.CULL_FACE);\n                changeState(\"0\");\n            }\n        };\n    },\n} as { [key: string]: IDynamicStateResolver };\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Defaults/DefaultDynamicStateResolvers.ts","import Geometry from \"../Geometry/Geometry\";\nimport ManagedProgram from \"../Resource/ManagedProgram\";\nimport ManagedShader from \"../Resource/ManagedShader\";\nimport ShaderMixer from \"./ShaderMixer\";\n/**\n * Container of shader program used for Pass.\n * Pass needs to care which geometry will be drawn by a material.\n * (For determining what macro should be appended to shader by attribute variable exisiting)\n */\nexport default class PassProgram {\n\n  /**\n   * macros registered dynamically of this programs\n   * @return {[type]} [description]\n   */\n  public get macros(): {[key: string]: any} {\n    return this._macros;\n  }\n\n  public set macros(val: {[key: string]: any}) {\n    this._macros = val;\n    this.dispose();\n  }\n  /**\n   * Original fragment shader code\n   * @return {string} [description]\n   */\n  public get fragmentShader(): string {\n    return this._fsSource;\n  }\n\n  public get vertexShader(): string {\n    return this._vsSource;\n  }\n  /**\n   * Original vertex shader code\n   * @param  {string} source [description]\n   * @return {[type]}        [description]\n   */\n  public set fragmentShader(source: string){\n    this._fsSource = source;\n    this.dispose();\n  }\n\n  public set vertexShader(source: string){\n    this._vsSource = source;\n    this.dispose();\n  }\n\n  private _programs: {[hash: number]: ManagedProgram} = {};\n\n  private _shaders: ManagedShader[] = [];\n\n  constructor(private _gl: WebGLRenderingContext, private _vsSource: string, private _fsSource: string, private _macros: {[key: string]: any} = {}) {\n\n  }\n  /**\n   * Fetch a program instance with specified geometry\n   * @param  {Geometry}       geometry [description]\n   * @return {ManagedProgram}          [description]\n   */\n  public getProgram(geometry: Geometry): ManagedProgram {\n    if (this._programs[geometry.accessorHash]) {\n      return this._programs[geometry.accessorHash];\n    }else {\n      return this._constructProgram(geometry);\n    }\n  }\n\n  /**\n   * Update programs with specified macro value.\n   * @param {string}         macroName [description]\n   * @param {string|boolean} value     [description]\n   */\n  public setMacro(macroName: string, value?: string|boolean): void {\n    if (this._macros[macroName] !== value) {\n      if (typeof value === \"boolean\") {\n        this._macros[macroName] = value ? \"\" : undefined;\n      }else {\n        this._macros[macroName] = value;\n      }\n      this.dispose();\n    }\n  }\n\n  /**\n   * Destroy instance to relase resources.\n   */\n  public dispose(): void {\n    for (const key in this._programs) {\n      this._programs[key].release();\n    }\n    this._programs = {};\n    this._shaders.forEach(s => s.release());\n    this._shaders = [];\n  }\n\n  private _constructProgram(geometry: Geometry): ManagedProgram {\n    const fs = ManagedShader.getShader(this._gl, WebGLRenderingContext.FRAGMENT_SHADER, ShaderMixer.generate(WebGLRenderingContext.FRAGMENT_SHADER, this._macros, this._fsSource, geometry));\n    const vs = ManagedShader.getShader(this._gl, WebGLRenderingContext.VERTEX_SHADER, ShaderMixer.generate(WebGLRenderingContext.VERTEX_SHADER, this._macros, this._vsSource, geometry));\n    const program = ManagedProgram.getProgram(this._gl, [vs, fs]);\n    this._shaders.push(fs);\n    this._shaders.push(vs);\n    this._programs[geometry.accessorHash] = program;\n    return program;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/PassProgram.ts","import HashCalculator from \"../Util/HashCalculator\";\nimport Program from \"./Program\";\nimport Shader from \"./Shader\";\n\nexport default class ManagedProgram extends Program {\n  private static _managedPrograms: Map<WebGLRenderingContext, { [hash: number]: ManagedProgram }> = new Map<WebGLRenderingContext, { [hash: number]: ManagedProgram }>();\n\n  public static getProgram(gl: WebGLRenderingContext, shaders: Shader[]): ManagedProgram {\n    if (!ManagedProgram._managedPrograms.has(gl)) {\n      ManagedProgram._managedPrograms.set(gl, {});\n    }\n    const programs = ManagedProgram._managedPrograms.get(gl);\n    let hashSource = \"\";\n    shaders = shaders.sort();\n    shaders.forEach(s => {\n      hashSource += s.index + \",\";\n    });\n    const hash = HashCalculator.calcHash(hashSource);\n    if (programs[hash] === void 0) {\n      programs[hash] = new ManagedProgram(gl, hash);\n      programs[hash].update(shaders);\n    }\n    programs[hash]._referenceCount++;\n    return programs[hash];\n  }\n\n  private _referenceCount = 0;\n\n  constructor(gl: WebGLRenderingContext, public hash: number) {\n    super(gl);\n  }\n\n  public release(): void {\n    this._referenceCount--;\n    if (this._referenceCount === 0) {\n      this.destroy();\n      ManagedProgram._managedPrograms.get(this.gl)[this.hash] = void 0;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/ManagedProgram.ts","import GLResource from \"./GLResource\";\nimport ResourceCache from \"./ResourceCache\";\nimport Shader from \"./Shader\";\nimport UniformProxy from \"./UniformProxy\";\n\n/**\n * Manages WebGLProgram related stuff.\n */\nexport default class Program extends GLResource<WebGLProgram> {\n\n  /**\n   * Reference to uniform proxy which help you to pass uniform variables.\n   * @type {UniformProxy}\n   */\n  public uniforms: UniformProxy;\n\n  private _uniformLocations: { [variableName: string]: WebGLUniformLocation } = {};\n\n  private _attributeLocations: { [variableName: string]: number } = {};\n\n  constructor(gl: WebGLRenderingContext) {\n    super(gl, gl.createProgram());\n    this.uniforms = new UniformProxy(this);\n  }\n\n  /**\n   * Check this program is the last used one or not.\n   * @return {boolean} [description]\n   */\n  public get isLastUsed(): boolean {\n    return ResourceCache.useProgramCheck(this.gl, this.resourceReference);\n  }\n\n  /**\n   * Update program with shader instance.\n   * The array might be set of vertex shader and fragment shader couple.\n   * @param {Shader[]} shaders [description]\n   */\n  public update(shaders: Shader[]): void {\n    if (this.valid) {\n      // detach all attached shaders previously\n      const preciousShaders = this.gl.getAttachedShaders(this.resourceReference);\n      preciousShaders.forEach(s => this.gl.detachShader(this.resourceReference, s));\n    }\n    this._uniformLocations = {}; // reset location caches\n    this._attributeLocations = {};\n    // attach all shader passed\n    shaders.forEach(shader => {\n      this.gl.attachShader(this.resourceReference, shader.resourceReference);\n    });\n    this.gl.linkProgram(this.resourceReference); // link program and check errors\n    if (!this.gl.getProgramParameter(this.resourceReference, WebGLRenderingContext.LINK_STATUS)) {\n      const errorLog = this.gl.getProgramInfoLog(this.resourceReference);\n      throw new Error(`LINK FAILED\\n${errorLog}`);\n    }\n    this.valid = true;\n  }\n\n  /**\n   * Use this program for drawing.\n   */\n  public use(): void {\n    if (!this.isLastUsed) {\n      this.gl.useProgram(this.resourceReference);\n    }\n    this.uniforms.onUse();\n  }\n\n  /**\n   * Destroy this instance.\n   */\n  public destroy(): void {\n    super.destroy();\n    this.gl.deleteProgram(this.resourceReference);\n    this._uniformLocations = {};\n    this._attributeLocations = {};\n  }\n\n  /**\n   * Fetch attribute location from this program.\n   * @param  {string} variableName [description]\n   * @return {number}              [description]\n   */\n  public findAttributeLocation(variableName: string): number {\n    if (this._attributeLocations[variableName] === void 0) { // If cache is not available\n      this._attributeLocations[variableName] = this.gl.getAttribLocation(this.resourceReference, variableName);\n      this._safeEnableVertexAttribArray(this._attributeLocations[variableName]);\n      return this._attributeLocations[variableName];\n    } else {\n      return this._attributeLocations[variableName];\n    }\n  }\n  /**\n   * Fetch uniform location from this program\n   * @param  {string}               variableName [description]\n   * @return {WebGLUniformLocation}              [description]\n   */\n  public findUniformLocation(variableName: string): WebGLUniformLocation {\n    const location = this._uniformLocations[variableName];\n    if (location === void 0) { // if cache is not available\n      return this._uniformLocations[variableName] = this.gl.getUniformLocation(this.resourceReference, variableName);\n    } else {\n      return location;\n    }\n  }\n\n  private _safeEnableVertexAttribArray(location: number): void {\n    if (location < 0) {\n      return;\n    }\n    this.gl.enableVertexAttribArray(location);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/Program.ts","export class ResourceCache {\n\n  private _lastUsedPrograms: Map<WebGLRenderingContext, WebGLProgram> = new Map<WebGLRenderingContext, WebGLProgram>();\n  /**\n\t * Save the specified WebGLProgram as last used program.\n\t * And check the specified program was used last time.\n\t */\n  public useProgramCheck(gl: WebGLRenderingContext, program: WebGLProgram): boolean {\n    if (this._lastUsedPrograms.get(gl) === program) {\n      return true;\n    }\n    this._lastUsedPrograms.set(gl, program);\n    return false;\n  }\n}\n\nexport default new ResourceCache();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/ResourceCache.ts","import Color3 from \"grimoirejs-math/ref/Color3\";\nimport Color4 from \"grimoirejs-math/ref/Color4\";\nimport Matrix from \"grimoirejs-math/ref/Matrix\";\nimport Vector2 from \"grimoirejs-math/ref/Vector2\";\nimport Vector3 from \"grimoirejs-math/ref/Vector3\";\nimport Vector4 from \"grimoirejs-math/ref/Vector4\";\nimport Program from \"./Program\";\nimport Texture2D from \"./Texture2D\";\n\nconst mat3Cache = new Float32Array(9);\n\nexport default class UniformProxy {\n  private _gl: WebGLRenderingContext;\n\n  private _currentTextureRegister = 0;\n  constructor(public program: Program) {\n    this._gl = program.gl;\n  }\n\n  public uniformBool(variableName: string, val: boolean): void {\n    this._pass(variableName, l => this._gl.uniform1i(l, val ? 1 : 0));\n  }\n\n  public uniformMatrix(variableName: string, mat: Matrix): void {\n    this._pass(variableName, l => {\n      this._gl.uniformMatrix4fv(l, false, mat.rawElements as number[]);\n    });\n  }\n\n  public uniformMatrix3(variableName: string, mat: Matrix): void {\n    this._pass(variableName, l => {\n      const r = mat.rawElements;\n      for (let i = 0; i < 3; i++) {\n        mat3Cache[3 * i + 0] = r[4 * i + 0];\n        mat3Cache[3 * i + 1] = r[4 * i + 1];\n        mat3Cache[3 * i + 2] = r[4 * i + 2];\n      }\n      this._gl.uniformMatrix3fv(l, false, mat3Cache);\n    });\n  }\n\n  public uniformMatrixArray(variableName: string, matricies: Float32Array): void {\n    const length = matricies.length / 16;\n    for (let i = 0; i < length; i++) {\n      this._passAsArray(variableName, i, (l) =>\n        this._gl.uniformMatrix4fv(l, false, new Float32Array(matricies.buffer, matricies.byteOffset + i * 64)),\n      );\n    }\n  }\n\n  public uniformFloat(variableName: string, val: number): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform1f(l, val),\n    );\n  }\n\n  public uniformFloatArray(variableName: string, val: number[]): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform1fv(l, val),\n    );\n  }\n\n  public uniformInt(variableName: string, val: number): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform1i(l, val),\n    );\n  }\n\n  public uniformVector2(variableName: string, val: Vector2): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform2f(l, val.X, val.Y),\n    );\n  }\n\n  public uniformIntVector2(variableName: string, val: Vector2): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform2i(l, val.X, val.Y),\n    );\n  }\n\n  public uniformVector2Array(variableName: string, val: number[] | Float32Array): void {\n    this._pass(variableName, (l) => this._gl.uniform2fv(l, val));\n  }\n\n  public uniformVector3(variableName: string, val: Vector3): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform3f(l, val.X, val.Y, val.Z),\n    );\n  }\n\n  public uniformIntVector3(variableName: string, val: Vector3): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform3i(l, val.X, val.Y, val.Z),\n    );\n  }\n\n  public uniformVector3Array(variableName: string, val: number[] | Float32Array): void {\n    this._pass(variableName, (l) => this._gl.uniform3fv(l, val));\n  }\n\n  public uniformColor3(variableName: string, val: Color3): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform3f(l, val.R, val.G, val.B),\n    );\n  }\n\n  public uniformVector4(variableName: string, val: Vector4): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform4f(l, val.X, val.Y, val.Z, val.W),\n    );\n  }\n\n  public uniformIntVector4(variableName: string, val: Vector4): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform4f(l, val.X, val.Y, val.Z, val.W),\n    );\n  }\n\n  public uniformVector4Array(variableName: string, val: number[] | Float32Array): void {\n    this._pass(variableName, (l) => this._gl.uniform4fv(l, val));\n  }\n\n  public uniformColor4(variableName: string, val: Color4): void {\n    this._pass(variableName, (l) =>\n      this._gl.uniform4f(l, val.R, val.G, val.B, val.A),\n    );\n  }\n\n  public uniformTexture2D(variableName: string, val: Texture2D): void {\n    if (val.valid) {\n      val.register(this._currentTextureRegister);\n      this.uniformInt(variableName, this._currentTextureRegister);\n      this._currentTextureRegister++;\n    } else {\n      console.warn(`The texture assigned to '${variableName}' is not valid.`);\n    }\n  }\n\n  public onUse(): void {\n    this._currentTextureRegister = 0;\n  }\n\n  private _pass(variableName: string, act: (location: WebGLUniformLocation) => void) {\n    const location = this.program.findUniformLocation(variableName);\n    if (location) {\n      act(location);\n    }\n  }\n\n  private _passAsArray(variableName: string, index: number, act: (location: WebGLUniformLocation) => void) {\n    // tslint:disable-next-line:prefer-template\n    const location = this.program.findUniformLocation(variableName + \"[\" + index + \"]\");\n    if (location) {\n      act(location);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/UniformProxy.ts","import HashCalculator from \"../Util/HashCalculator\";\nimport Shader from \"./Shader\";\n\n/**\n * Provides abstraction of shader instance.\n * If specified shader source was instanced already, delegate actual instance.\n * And counts reference of shader and if that shader was released and the count is zero, this shader resource would be deleted automatically.\n *\n * DO NOT instanciate this class directly. Use getShader method instead.\n */\nexport default class ManagedShader extends Shader {\n  private static _managedShaders: Map<WebGLRenderingContext, { [key: number]: ManagedShader }> = new Map<WebGLRenderingContext, { [key: number]: ManagedShader }>();\n\n  /**\n   * Obtain a reference to shader.\n   * @param  {WebGLRenderingContext} gl     [description]\n   * @param  {number}                type   [description]\n   * @param  {string}                shader [description]\n   * @return {ManagedShader}                [description]\n   */\n  public static getShader(gl: WebGLRenderingContext, type: number, shader: string): ManagedShader {\n    if (!ManagedShader._managedShaders.has(gl)) {\n      ManagedShader._managedShaders.set(gl, {});\n    }\n    const shaders = ManagedShader._managedShaders.get(gl);\n    const hash = HashCalculator.calcHash(shader + type);\n    if (shaders[hash] === void 0) {\n      shaders[hash] = new ManagedShader(gl, type, shader, hash);\n    }\n    shaders[hash]._referenceCount++;\n    return shaders[hash];\n  }\n\n  private _referenceCount = 0;\n\n  constructor(gl: WebGLRenderingContext, public readonly type: number, public sourceCode: string, public hash: number) {\n    super(gl, type, sourceCode);\n  }\n\n  /**\n   * Release shader instance from reference.\n   * Do not call this method dupelicately per a getShader call.\n   *\n   * That would make this shader disposed unintendedly.\n   */\n  public release(): void {\n    this._referenceCount--;\n    if (this._referenceCount === 0) {\n      this.destroy();\n      ManagedShader._managedShaders.get(this.gl)[this.hash] = void 0;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/ManagedShader.ts","import GLResource from \"./GLResource\";\nexport default class Shader extends GLResource<WebGLShader> {\n  constructor(gl: WebGLRenderingContext, public readonly type: number, public sourceCode?: string) {\n    super(gl, gl.createShader(type));\n    if (sourceCode) {\n      this.update(sourceCode);\n    }\n  }\n\n  public update(source: string): void {\n    this.gl.shaderSource(this.resourceReference, source);\n    this.gl.compileShader(this.resourceReference);\n    if (!this.gl.getShaderParameter(this.resourceReference, WebGLRenderingContext.COMPILE_STATUS)) {\n      throw new Error(`Compiling shader failed.\\nSourceCode:\\n${this._insertLineNumbers(source)}\\n\\nErrorCode:${this.gl.getShaderInfoLog(this.resourceReference)}`);\n    }\n    this.sourceCode = source;\n    this.valid = true;\n  }\n\n  public destroy(): void {\n    super.destroy();\n    this.gl.deleteShader(this.resourceReference);\n  }\n\n  private _insertLineNumbers(source: string): string {\n    source = \"1:\" + source;\n    let lN = 2;\n    for (let i = 0; i < source.length; i++) {\n      const c = source.charAt(i);\n      if (c === \"\\n\") {\n        source = source.substring(0, i + 1) + `${lN}:` + source.substring(i + 1, source.length);\n        i++;\n        lN++;\n      }\n    }\n    return source;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/Shader.ts","import header from \"raw-loader!../Shaders/header.glsl\";\nimport Geometry from \"../Geometry/Geometry\";\nimport GLSLPrecisionChecker from \"../Resource/GLSLPrecisionChecker\";\nimport IGLSLPrecision from \"../Resource/IGLSLPrecision\";\nexport default class ShaderMixer {\n  /**\n   * Generate shader code from specified macro and codes.\n   * @param  {number}  type   WebGLRenderingContext.VERTEX_SHADER or WebGLRenderingContext.FRAGMENT_SHADER\n   * @param   macros macro hash to be included\n   * @param  {string}  code   shader body(Raw glsl)\n   * @return {string}         generated shader code\n   */\n  public static generate(type: number, macros: { [key: string]: string }, code: string, geometry: Geometry): string {\n    let shaderTypeMacro;\n    if (type === WebGLRenderingContext.VERTEX_SHADER) {\n      shaderTypeMacro = \"#define VS\\n\";\n    } else {\n      shaderTypeMacro = \"#define FS\\n\";\n    }\n    return `${shaderTypeMacro}${this._precisionCode(geometry.gl)}${ShaderMixer._geometryToAttributeUsedFlags(geometry)}${ShaderMixer._macroCode(macros)}${header}\\n/*****BEGINNING OF USER CODE******/\\n${code}`;\n  }\n\n  private static _macroCode(macros: { [key: string]: string }): string {\n    let macroCode = \"\";\n    for (const macroName in macros) {\n      if (macros[macroName] === void 0) {\n        continue;\n      }\n      macroCode += `#define ${macroName} ${macros[macroName]}\\n`;\n    }\n    return macroCode;\n  }\n\n  private static _geometryToAttributeUsedFlags(geometry: Geometry): string {\n    let macroCode = \"\";\n    for (const attribName in geometry.accessors) {\n      macroCode += `#define ATTRIBUTE_${attribName}_ENABLED\\n`;\n    }\n    return macroCode;\n  }\n\n  private static _precisionCode(gl: WebGLRenderingContext): string {\n    let result = \"\";\n    const prec = GLSLPrecisionChecker.get(gl);\n    result += ShaderMixer._precisionChunk(prec.vertexInteger, \"VERTEX_INTEGER\", false);\n    result += ShaderMixer._precisionChunk(prec.fragmentInteger, \"FRAGMENT_INTEGER\", false);\n    result += ShaderMixer._precisionChunk(prec.vertexFloat, \"VERTEX_FLOAT\", true);\n    result += ShaderMixer._precisionChunk(prec.fragmentFloat, \"FRAGMENT_FLOAT\", true);\n    return result;\n  }\n\n  private static _precisionChunk(prec: IGLSLPrecision, typeName: string, isFloat: boolean): string {\n    return ShaderMixer._precisionForVariable(prec.lowp, typeName + \"_LOWP\", isFloat) + ShaderMixer._precisionForVariable(prec.mediump, typeName + \"_MEDIUMP\", isFloat) + ShaderMixer._precisionForVariable(prec.highp, typeName + \"_HIGHP\", isFloat);\n  }\n\n  private static _precisionForVariable(prec: WebGLShaderPrecisionFormat, name: string, isFloat: boolean): string {\n    return `#define VARIABLE_MIN_${name} ${prec.rangeMin}\\n#define VARIABLE_MAX_${name} ${prec.rangeMax}\\n` + (isFloat ? `#define VARIABLE_PRECISION_${name} ${prec.precision} \\n` : \"\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/ShaderMixer.ts","import GLRelatedRegistryBase from \"./GLRelatedRegistryBase\";\nimport IGLSLPrecision from \"./IGLSLPrecision\";\nexport default class GLSLPrecisionChecker extends GLRelatedRegistryBase {\n    public static registryName = \"GLSLPrecisionChecker\";\n    public static get(gl: WebGLRenderingContext) {\n        return this.__get(gl, GLSLPrecisionChecker);\n    }\n\n    public vertexInteger: IGLSLPrecision;\n\n    public fragmentInteger: IGLSLPrecision;\n\n    public vertexFloat: IGLSLPrecision;\n\n    public fragmentFloat: IGLSLPrecision;\n\n    constructor(public gl: WebGLRenderingContext) {\n        super();\n        this.vertexInteger = {\n            lowp: gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_INT),\n            mediump: gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_INT),\n            highp: gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_INT),\n        };\n        this.fragmentInteger = {\n            lowp: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_INT),\n            mediump: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_INT),\n            highp: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT),\n        };\n        this.vertexFloat = {\n            lowp: gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT),\n            mediump: gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT),\n            highp: gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT),\n        };\n        this.fragmentFloat = {\n            lowp: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT),\n            mediump: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT),\n            highp: gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/GLSLPrecisionChecker.ts","import UniformProxy from \"../Resource/UniformProxy\";\nimport IMaterialArgument from \"./IMaterialArgument\";\nimport PassProgram from \"./PassProgram\";\nimport {IUniformRegisterOnDispose, IUniformRegisterOnRegister, IUniformRegisterOnUpdate} from \"./UniformResolverRegistry\";\n\n/**\n * Container of uniform registerers resolved by UniformResolverRegistry already.\n * @param  {IUniformRegisterOnRegister[]} publicregisterers [description]\n * @param  {IUniformRegisterOnDispose[]}  publicdisposers   [description]\n * @return {[type]}                                         [description]\n */\nexport default class UniformResolverContainer {\n  constructor(public registerers: IUniformRegisterOnRegister[], public disposers: IUniformRegisterOnDispose[], public updators: { [variableName: string]: IUniformRegisterOnUpdate }) {\n\n  }\n  /**\n   * Resolve uniform variables to pass gpu\n   * @param {UniformProxy}      proxy [description]\n   * @param {IMaterialArgument} args  [description]\n   */\n  public resolve(proxy: UniformProxy, args: IMaterialArgument): void {\n    this.registerers.forEach(r => r(proxy, args));\n  }\n  /**\n   * Dispose all resolvers\n   */\n  public dispose(): void {\n    this.disposers.forEach(d => d());\n  }\n\n  /**\n   * Update specified variable\n   * @param {string} variableName [description]\n   */\n  public update(passProgram: PassProgram, variableName: string, newValue: any, oldValue: any): void {\n    if (this.updators[variableName]) {\n      this.updators[variableName](passProgram, newValue, oldValue);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/UniformResolverContainer.ts","import TextureSizeCalculator from \"../Util/TextureSizeCalculator\";\nimport GLResource from \"./GLResource\";\nimport GLUtility from \"./GLUtility\";\nimport IResizeResult from \"./IResizeResult\";\nexport default abstract class Texture extends GLResource<WebGLTexture> {\n\n    private static _resizerCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\n\n    private static _resizerContext = Texture._resizerCanvas.getContext(\"2d\");\n\n    /**\n    * ミップマップの更新が必要なフィルタ\n    * @type {number[]}\n    */\n    private static _filtersNeedsMipmap: number[] = [\n        WebGLRenderingContext.LINEAR_MIPMAP_LINEAR,\n        WebGLRenderingContext.LINEAR_MIPMAP_NEAREST,\n        WebGLRenderingContext.NEAREST_MIPMAP_LINEAR,\n        WebGLRenderingContext.NEAREST_MIPMAP_NEAREST,\n    ];\n\n    public get magFilter(): number {\n        return this._magFilter;\n    }\n\n    public set magFilter(filter: number) {\n        if (this._magFilter !== filter) {\n            this._texParameterChanged = true;\n            this._magFilter = filter;\n        }\n    }\n\n    public get minFilter(): number {\n        return this._minFilter;\n    }\n\n    public set minFilter(filter: number) {\n        if (this._minFilter !== filter) {\n            this._texParameterChanged = true;\n            this._minFilter = filter;\n            this.__ensureMipmap();\n        }\n    }\n\n    public get wrapS(): number {\n        return this._wrapS;\n    }\n\n    public set wrapS(filter: number) {\n        if (this._wrapS !== filter) {\n            this._texParameterChanged = true;\n            this._wrapS = filter;\n        }\n    }\n\n    public get wrapT(): number {\n        return this._wrapT;\n    }\n\n    public set wrapT(filter: number) {\n        if (this._wrapT !== filter) {\n            this._texParameterChanged = true;\n            this._wrapT = filter;\n        }\n    }\n\n    public get format(): number {\n        return this.__format;\n    }\n\n    public get type(): number {\n        return this.__type;\n    }\n\n    protected __format: number = WebGLRenderingContext.RGBA;\n\n    protected __type: number = WebGLRenderingContext.UNSIGNED_BYTE;\n\n    private _texParameterChanged = true;\n\n    private _magFilter: number = WebGLRenderingContext.LINEAR;\n\n    private _minFilter: number = WebGLRenderingContext.LINEAR;\n\n    private _wrapS: number = WebGLRenderingContext.REPEAT;\n\n    private _wrapT: number = WebGLRenderingContext.REPEAT;\n\n    constructor(gl: WebGLRenderingContext, public textureType: number) {\n        super(gl, gl.createTexture());\n    }\n\n    public destroy(): void {\n        super.destroy();\n        this.gl.deleteTexture(this.resourceReference);\n    }\n\n    public register(registerNumber: number): void {\n        this.gl.activeTexture(WebGLRenderingContext.TEXTURE0 + registerNumber);\n        this.gl.bindTexture(this.textureType, this.resourceReference);\n        this.__applyTexParameter();\n    }\n\n    protected __getRawPixels<T extends ArrayBufferView = ArrayBufferView>(type: number, format: number, x = 0, y = 0, width: number, height: number, from: number): T {\n        const bufferCtor = GLUtility.typeToTypedArrayConstructor(type);\n        const buffer = new bufferCtor(width * height * GLUtility.formatToElementCount(format));\n        const frame = this.gl.createFramebuffer();\n        this.gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, frame);\n        this.gl.framebufferTexture2D(WebGLRenderingContext.FRAMEBUFFER, WebGLRenderingContext.COLOR_ATTACHMENT0, from, this.resourceReference, 0);\n        if (this.gl.checkFramebufferStatus(WebGLRenderingContext.FRAMEBUFFER) === WebGLRenderingContext.FRAMEBUFFER_COMPLETE) {\n            this.gl.readPixels(x, y, width, height, format, type, buffer);\n        }\n        this.gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, null);\n        return buffer as T;\n    }\n\n    /**\n     * Ensure specified resource is POT(Power of Two) resource.\n     * If speciefied resource was NPOT, resize specified resource to POT.\n     * @param image\n     */\n    protected __ensurePOT(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement): IResizeResult {\n        if (image instanceof HTMLImageElement) {\n            return this._ensureImagePOT(image);\n        } else if (image instanceof HTMLCanvasElement) {\n            return this._ensureCanvasPOT(image);\n        } else if (image instanceof HTMLVideoElement) {\n            return this._ensureVideoPOT(image);\n        } else {\n            throw new Error(\"Unsupported resource type\");\n        }\n    }\n\n    protected abstract __ensureMipmap(): void;\n\n    /**\n     * Check specified min filter requires mip map or not.\n     * @param minFilter min filter type\n     */\n    protected __needMipmap(minFilter: number): boolean {\n        return Texture._filtersNeedsMipmap.indexOf(minFilter) > -1;\n    }\n\n    /**\n     * Apply texParameteri parameters before updating texture\n     */\n    protected __applyTexParameter(): void {\n        if (!this._texParameterChanged) {\n            return;\n        }\n        this.gl.texParameteri(this.textureType, WebGLRenderingContext.TEXTURE_MIN_FILTER, this._minFilter);\n        this.gl.texParameteri(this.textureType, WebGLRenderingContext.TEXTURE_MAG_FILTER, this._magFilter);\n        this.gl.texParameteri(this.textureType, WebGLRenderingContext.TEXTURE_WRAP_S, this._wrapS);\n        this.gl.texParameteri(this.textureType, WebGLRenderingContext.TEXTURE_WRAP_T, this._wrapT);\n        this._texParameterChanged = false;\n    }\n\n    // There should be more effective way to resize texture\n    private _ensureImagePOT(img: HTMLImageElement): IResizeResult {\n        const w = img.naturalWidth, h = img.naturalHeight;\n        const size = TextureSizeCalculator.getPow2Size(w, h);\n        if (w !== size.width || h !== size.height) {\n            return {\n                result: this._resizeImageOrVideo(img, size.width, size.height),\n                height: size.height,\n                width: size.width,\n            };\n        }\n        return {\n            result: img,\n            width: w,\n            height: h,\n        };\n    }\n\n    private _ensureCanvasPOT(canvas: HTMLCanvasElement): IResizeResult {\n        const w = canvas.width;\n        const h = canvas.height;\n        const size = TextureSizeCalculator.getPow2Size(w, h);\n        if (w !== size.width || h !== size.height) {\n            canvas.width = size.width;\n            canvas.height = size.height;\n            return {\n                result: canvas,\n                width: canvas.width,\n                height: canvas.height,\n            };\n        }\n        return {\n            result: canvas,\n            width: canvas.width,\n            height: canvas.height,\n        };\n    }\n\n    private _ensureVideoPOT(video: HTMLVideoElement): IResizeResult {\n        const w = video.videoWidth, h = video.videoHeight;\n        const size = TextureSizeCalculator.getPow2Size(w, h); // largest 2^n integer that does not exceed s\n        if (w !== size.width || h !== size.height) {\n            return {\n                result: this._resizeImageOrVideo(video, size.width, size.height),\n                width: size.width,\n                height: size.height,\n            };\n        }\n        return {\n            result: video,\n            width: w,\n            height: h,\n        };\n    }\n\n    private _resizeImageOrVideo(resource: HTMLImageElement | HTMLVideoElement, width: number, height: number): HTMLCanvasElement {\n        const canv = Texture._resizerCanvas;\n        canv.height = height;\n        canv.width = width;\n        Texture._resizerContext.drawImage(resource, 0, 0, resource.width, resource.height, 0, 0, width, height);\n        return Texture._resizerCanvas;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/Texture.ts","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS&&window.GrimoireJS.lib.math?window.GrimoireJS.lib.math.Rectangle:undefined;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs-math/ref/Rectangle.js\n// module id = 84\n// module chunks = 0","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\n\n/**\n * フルスクリーン状態を管理するコンポーネント\n * Grimoire.jsによって管理されているキャンバス(正確にはその親のコンテナ)のフルスクリーン状態等を管理します。\n * (他の要素をフルスクリーン化することも可能ですが、通常このGrimoire.jsによって生成されるキャンバスを含むDOM要素に対して用いられます。)\n * また、一部の古いブラウザでは動作しない機能であることに注意してください。\n * また、`fullscreen`属性は必ず マウスのイベントなどのユーザーのインタラクションを伴うイベントからの呼び出しで **動的に** trueにされる必要があります。\n * 最初からtrueに設定して初期状態でキャンバスをフルスクリーン状態にすることはWebAPIの制約上できません。\n */\nexport default class FullscreenComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    /**\n     * フルスクリーン状態かどうか\n     *\n     * このフラグをtrueにする際は、**必ず**、マウスイベントなどのユーザーのインタラクションを伴うイベントからの呼び出しで変更されなければなりません。\n     *\n     * したがって、GOMLで初期状態からこのフラグをtrueにすることはできません。\n     */\n    fullscreen: {\n      converter: \"Boolean\",\n      default: false,\n    },\n    /**\n     * フルスクリーンにするDOM要素へのクエリ\n     *\n     * nullが指定された場合、キャンバスの親要素が用いられます。\n     */\n    fullscreenTarget: {\n      converter: \"String\",\n      default: null,\n    },\n  };\n\n  private _fullscreen = false;\n\n  public $awake(): void {\n    this.getAttributeRaw(\"fullscreen\").watch((attr) => {\n      if (this._fullscreen === attr) {\n        return;\n      }\n      this._fullscreen = attr;\n      this._switchFullscreen();\n    });\n  }\n\n  private _switchFullscreen(): void {\n    if (this._fullscreen) {\n      const target = this.getAttribute(\"fullscreenTarget\");\n      if (target) {\n        const queriedTarget = document.querySelectorAll(target);\n        if (queriedTarget[0]) {\n          this.requestFullscreen(queriedTarget[0]);\n        } else {\n          console.warn(\"Specified fullscreenTarget was not found on HTML dom tree\");\n        }\n      } else {\n        this.requestFullscreen(this.companion.get(\"canvasContainer\"));\n      }\n    } else {\n      this.exitFullscreen();\n    }\n  }\n\n  private requestFullscreen(target: Element): void {\n    if (target.webkitRequestFullscreen) {\n      target.webkitRequestFullscreen(); // Chrome15+, Safari5.1+, Opera15+\n    } else if (target[\"mozRequestFullScreen\"]) {\n      target[\"mozRequestFullScreen\"](); // FF10+\n    } else if (target[\"msRequestFullscreen\"]) {\n      target[\"msRequestFullscreen\"](); // IE11+\n    } else if (target.requestFullscreen) {\n      target.requestFullscreen(); // HTML5 Fullscreen API仕様\n    } else {\n      console.error(\"ご利用のブラウザはフルスクリーン操作に対応していません\");\n      return;\n    }\n  }\n  /*フルスクリーン終了用ファンクション*/\n  private exitFullscreen(): void {\n    if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen(); // Chrome15+, Safari5.1+, Opera15+\n    } else if (document[\"mozCancelFullScreen\"]) {\n      document[\"mozCancelFullScreen\"](); // FF10+\n    } else if (document[\"msExitFullscreen\"]) {\n      document[\"msExitFullscreen\"](); // IE11+\n    } else if (document[\"cancelFullScreen\"]) {\n      document[\"cancelFullScreen\"](); // Gecko:FullScreenAPI仕様\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen(); // HTML5 Fullscreen API仕様\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/FullscreenComponent.ts","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Geometry from \"../Geometry/Geometry\";\nimport GeometryFactory from \"../Geometry/GeometryFactory\";\nimport GeometryRegistory from \"./GeometryRegistoryComponent\";\n/**\n * ジオメトリを生成するためのコンポーネント\n * `type`属性に指定されたタイプのジオメトリを生成して、`name`属性に指定された名前で利用できる形にして登録します。\n * このコンポーネントは`type`属性に応じて、**動的** に属性が増えることに気をつけてください。\n */\nexport default class GeometryComponent extends Component {\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        /**\n         * 生成するプリミティブのタイプ\n         *\n         * `GeometryFactory`に登録されたプリミティブのジェネレーターの名前を指します。\n         * この指定する名前によって、動的に属性が増えることに気をつけてください。\n         * また、増えたジオメトリの属性は動的に操作できないことに気をつけてください。\n         */\n        type: {\n            converter: \"String\",\n            default: null,\n        },\n        /**\n         * ジオメトリにつける名前\n         *\n         * `GeometryConverter`によって取得される際に利用されるジオメトリ名です。\n         * もし、`quad`など事前に登録されたジオメトリを指定した場合、そのジオメトリを上書きすることができます。\n         */\n        name: {\n            converter: \"String\",\n            default: null,\n        },\n    };\n\n    public geometry: Geometry;\n\n    public async $mount(): Promise<void> {\n        const type = this.getAttribute(\"type\");\n        if (type) {\n            const gf = GeometryFactory.get(this.companion.get(\"gl\"));\n            const attrs = GeometryFactory.factoryArgumentDeclarations[type];\n            const geometryArgument = {};\n            for (const key in attrs) {\n                this.__addAttribute(key, attrs[key]);\n                geometryArgument[key] = this.getAttribute(key);\n            }\n            const generator = gf.instanciate(type, geometryArgument);\n            const gr = this.companion.get(\"GeometryRegistory\") as GeometryRegistory;\n            const name = this.getAttribute(\"name\");\n            if (!name) {\n                throw new Error(\"Name was not specified\");\n            }\n            gr.addGeometry(name, generator);\n            this.geometry = await generator;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/GeometryComponent.ts","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport NameResolver from \"../Asset/NameResolver\";\nimport Geometry from \"../Geometry/Geometry\";\nimport GeometryFactory from \"../Geometry/GeometryFactory\";\n\n/**\n * ジオメトリを管理するコンポーネント\n * あまりユーザーが直接操作することはありません。\n */\nexport default class GeometryRegistoryComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    /**\n     * デフォルトで生成するジオメトリの種類\n     */\n    defaultGeometry: {\n      converter: \"StringArray\",\n      default: [\"quad\", \"cube\", \"sphere\"],\n    },\n  };\n\n  private _geometryResolver: NameResolver<Geometry> = new NameResolver<Geometry>();\n\n  public $awake(): void {\n    this.companion.set(this.name, this);\n    const factory = GeometryFactory.get(this.companion.get(\"gl\"));\n    for (const geometry of this.getAttribute(\"defaultGeometry\") as string[]) {\n      this.addGeometry(geometry, factory.instanciateAsDefault(geometry));\n    }\n  }\n\n  public addGeometry(name: string, geometry: Promise<Geometry> | Geometry): void {\n    this._geometryResolver.register(name, geometry);\n  }\n\n  public getGeometry(name: string): Promise<Geometry> {\n    return this._geometryResolver.get(name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/GeometryRegistoryComponent.ts","type DrawPriortyCriteria = {\n  priorty: number;\n  descending?: boolean;\n};\nexport default {\n  Background: { priorty: 1000 },\n  NoAlpha: { priorty: 2000 },\n  UseAlpha: { priorty: 3000, descending: true },\n  NoDepth: { priorty: 4000, descending: true },\n  Overlay: { priorty: 5000, descending: true },\n} as { [key: string]: DrawPriortyCriteria };\n\n\n\n// WEBPACK FOOTER //\n// ./src/SceneRenderer/DrawPriorty.ts","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport NameResolver from \"../Asset/NameResolver\";\nimport MaterialFactory from \"../Material/MaterialFactory\";\n\n/**\n * マテリアル設定ファイルを読み込むためのコンポーネント\n */\nexport default class MaterialImporterComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    /**\n     * マテリアル名として登録される名前\n     */\n    typeName: {\n      default: null,\n      converter: \"String\",\n    },\n    /**\n     * 読み込み先のファイルパス\n     */\n    src: {\n      default: null,\n      converter: \"String\",\n    },\n  };\n\n  public $awake(): void {\n    this.getAttributeRaw(\"typeName\").watch(() => {\n      console.warn(\"Changeing 'typeName' on MaterialImporter makes no sense. This change won't affect anything.\");\n    });\n    this.getAttributeRaw(\"src\").watch(() => {\n      console.warn(\"Changeing 'src' on MaterialImporter makes no sense. This change won't affect anything.\");\n    });\n    if (!this.getAttribute(\"typeName\") || !this.getAttribute(\"src\")) {\n      throw new Error(\"type or src cannot be null in material importer\");\n    } else {\n      const typeName = this.getAttribute(\"typeName\") as string;\n      if (MaterialFactory.getMaterialStatus(typeName) !== NameResolver.UNLOADED) {\n        throw new Error(`A material type '${typeName}' is already loaded.`);\n      }\n      MaterialFactory.addSORTMaterialFromURL(this.getAttribute(\"typeName\"), this.getAttribute(\"src\"));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/MaterialImporterComponent.ts","import grimoirejs from \"grimoirejs\";\nimport GLM from \"grimoirejs-math/ref/GLM\";\nimport Component from \"grimoirejs/ref/Node/Component\";\nimport GomlNode from \"grimoirejs/ref/Node/GomlNode\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Geometry from \"../Geometry/Geometry\";\nimport IMaterialArgument from \"../Material/IMaterialArgument\";\nimport IRenderable from \"../SceneRenderer/IRenderable\";\nimport IRenderArgument from \"../SceneRenderer/IRenderArgument\";\nimport CameraComponent from \"./CameraComponent\";\nimport MaterialContainerComponent from \"./MaterialContainerComponent\";\nimport SceneComponent from \"./SceneComponent\";\nimport TransformComponent from \"./TransformComponent\";\nconst { vec3 } = GLM;\n\n/**\n * シーン中に存在するメッシュ一つあたりのレンダリングを司るコンポーネント\n * このメッシュが、対象となるノードの`Transform`や描画に用いる`Camera`、マテリアルなどを考慮して実際のレンダリングを行います。\n */\nexport default class MeshRenderer extends Component implements IRenderable {\n\n    /**\n   * Find scene tag recursively.\n   * @param  {GomlNode}       node [the node to searching currently]\n   * @return {SceneComponent}      [the scene component found]\n   */\n    private static _findContainedScene(node: GomlNode): SceneComponent {\n        if (node.parent) {\n            const scene = node.parent.getComponent(SceneComponent);\n            if (scene) {\n                return scene;\n            } else {\n                return MeshRenderer._findContainedScene(node.parent);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        /**\n         * 描画に用いる形状データ\n         */\n        geometry: {\n            converter: \"Geometry\",\n            default: \"quad\",\n        },\n        /**\n         * 描画に用いるインデックスバッファ名\n         */\n        indexGroup: {\n            converter: \"String\",\n            default: \"default\",\n        },\n        /**\n         * このメッシュが属するレイヤー\n         *\n         * 詳しくは`render-scene`ノードを参考にしてください。\n         */\n        layer: {\n            converter: \"String\",\n            default: \"default\",\n        },\n        /**\n         * 描画するインデックスの個数\n         *\n         * デフォルトの状態でジオメトリの全インデックスを描画する\n         */\n        drawCount: {\n            converter: \"Number\",\n            default: Number.MAX_VALUE,\n        },\n        /**\n         * 描画するジオメトリのインデックスのオフセット\n         */\n        drawOffset: {\n            converter: \"Number\",\n            default: 0,\n        },\n    };\n\n    public index: number;\n    public renderArgs: { [key: string]: any } = {};\n    public geometry: Promise<Geometry>;\n    public geometryInstance: Geometry;\n    private indexGroup: string;\n    private layer: string;\n    private drawOffset: number;\n    private drawCount: number;\n    private _materialContainer: MaterialContainerComponent;\n    private _transformComponent: TransformComponent;\n    private _containedScene: SceneComponent;\n\n    private _priortyCalcCache = new Float32Array(3);\n\n    public getRenderingPriorty(camera: CameraComponent, technique: string): number {\n        if (!this.geometryInstance || !this._materialContainer.material.techniques[technique]) {\n            return Number.NEGATIVE_INFINITY;\n        }\n        vec3.add(this._priortyCalcCache, camera.transform.globalPosition.rawElements, this.geometryInstance.aabb.Center.rawElements);\n        vec3.sub(this._priortyCalcCache, this._priortyCalcCache, this._transformComponent.globalPosition.rawElements);\n        return this._materialContainer.getDrawPriorty(vec3.sqrLen(this._priortyCalcCache), technique); // Obtains distance between camera and center of aabb\n    }\n\n    public $awake(): void {\n        this.__bindAttributes();\n        this.getAttributeRaw(\"geometry\").watch(async() => {\n            this.geometryInstance = await this.geometry;\n        }, true);\n    }\n\n    public $mount(): void {\n        this._transformComponent = this.node.getComponent(TransformComponent);\n        this._materialContainer = this.node.getComponent(MaterialContainerComponent);\n        this._containedScene = MeshRenderer._findContainedScene(this.node);\n        this._containedScene.queueRegistory.addRenderable(this);\n    }\n\n    public $unmount(): void {\n        this._containedScene.queueRegistory.removeRenderable(this);\n    }\n\n    public render(args: IRenderArgument): void {\n        if (!this.node.isActive || !this.enabled || this.layer !== args.layer) {\n            return;\n        }\n        if (!this.geometryInstance || (!args.material && !this._materialContainer.material)) {\n            return; // material is not instanciated yet.\n        }\n        const renderArgs = {\n            indexGroup: this.indexGroup,\n            geometry: this.geometryInstance,\n            camera: args.camera,\n            transform: this._transformComponent,\n            viewport: args.viewport,\n            drawCount: this.drawCount,\n            drawOffset: this.drawOffset,\n            sceneDescription: args.sceneDescription,\n            rendererDescription: args.rendererDescription,\n            technique: args.technique,\n            renderable: this,\n        } as IMaterialArgument;\n        if (grimoirejs.debug && window[\"spector\"]) {\n            window[\"spector\"].setMarker(`Mesh renderer:${this.node.id}`);\n        }\n        this._materialContainer.material.draw(renderArgs);\n        this.node.emit(\"render\", args);\n    }\n\n    public setRenderableIndex(index: number): void {\n        this.index = index;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/MeshRendererComponent.ts","import Matrix from \"grimoirejs-math/ref/Matrix\";\nimport Quaternion from \"grimoirejs-math/ref/Quaternion\";\nimport Vector3 from \"grimoirejs-math/ref/Vector3\";\nimport Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport TransformComponent from \"./TransformComponent\";\n\nexport default class MouseCameraControlComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    rotateSpeed: {\n      default: 1,\n      converter: \"Number\",\n    },\n    zoomSpeed: {\n      default: 1,\n      converter: \"Number\",\n    },\n    moveSpeed: {\n      default: 1,\n      converter: \"Number\",\n    },\n    center: {\n      default: \"0,0,0\",\n      converter: \"Position\",\n      lazy: true,\n    },\n    distance: {\n      default: null,\n      converter: \"Number\",\n    },\n    preventScroll: {\n      default: true,\n      converter: \"Boolean\",\n    },\n  };\n\n  // propaty bound to\n  public rotateSpeed: number;\n  public zoomSpeed: number;\n  public moveSpeed: number;\n  public center: Vector3;\n  public distance: number;\n  private _transform: TransformComponent;\n  private _updated = false;\n\n  private _lastCenter: Vector3 = null;\n\n  private _lastScreenPos: { x: number, y: number } = null;\n  private _lastPinchDistance = null;\n\n  private _initialDirection: Vector3;\n  private _initialRotation: Quaternion;\n\n  private _xsum = 0;\n\n  private _ysum = 0;\n\n  private _d: Vector3 = Vector3.Zero;\n\n  private _listeners: any;\n\n  public $awake(): void {\n    this.__bindAttributes();\n    this._listeners = {\n      mousemove: this._mouseMove.bind(this),\n      touchmove: this._touchMove.bind(this),\n      touchstart: this._touchStart.bind(this),\n      touchend: this._touchEnd.bind(this),\n      contextmenu: this._contextMenu.bind(this),\n      wheel: this._mouseWheel.bind(this),\n    };\n  }\n\n  public $mount(): void {\n    this._transform = this.node.getComponent(TransformComponent);\n    const canvasElement = this.companion.get(\"canvasElement\");\n    canvasElement.addEventListener(\"mousemove\", this._listeners.mousemove);\n    canvasElement.addEventListener(\"touchmove\", this._listeners.touchmove);\n    canvasElement.addEventListener(\"touchstart\", this._listeners.touchstart);\n    canvasElement.addEventListener(\"touchend\", this._listeners.touchend);\n    canvasElement.addEventListener(\"contextmenu\", this._listeners.contextmenu);\n    canvasElement.addEventListener(\"wheel\", this._listeners.wheel);\n\n    this._lastScreenPos = null;\n    this._xsum = 0;\n    this._ysum = 0;\n  }\n  public $unmount() {\n    const canvasElement = this.companion.get(\"canvasElement\");\n    canvasElement.removeEventListener(\"mousemove\", this._listeners.mousemove);\n    canvasElement.removeEventListener(\"touchmove\", this._listeners.touchmove);\n    canvasElement.removeEventListener(\"touchstart\", this._listeners.touchstart);\n    canvasElement.removeEventListener(\"touchend\", this._listeners.touchend);\n    canvasElement.removeEventListener(\"contextmenu\", this._listeners.contextmenu);\n    canvasElement.removeEventListener(\"wheel\", this._listeners.wheel);\n  }\n\n  public $initialized() {\n    const look = Vector3.normalize(this.center.subtractWith(this._transform.position));\n    const g = Quaternion.fromToRotation(this._transform.forward, look).normalize();\n    this._transform.rotation = g;\n    this._initialRotation = g;\n    this._initialDirection = Vector3.copy(this._transform.forward.negateThis()).normalized;\n\n    if (this.distance !== null) {\n      this._transform.position = this.center.addWith(this._initialDirection.multiplyWith(this.distance));\n    } else {\n      this.distance = this._transform.position.subtractWith(this.center).magnitude;\n    }\n  }\n  public $update() {\n    if (this.isActive && this._updated || !this._lastCenter || !this.center.equalWith(this._lastCenter)) {\n      this._updated = false;\n      this._lastCenter = this.center;\n\n      // rotate excution\n      const rotationVartical = Quaternion.angleAxis(-this._xsum * this.rotateSpeed * 0.01, Vector3.YUnit);\n      const rotationHorizontal = Quaternion.angleAxis(-this._ysum * this.rotateSpeed * 0.01, Vector3.XUnit);\n      const rotation = Quaternion.multiply(rotationVartical, rotationHorizontal);\n\n      const rotationMat = Matrix.rotationQuaternion(rotation);\n      const direction = Matrix.transformNormal(rotationMat, this._initialDirection);\n      this._transform.position = this.center.addWith(this._d).addWith(Vector3.normalize(direction).multiplyWith(this.distance));\n      this._transform.rotation = rotation;\n      this._transform.rotation = Quaternion.multiply(rotation, this._initialRotation);\n    }\n  }\n\n  private _contextMenu(m: MouseEvent): void {\n    if (!this.isActive) {\n      return;\n    }\n    m.preventDefault();\n  }\n\n  private _touchStart(m: TouchEvent): void {\n    if (!this.isActive) {\n      return;\n    }\n    if (m.touches.length >= 2) {\n      this._lastPinchDistance =\n        ((m.touches[0].pageX - m.touches[1].pageX) ** 2 +\n        (m.touches[0].pageY - m.touches[1].pageY) ** 2) ** 0.5;\n    }\n    this._lastScreenPos = null;\n    m.preventDefault();\n  }\n\n  private _touchEnd(m: TouchEvent): void {\n    if (!this.isActive) {\n      return;\n    }\n  }\n\n  private _mouseMove(m: MouseEvent): void {\n    if (!this.isActive) {\n      return;\n    }\n    const x = m.screenX;\n    const y = m.screenY;\n    if (this._lastScreenPos === null) {\n      this._lastScreenPos = { x, y };\n      return;\n    }\n    if (this._checkButtonPress(m, false)) {\n      m.preventDefault();\n      this._move(x, y);\n    } else if (this._checkButtonPress(m, true)) {\n      m.preventDefault();\n      this._rotate(x, y);\n    }\n    this._lastScreenPos = { x, y };\n  }\n\n  private _touchMove(m: TouchEvent): void {\n    if (!this.isActive) {\n      return;\n    }\n    switch (m.touches.length) {\n      case 1:\n        const x: number = m.touches[0].pageX;\n        const y: number = m.touches[0].pageY;\n        if (this._lastScreenPos === null) {\n          this._lastScreenPos = { x, y };\n          return;\n        }\n        m.preventDefault();\n        this._rotate(x, y);\n        this._lastScreenPos = { x, y };\n        break;\n      case 2:\n        if (this.getAttribute(\"preventScroll\")) {\n          m.preventDefault();\n        }\n        const scale =\n          ((m.touches[0].pageX - m.touches[1].pageX) ** 2 +\n          (m.touches[0].pageY - m.touches[1].pageY) ** 2) ** 0.5;\n        this._zoom((this._lastPinchDistance - scale) * 0.5);\n        this._lastPinchDistance = scale;\n        break;\n      default:\n    }\n  }\n\n  private _mouseWheel(m: MouseWheelEvent): void {\n    if (!this.isActive) {\n      return;\n    }\n    if (this.getAttribute(\"preventScroll\")) {\n      m.preventDefault();\n    }\n    this._zoom(m.deltaY);\n  }\n\n  private _checkButtonPress(m: MouseEvent, isRight: boolean) {\n    if (\"buttons\" in m) {\n      if (isRight) {\n        return (m.buttons & 1) > 0;\n      } else {\n        return (m.buttons & 2) > 0;\n      }\n    } else {\n      if (isRight) {\n        return m.which === 1;\n      } else {\n        return m.which === 3;\n      }\n    }\n  }\n\n  private _move(x: number, y: number): void {\n    const diffX = x - this._lastScreenPos.x;\n    const diffY = y - this._lastScreenPos.y;\n    const moveX = -diffX * this.moveSpeed * 0.01;\n    const moveY = diffY * this.moveSpeed * 0.01;\n    this._d = this._d.addWith(this._transform.right.multiplyWith(moveX)).addWith(this._transform.up.multiplyWith(moveY));\n    this._updated = true;\n  }\n\n  private _rotate(x: number, y: number): void {\n    const diffX = x - this._lastScreenPos.x;\n    const diffY = y - this._lastScreenPos.y;\n    this._xsum += diffX;\n    this._ysum += diffY;\n    this._ysum = Math.min(Math.PI * 50, this._ysum);\n    this._ysum = Math.max(-Math.PI * 50, this._ysum);\n    this._updated = true;\n  }\n\n  private _zoom(delta: number): void {\n    const dir = Vector3.subtract(this._transform.position, this.center).normalized;\n    const moveDist = delta * this.zoomSpeed * 0.05;\n    this.distance = Math.max(1, this.distance + moveDist);\n    this._transform.position = this.center.addWith(dir.multiplyWith(this.distance));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/MouseCameraControlComponent.ts","import Viewport from \"../Viewport\";\nimport CanvasRenderingTarget from \"./CanvasRenderingTarget\";\n\n/**\n * Rendering target of part of canvas.\n * This rendering target limit a region of canvas by viewport.\n */\nexport default class CanvasRegionRenderingTarget extends CanvasRenderingTarget {\n    private _viewport: Viewport;\n\n    constructor(gl: WebGLRenderingContext) {\n        super(gl);\n    }\n\n    public setViewport(viewport: Viewport): void {\n        this._viewport = viewport;\n    }\n\n    public getViewport(): Viewport {\n        return this._viewport;\n    }\n\n    protected __configureClearScissor(): void {\n        this.gl.enable(WebGLRenderingContext.SCISSOR_TEST);\n        const vp = this.getViewport();\n        this.gl.scissor(vp.Left, vp.Bottom, vp.Width, vp.Height);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/RenderingTarget/CanvasRegionRenderingTarget.ts","import Color4 from \"grimoirejs-math/ref/Color4\";\nimport Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport MaterialFactory from \"../Material/MaterialFactory\";\nimport Timer from \"../Util/Timer\";\nimport LoopManagerComponent from \"./LoopManagerComponent\";\n/**\n * 全レンダラーを管理するためのコンポーネント\n */\nexport default class RendererManagerComponent extends Component {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    /**\n     * キャンバスの初期化色\n     */\n    bgColor: {\n      default: new Color4(0, 0, 0, 0),\n      converter: \"Color4\",\n    },\n    /**\n     * キャンバスの初期化深度値\n     */\n    clearDepth: {\n      default: 1.0,\n      converter: \"Number\",\n    },\n    /**\n     * goml内にrendererが一つもなかった場合に自動的に補完するかどうか\n     */\n    complementRenderer: {\n      default: true,\n      converter: \"Boolean\",\n    },\n  };\n\n  private static _sortImportedFromHTML = false;\n\n  public gl: WebGLRenderingContext;\n\n  private _bgColor: Color4;\n\n  private _clearDepth: number;\n\n  public $awake(): void {\n    this.getAttributeRaw(\"bgColor\").boundTo(\"_bgColor\");\n    this.getAttributeRaw(\"clearDepth\").boundTo(\"_clearDepth\");\n  }\n\n  public $mount(): void {\n    this.gl = this.companion.get(\"gl\");\n  }\n\n  public $treeInitialized(): void {\n    this.node.getComponent(LoopManagerComponent).register(this.onloop.bind(this), 1000);\n    if (this.getAttribute(\"complementRenderer\") && this.node.getChildrenByNodeName(\"renderer\").length === 0) {\n      this.node.addChildByName(\"renderer\", {});\n    }\n    this._importSortFromHTML();\n  }\n\n  public onloop(timer: Timer): void {\n    if (this.enabled) {\n      const c: Color4 = this._bgColor;\n      this.gl.clearColor(c.R, c.G, c.B, c.A);\n      this.gl.clearDepth(this._clearDepth);\n      this.gl.clear(WebGLRenderingContext.COLOR_BUFFER_BIT | WebGLRenderingContext.DEPTH_BUFFER_BIT);\n      this.node.broadcastMessage(1, \"renderViewport\", {\n        timer,\n      });\n    }\n  }\n\n  private _importSortFromHTML(): void {\n    if (RendererManagerComponent._sortImportedFromHTML) {\n      return;\n    }\n    const scripts = document.getElementsByTagName(\"script\");\n    for (let i = 0; i < scripts.length; i++) {\n      i = i;\n      const script = scripts.item(i);\n      if (script.getAttribute(\"type\") === \"text/sort\") { // If the script tag is for shader file\n        const typeName = script.getAttribute(\"typeName\");\n        if (!typeName) {\n          throw new Error(\"Every script tag with 'text/sort' type should have typeName attribute to specify the name to be registered as a material.\");\n        }\n        if (script.getAttribute(\"src\")) {\n          MaterialFactory.addSORTMaterialFromURL(typeName, script.getAttribute(\"src\"));\n        } else {\n          MaterialFactory.addSORTMaterial(typeName, script.innerText);\n        }\n      }\n    }\n    RendererManagerComponent._sortImportedFromHTML = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/RendererManagerComponent.ts","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport OffscreenRenderingTarget from \"../Resource/RenderingTarget/OffscreenRenderingTarget\";\nimport RenderingTrargetRegistry from \"../Resource/RenderingTarget/RenderingTargetRegistry\";\nimport RenderBufferUpdator from \"./Texture/RenderBufferUpdator\";\nimport TextureContainer from \"./Texture/TextureContainer\";\n/**\n * Register specified buffer to rendering target.\n * If there were no child buffer node, this component will instanciate default buffers.\n */\nexport default class RenderingTargetComponent extends Component {\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n        name: {\n            converter: \"String\",\n            default: null,\n        },\n        colorBufferFormat: {\n            converter: \"Enum\",\n            default: WebGLRenderingContext.RGBA,\n            table: {\n                RGBA: WebGLRenderingContext.RGBA,\n                RGB: WebGLRenderingContext.RGB,\n                ALPHA: WebGLRenderingContext.ALPHA,\n                LUMINANCE: WebGLRenderingContext.LUMINANCE,\n                LUMINANCE_ALPHA: WebGLRenderingContext.LUMINANCE_ALPHA,\n                SRGB_EXT: WebGLRenderingContext[\"SRGB_EXT\"],\n                SRGB_ALPHA_EXT: WebGLRenderingContext[\"SRGB_ALPHA_EXT\"],\n                DEPTH_COMPONENT: WebGLRenderingContext[\"DEPTH_COMPONENT\"],\n                DEPTH_STENCIL: WebGLRenderingContext[\"DEPTH_STENCIL\"],\n            },\n        },\n        colorBufferType: {\n            converter: \"Enum\",\n            default: WebGLRenderingContext.UNSIGNED_BYTE,\n            table: {\n                UNSIGNED_BYTE: WebGLRenderingContext.UNSIGNED_BYTE,\n                UNSIGNED_SHORT_5_6_5: WebGLRenderingContext.UNSIGNED_SHORT_5_6_5,\n                UNSIGNED_SHORT_4_4_4_4: WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4,\n                UNSIGNED_SHORT_5_5_5_1: WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1,\n                UNSIGNED_SHORT: WebGLRenderingContext.UNSIGNED_SHORT,\n                UNSIGNED_INT: WebGLRenderingContext.UNSIGNED_INT,\n                FLOAT: WebGLRenderingContext.FLOAT,\n            },\n        },\n        depthBufferType: {\n            converter: \"Enum\",\n            default: WebGLRenderingContext.DEPTH_COMPONENT16,\n            table: {\n                NONE: 0,\n                DEPTH_COMPONENT16: WebGLRenderingContext.DEPTH_COMPONENT16,\n            },\n        },\n        resizerType: {\n            converter: \"String\",\n            default: \"ViewportSize\",\n        },\n    };\n\n    public renderingTarget: OffscreenRenderingTarget;\n\n    public $mount(): void {\n        const name = this.getAttribute(\"name\");\n        if (!name) {\n            throw new Error(\"Rendering target must have name\");\n        }\n        if (this.node.children.length === 0) {\n            this._instanciateDefaultBuffers(name);\n        }\n        setImmediate(() => {\n            const textures = this.node.getComponentsInChildren(TextureContainer);\n            const texture = textures[0].texture;\n            const renderBuffer = this.node.getComponentsInChildren(RenderBufferUpdator);\n            this.renderingTarget = new OffscreenRenderingTarget(this.companion.get(\"gl\"), [texture], renderBuffer[0].buffer);\n            RenderingTrargetRegistry.get(this.companion.get(\"gl\")).setRenderingTarget(name, this.renderingTarget);\n        });\n    }\n\n    /**\n     * Generate default buffers as children node\n     * @param name\n     */\n    private _instanciateDefaultBuffers(name: string): void {\n        this.node.addChildByName(\"color-buffer\", {\n            name,\n            format: this.getAttribute(\"colorBufferFormat\"),\n            type: this.getAttribute(\"colorBufferType\"),\n            resizerType: this.getAttribute(\"resizerType\"),\n        });\n        if (this.getAttribute(\"depthBufferType\") !== 0) {\n            this.node.addChildByName(\"render-buffer\", {\n                name,\n                type: this.getAttribute(\"depthBufferType\"),\n                resizerType: this.getAttribute(\"resizerType\"),\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/RenderingTargetComponent.ts","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 95\n// module chunks = 0","import FrameBuffer from \"../FrameBuffer\";\nimport RenderBuffer from \"../RenderBuffer\";\nimport Texture2D from \"../Texture2D\";\nimport Viewport from \"../Viewport\";\nimport IRenderingTarget from \"./IRenderingTarget\";\n/**\n * Render target contains texture and render buffer\n */\nexport default class OffscreenRenderTarget implements IRenderingTarget {\n    public readonly fbo: FrameBuffer;\n\n    public get texture(): Texture2D {\n        return this.textures[0];\n    }\n\n    constructor(public gl: WebGLRenderingContext, public textures: Texture2D[], public depthBuffer?: RenderBuffer) {\n        if (textures.length === 0) {\n            throw new Error(\"Textures must contain 1 texture at least\");\n        }\n        this.fbo = new FrameBuffer(gl);\n        for (let i = 0; i < textures.length; i++) {\n            this.fbo.update(this.textures[i], 0, i);\n        }\n        this.fbo.update(depthBuffer);\n    }\n\n    public beforeDraw(clearFlag: number, color: number[], depth: number): void {\n        this.bind();\n        if (clearFlag !== 0) {\n            let clearTarget = 0;\n            if ((clearFlag & WebGLRenderingContext.COLOR_BUFFER_BIT) !== 0 && color) {\n                this.gl.clearColor.apply(this.gl, color);\n                clearTarget |= WebGLRenderingContext.COLOR_BUFFER_BIT;\n            }\n            if ((clearFlag & WebGLRenderingContext.DEPTH_BUFFER_BIT) !== 0 && depth !== null && this.depthBuffer) {\n                this.gl.clearDepth(depth);\n                clearTarget |= WebGLRenderingContext.DEPTH_BUFFER_BIT;\n            }\n            if (clearTarget !== 0) {\n                this.gl.clear(clearTarget);\n            }\n        }\n        this.getViewport().configure(this.gl);\n    }\n    public getBufferWidth(): number {\n        return this.texture.width;\n    }\n    public getBufferHeight(): number {\n        return this.texture.height;\n    }\n    public getViewport(): Viewport {\n        return new Viewport(0, 0, this.getBufferWidth(), this.getBufferHeight());\n    }\n\n    public bind(): void {\n        this.fbo.bind();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Resource/RenderingTarget/OffscreenRenderingTarget.ts","import GrimoireJS from \"grimoirejs\";\nimport Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport IRenderRendererMessage from \"../../Messages/IRenderRendererMessage\";\nimport IResizeViewportMessage from \"../../Messages/IResizeViewportMessage\";\nimport ViewportMouseEvent from \"../../Objects/ViewportMouseEvent\";\nimport Framebuffer from \"../../Resource/FrameBuffer\";\nimport RenderBuffer from \"../../Resource/RenderBuffer\";\nimport Texture2D from \"../../Resource/Texture2D\";\nimport Viewport from \"../../Resource/Viewport\";\nimport IRenderable from \"../../SceneRenderer/IRenderable\";\nimport MeshIndexCalculator from \"../../Util/MeshIndexCalculator\";\nimport TextureSizeCalculator from \"../../Util/TextureSizeCalculator\";\nimport CameraComponent from \"../CameraComponent\";\nimport RenderSceneComponent from \"../RenderStage/RenderSceneComponent\";\nimport SingleBufferRenderStageBase from \"./SingleBufferRenderStageBase\";\nexport default class RenderHitareaComponent extends SingleBufferRenderStageBase {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n\n  };\n  public hitareaTexture: Texture2D;\n\n  public hitareaRenderbuffer: RenderBuffer;\n\n  public hitareaFBO: Framebuffer;\n\n  private _sceneRenderer: RenderSceneComponent;\n\n  private _gl: WebGLRenderingContext;\n\n  private _canvas: HTMLCanvasElement;\n\n  private _lastPosition: number[];\n\n  private _mouseInside: boolean;\n\n  private _readCache: Uint8Array = new Uint8Array(4);\n\n  private _bufferViewport: Viewport;\n\n  private _lastRenderable: IRenderable;\n\n  private _mouseMoved: boolean;\n\n  public $mount(): void {\n    this._sceneRenderer = this.node.getComponent(RenderSceneComponent);\n    if (!this._sceneRenderer) {\n      throw new Error(\"The node attaching RenderHitArea should contain RenderScene.\");\n    }\n    this._gl = this.companion.get(\"gl\");\n    this._canvas = this.companion.get(\"canvasElement\");\n    this.hitareaTexture = new Texture2D(this._gl);\n    this.hitareaRenderbuffer = new RenderBuffer(this._gl);\n    if (this.hitareaFBO) {\n      this.hitareaFBO.destroy();\n      this.hitareaFBO = null;\n    }\n  }\n\n  public $resizeViewport(args: IResizeViewportMessage): void {\n    const size = TextureSizeCalculator.getPow2Size(args.width, args.height);\n    this._bufferViewport = new Viewport(0, 0, size.width, size.height);\n    this.hitareaTexture.update(0, size.width, size.height, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE);\n    this.hitareaRenderbuffer.update(WebGLRenderingContext.DEPTH_COMPONENT16, size.width, size.height);\n    if (!this.hitareaFBO) {\n      this.hitareaFBO = new Framebuffer(this._gl);\n      this.hitareaFBO.update(this.hitareaTexture);\n      this.hitareaFBO.update(this.hitareaRenderbuffer);\n    }\n  }\n\n  public $render(args: IRenderRendererMessage): void {\n    if (!this._mouseInside) {\n      return;\n    }\n    const camera = this._sceneRenderer.camera || args.camera;\n    if (!camera) {\n      return;\n    }\n    this.hitareaFBO.bind();\n    this._bufferViewport.configure(this._gl);\n    // clear buffer if needed\n    this._gl.clearColor(0, 0, 0, 0);\n    this._gl.clear(WebGLRenderingContext.COLOR_BUFFER_BIT);\n    this._gl.clearDepth(1);\n    this._gl.clear(WebGLRenderingContext.DEPTH_BUFFER_BIT);\n    // draw for mesh indices\n    camera.renderScene({\n      renderer: this._sceneRenderer, // TODO\n      camera,\n      layer: this._sceneRenderer.layer,\n      viewport: args.viewport,\n      timer: args.timer,\n      technique: \"hitarea\",\n      sceneDescription: {},\n      sortingTechnique: \"default\",\n      rendererDescription: this.rendererDescription,\n    });\n    this._gl.flush();\n    // pick pointer pixel\n    this._gl.readPixels(this._lastPosition[0] * this._bufferViewport.Width, this._lastPosition[1] * this._bufferViewport.Height, 1, 1, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, this._readCache);\n    this._updateCurrentIndex(MeshIndexCalculator.fromColor(this._readCache), camera);\n    // reset bound frame buffer\n    this._gl.bindFramebuffer(this._gl.FRAMEBUFFER, null);\n  }\n\n  public $mousemove(v: ViewportMouseEvent): void {\n    this._lastPosition = [v.viewportNormalizedX, v.viewportNormalizedY];\n    this._mouseMoved = true;\n  }\n\n  public $mouseenter(v: ViewportMouseEvent): void {\n    this._mouseInside = true;\n    this._lastPosition = [v.viewportNormalizedX, v.viewportNormalizedY];\n    this._mouseMoved = true;\n  }\n\n  public $mouseleave(v: ViewportMouseEvent): void {\n    this._mouseInside = false;\n    this._lastPosition = [v.viewportNormalizedX, v.viewportNormalizedY];\n    this._mouseMoved = true;\n    if (this._lastRenderable instanceof Component) {\n      this._lastRenderable.node.emit(\"mouseleave\", this._lastRenderable);\n    }\n    this._lastRenderable = null;\n  }\n\n  /**\n   * Update current mesh index. Emit events if need.\n   * @param index\n   * @param camera\n   */\n  private _updateCurrentIndex(index: number, camera: CameraComponent): void {\n    if (index === 0) { // there was no object at pointer\n      if (this._lastRenderable instanceof Component) {\n        this._lastRenderable.node.emit(\"mouseleave\", this._lastRenderable);\n      }\n      this._lastRenderable = null;\n    } else {\n      const r = camera.containedScene.queueRegistory.getByIndex(index - 1);\n      if (this._lastRenderable !== r) {\n        if (this._lastRenderable instanceof Component) {\n          this._lastRenderable.node.emit(\"mouseleave\", this._lastRenderable);\n        }\n        if (r instanceof Component) {\n          r.node.emit(\"mouseenter\", r);\n        }\n      } else {\n        if (r instanceof Component) {\n          if (this._mouseMoved) {\n            r.node.emit(\"mousemove\", r);\n          } else {\n            r.node.emit(\"mouseon\", r);\n          }\n        }\n      }\n      this._lastRenderable = r;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/RenderStage/RenderHitareaComponent.ts","import GrimoireJS from \"grimoirejs\";\nimport Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport ViewportBaseMouseState from \"../../Objects/ViewportBaseMouseState\";\nimport ViewportMouseEvent from \"../../Objects/ViewportMouseEvent\";\nexport default class RenderStageBase extends Component {\n    public static attributes: { [key: string]: IAttributeDeclaration } = {\n\n    };\n\n    public rendererDescription: { [key: string]: any } = {\n        mouse: {\n            coords: {\n                canvas: [0, 0],\n                canvasNormalized: [0, 0],\n                viewport: [0, 0],\n                viewportNormalized: [0, 0],\n            },\n            left: false,\n            right: false,\n            inside: false,\n        } as ViewportBaseMouseState,\n    };\n\n    public metadata: { [key: string]: any } = {};\n\n    public $mousemove(v: ViewportMouseEvent): void {\n        this._assignMouseState(v);\n    }\n\n    public $mouseenter(v: ViewportMouseEvent): void {\n        this._assignMouseState(v);\n    }\n\n    public $mouseleave(v: ViewportMouseEvent): void {\n        this._assignMouseState(v);\n    }\n\n    public $mousedown(v: ViewportMouseEvent): void {\n        this._assignMouseState(v);\n    }\n\n    public $mouseup(v: ViewportMouseEvent): void {\n        this._assignMouseState(v);\n    }\n\n    protected __beforeRender(): boolean {\n        if (GrimoireJS.debug && !!window[\"spector\"]) {\n            let metas = \"\";\n            for (const key in this.metadata) {\n                if (this.metadata[key] === undefined) {\n                    continue;\n                }\n                metas += `${key}=${this.metadata[key]}|`;\n            }\n            window[\"spector\"].setMarker(`Renderer|${metas}`);\n        }\n        return true;\n    }\n\n    private _assignMouseState(v: ViewportMouseEvent): void {\n        const mouseDesc: ViewportBaseMouseState = this.rendererDescription[\"mouse\"];\n        mouseDesc.inside = v.inside;\n        mouseDesc.coords[\"viewport\"] = [v.viewportX, v.viewportY];\n        mouseDesc.coords[\"viewportNormalized\"] = [v.viewportNormalizedX, v.viewportNormalizedY];\n        mouseDesc.coords[\"canvas\"] = [v.canvasX, v.canvasY];\n        mouseDesc.coords[\"canvasNormalized\"] = [v.canvasNormalizedX, v.canvasNormalizedY];\n        mouseDesc.left = this._isLeftButtonPressed(v);\n        mouseDesc.right = this._isRightButtonPressed(v);\n    }\n\n    private _isLeftButtonPressed(v: ViewportMouseEvent): boolean {\n        return v.buttons === 1 || (v.buttons === void 0 && v.which === 1);\n    }\n\n    private _isRightButtonPressed(v: ViewportMouseEvent): boolean {\n        return v.buttons === 2 || (v.buttons === void 0 && v.which === 3);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/RenderStage/RenderStageBase.ts","import GrimoireJS from \"grimoirejs\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport Geometry from \"../../Geometry/Geometry\";\nimport IMaterialArgument from \"../../Material/IMaterialArgument\";\nimport IRenderRendererMessage from \"../../Messages/IRenderRendererMessage\";\nimport GeometryRegistoryComponent from \"../GeometryRegistoryComponent\";\nimport MaterialContainerComponent from \"../MaterialContainerComponent\";\nimport SingleBufferRenderStageBase from \"./SingleBufferRenderStageBase\";\nexport default class RenderQuadComponent extends SingleBufferRenderStageBase {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    indexGroup: {\n      default: \"default\",\n      converter: \"String\",\n    },\n    technique: {\n      default: \"default\",\n      converter: \"String\",\n    },\n  };\n\n  public technique: string;\n\n  private indexGroup: string;\n\n  private _gl: WebGLRenderingContext;\n\n  private _geom: Geometry;\n\n  private _materialContainer: MaterialContainerComponent;\n\n  public $awake(): void {\n    super.$awake();\n    this.metadata.type = \"Quad\";\n    this.getAttributeRaw(\"indexGroup\").boundTo(\"indexGroup\");\n    this.getAttributeRaw(\"technique\").boundTo(\"technique\");\n    this.getAttributeRaw(\"technique\").watch((t: string) => {\n      this.metadata.technique = t;\n    }, true);\n  }\n\n  public async $mount(): Promise<void> {\n    this._gl = this.companion.get(\"gl\");\n    this._materialContainer = this.node.getComponent(MaterialContainerComponent);\n    const geometryRegistry = this.companion.get(\"GeometryRegistory\") as GeometryRegistoryComponent;\n    this._geom = await geometryRegistry.getGeometry(\"quad\");\n  }\n\n  public $render(args: IRenderRendererMessage): void {\n    if (!this._materialContainer.materialReady || !this._geom) {\n      return;\n    }\n    if (!this.__beforeRender()) {\n      return;\n    }\n    // make rendering argument\n    const renderArgs = {\n      indexGroup: this.indexGroup,\n      geometry: this._geom,\n      camera: null,\n      transform: null,\n      viewport: this.out.getViewport(),\n      technique: this.technique,\n      sceneDescription: {},\n      rendererDescription: this.rendererDescription,\n    } as IMaterialArgument;\n    // do render\n    this._materialContainer.material.draw(renderArgs);\n    this._gl.flush();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/RenderStage/RenderQuadComponent.ts","import IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport RenderingBufferResourceRegistry from \"../../Resource/RenderingTarget/RenderingBufferResourceRegistry\";\nimport TextureUpdatorComponentBase from \"./TextureUpdatorComponentBase\";\nexport default class ColorBufferTextureUpdator extends TextureUpdatorComponentBase {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    name: {\n      converter: \"String\",\n      default: null,\n    },\n    format: {\n      converter: \"Enum\",\n      default: WebGLRenderingContext.RGBA,\n      table: {\n        RGBA: WebGLRenderingContext.RGBA,\n        RGB: WebGLRenderingContext.RGB,\n        ALPHA: WebGLRenderingContext.ALPHA,\n        LUMINANCE: WebGLRenderingContext.LUMINANCE,\n        LUMINANCE_ALPHA: WebGLRenderingContext.LUMINANCE_ALPHA,\n        SRGB_EXT: WebGLRenderingContext[\"SRGB_EXT\"],\n        SRGB_ALPHA_EXT: WebGLRenderingContext[\"SRGB_ALPHA_EXT\"],\n        DEPTH_COMPONENT: WebGLRenderingContext[\"DEPTH_COMPONENT\"],\n        DEPTH_STENCIL: WebGLRenderingContext[\"DEPTH_STENCIL\"],\n      },\n    },\n    type: {\n      converter: \"Enum\",\n      default: WebGLRenderingContext.UNSIGNED_BYTE,\n      table: {\n        UNSIGNED_BYTE: WebGLRenderingContext.UNSIGNED_BYTE,\n        UNSIGNED_SHORT_5_6_5: WebGLRenderingContext.UNSIGNED_SHORT_5_6_5,\n        UNSIGNED_SHORT_4_4_4_4: WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4,\n        UNSIGNED_SHORT_5_5_5_1: WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1,\n        UNSIGNED_SHORT: WebGLRenderingContext.UNSIGNED_SHORT,\n        UNSIGNED_INT: WebGLRenderingContext.UNSIGNED_INT,\n        FLOAT: WebGLRenderingContext.FLOAT,\n      },\n    },\n  };\n\n  public $awake(): void {\n    super.$awake();\n    const name = this.getAttribute(\"name\");\n    const format = this.getAttribute(\"format\");\n    const type = this.getAttribute(\"type\");\n    if (name) {\n      RenderingBufferResourceRegistry.get(this.companion.get(\"gl\")).setBackbuffer(this.getAttribute(\"name\"), this.__texture);\n    }\n    this.__texture.update(0, 1, 1, 0, format, type, null);\n  }\n\n  public resize(width: number, height: number): void {\n    const format = this.getAttribute(\"format\");\n    const type = this.getAttribute(\"type\");\n    this.__texture.update(0, width, height, 0, format, type, null);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/ColorBufferTextureUpdator.ts","import IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport ImageResolver from \"../../Asset/ImageResolver\";\nimport TextureUpdatorComponentBase from \"./TextureUpdatorComponentBase\";\n\nexport default class ImageTextureUpdator extends TextureUpdatorComponentBase {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    src: {\n      converter: \"String\",\n      default: null,\n    },\n  };\n\n  public flipY: boolean;\n\n  public premultipliedAlpha: boolean;\n\n  public src: string;\n\n  private _resolvedImage: HTMLImageElement;\n\n  public $awake() {\n    super.$awake();\n    this.__bindAttributes();\n    this.getAttributeRaw(\"src\").watch((v: string) => {\n      if (v !== null) {\n        this._loadTask(v);\n      }\n    }, true);\n  }\n\n  public resize(width: number, height: number): void {\n    if (this._resolvedImage) {\n      this._resolvedImage.width = width;\n      this._resolvedImage.height = height;\n      this._updateTexture();\n    }\n  }\n\n  private async _loadTask(src: string): Promise<void> {\n    const image = await ImageResolver.resolve(src);\n    this._resolvedImage = image;\n    this._updateTexture();\n  }\n\n  private _updateTexture(): void {\n    this.__texture.update(this._resolvedImage, {\n      premultipliedAlpha: this.premultipliedAlpha,\n      flipY: this.flipY,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/ImageTextureUpdator.ts","import IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nimport VideoResolver from \"../../Asset/VideoResolver\";\nimport TextureUpdatorComponentBase from \"./TextureUpdatorComponentBase\";\nexport default class VideoTextureUpdatorComponent extends TextureUpdatorComponentBase {\n  public static attributes: { [key: string]: IAttributeDeclaration } = {\n    src: {\n      converter: \"String\",\n      default: null,\n    },\n    currentTime: {\n      converter: \"Number\",\n      default: 0,\n    },\n    muted: {\n      converter: \"Boolean\",\n      default: true,\n    },\n    playbackRate: {\n      converter: \"Number\",\n      default: 1,\n    },\n    loop: {\n      converter: \"Boolean\",\n      default: true,\n    },\n  };\n\n  public flipY: boolean;\n\n  public premultipliedAlpha: boolean;\n\n  public src: string;\n\n  public video: HTMLVideoElement;\n\n  public currentTime: number;\n\n  public muted: boolean;\n\n  public playbackRate: number;\n\n  public loop: boolean;\n\n  public $awake() {\n    super.$awake();\n    this.__bindAttributes();\n    this.getAttributeRaw(\"src\").watch((v: string) => {\n      if (v !== null) {\n        this._loadTask(v);\n      }\n    }, true);\n    this.getAttributeRaw(\"currentTime\").watch((v: number) => {\n      if (this.video && this.video.currentTime !== this.currentTime) {\n        this._syncVideoPref();\n      }\n    });\n    this.getAttributeRaw(\"muted\").watch(() => {\n      if (this.video) {\n        this._syncVideoPref();\n      }\n    });\n    this.getAttributeRaw(\"playbackRate\").watch(() => {\n      if (this.video) {\n        this._syncVideoPref();\n      }\n    });\n    this.getAttributeRaw(\"loop\").watch(() => {\n      if (this.video) {\n        this._syncVideoPref();\n      }\n    });\n  }\n\n  public resize(width: number, height: number): void {\n    if (this.video) {\n      this.video.width = width;\n      this.video.height = height;\n      this.tryUpdateCurrentFrame();\n    }\n  }\n\n  private *_update() {\n    while (true) {\n      if (this.currentTime !== this.video.currentTime) {\n        this.currentTime = this.video.currentTime;\n      }\n      this.tryUpdateCurrentFrame();\n      yield 1;\n    }\n  }\n\n  private tryUpdateCurrentFrame() {\n    if (this.video.readyState === this.video.HAVE_ENOUGH_DATA) {\n      this.__texture.update(this.video, {\n        premultipliedAlpha: this.premultipliedAlpha,\n        flipY: this.flipY,\n      });\n    }\n  }\n\n  private async _loadTask(src: string): Promise<void> {\n    this.video = await VideoResolver.resolve(src);\n    this.__registerFrameCoroutine(this._update);\n    this.video.play();\n    this._syncVideoPref();\n    this._update();\n  }\n\n  private _syncVideoPref(): void {\n    this.video.playbackRate = this.playbackRate;\n    this.video.muted = this.muted;\n    this.video.loop = this.loop;\n    this.video.currentTime = this.currentTime;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/Texture/VideoTextureUpdator.ts","import CanvasSizeObject from \"../Objects/CanvasSizeObject\";\n/**\n * キャンバスのサイズ用のコンバーター\n * 数値を指定した場合(`100`など)はその値をそのまま返す。\n * `aspect(1.6)`などと記述する時、キャンバスのアスペクト比を1.6にするようにリサイズする。\n * `fit`と指定した時、親要素にちょうどマッチするサイズを返す。\n * もし、親要素の高さが0である時かつ、親がbodyである際で`fit`が指定されていると、bodyへの高さ属性が指定されていないものと判断して、\n * 自動的にbodyに`height:100%`を割り当てる。\n */\nexport default function CanvasSizeConverter(val: any): any {\n  if (val === \"fit\") {\n    return {\n      mode: \"fit\",\n    } as CanvasSizeObject;\n  }\n  if (typeof val === \"string\") {\n    const matched = /aspect\\(([\\d+(?.\\d*)?]+)\\)/.exec(val);\n    if (matched) {\n      return {\n        mode: \"aspect\",\n        aspect: Number.parseFloat(matched[1]),\n      };\n    }\n  }\n  return {\n    mode: \"manual\",\n    size: Number.parseFloat(val),\n  } as CanvasSizeObject;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Converters/CanvasSizeConverter.ts","import Attribute from \"grimoirejs/ref/Node/Attribute\";\nimport GeometryRegistory from \"../Components/GeometryRegistoryComponent\";\nimport Geometry from \"../Geometry/Geometry\";\n\n/**\n * ジオメトリを指定するためのコンバーター\n * `quad`など、ジオメトリ名を指定するか、Geometry型のインスタンスを渡す。\n */\nexport default function GeometryConverter(val: any, attr: Attribute): any {\n  if (typeof val === \"string\") {\n    const registory = attr.companion.get(\"GeometryRegistory\") as GeometryRegistory;\n    return registory.getGeometry(val);\n  } else if (val instanceof Geometry) {\n    return Promise.resolve(val);\n  }\n  throw new Error(`Specified geometry \"${val}\" is not supported for converting into geometry.`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Converters/GeometryConverter.ts","import Attribute from \"grimoirejs/ref/Node/Attribute\";\nimport MaterialComponent from \"../Components/MaterialComponent\";\nimport Material from \"../Material/Material\";\nimport MaterialFactory from \"../Material/MaterialFactory\";\n\n/**\n * マテリアルを指定するためのコンバーター\n * `<material>へのクエリ`が指定された場合は、そのクエリによって検索された先頭の`<material>`を用いる。\n * `new(マテリアル名)`が指定された場合は、新しいマテリアルのインスタンスを生成して用いる。\n * 通常、マテリアルを指定するコンポーネントはマテリアルによって、そのコンポーネントが所持する属性が置き換わる。\n * `new(マテリアル)`名で指定した場合、そのコンポーネント自身がマテリアルの属性を管理することになるので注意が必要。\n */\nexport default function MaterialConverter(val: any, attr: Attribute): any {\n  if (typeof val === \"string\") {\n    const regex = /\\s*new\\s*\\(\\s*([a-zA-Z\\d\\-]+)\\s*\\)/;\n    let regexResult: RegExpExecArray |null;\n    if (regexResult = regex.exec(val)) { // new material should be instanciated for this material\n      (attr.component as any)[attr.declaration[\"componentBoundTo\"]] = null;\n      return MaterialFactory.get(attr.companion.get(\"gl\")).instanciate(regexResult[1]);\n    } else {\n      const node = attr.tree(val).first();\n      if (node) {\n        const mc = node.getComponent(MaterialComponent);\n        (attr.component as any)[attr.declaration[\"componentBoundTo\"]] = mc;\n        return mc.materialPromise;\n      } else {\n        console.warn(`There was no matching material component filtered by '${val}'`);\n        return null;\n      }\n    }\n  } else if (val instanceof Material) {\n    (attr.component as any)[attr.declaration[\"componentBoundTo\"]] = null;\n    return Promise.resolve(val);\n  }\n  return null; // TODO ??\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Converters/MaterialConverter.ts","import Attribute from \"grimoirejs/ref/Node/Attribute\";\nimport GomlNode from \"grimoirejs/ref/Node/GomlNode\";\n\nexport default function NodeConverter(val: any, attr: Attribute): any {\n  if (val === null) {\n    return null;\n  }\n  if (val instanceof GomlNode) {\n    return val;\n  } else if (typeof val === \"string\") {\n    return attr.component.node.tree(val).first();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Converters/NodeConverter.ts","import Attribute from \"grimoirejs/ref/Node/Attribute\";\nimport GomlNode from \"grimoirejs/ref/Node/GomlNode\";\n\n/**\n * 座標を取得するためのコンバーター\n * Vector3コンバーターの受け取り売る値もしくは、任意のシーン中のノードへのクエリを受け取る。\n * クエリを受け取った場合は、そのクエリの示す対象の物体の座標が用いられる。\n */\nexport default {\n  name: \"Position\",\n  lazy: true,\n  verify(attr: Attribute) {\n    return true;\n  },\n  convert(val: any, attr: Attribute) {\n    if (val === null) {\n      return null;\n    }\n    if (attr.convertContext._lastVal === val) {\n      return attr.convertContext._node.getAttribute(\"position\");\n    } else {\n      attr.convertContext._lastVal = null;\n      try { // TODO: remove try cache after fixed grimoirejs-math.\n        const vec = Attribute.convert(\"Vector3\", attr, val);\n        if (vec) {\n          return vec;\n        }\n      } catch (e) {\n\n      }\n      attr.convertContext._node = Attribute.convert(\"Node\", attr, val) as GomlNode;\n      if (attr.convertContext._node) {\n        attr.convertContext._lastVal = val;\n        return attr.convertContext._node.getAttribute(\"position\"); // TODO should not use getAttribute on node\n      }\n    }\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Converters/PositionConverter.ts","import Attribute from \"grimoirejs/ref/Node/Attribute\";\nimport RendererComponent from \"../Components/RendererComponent\";\nimport IRenderingTarget from \"../Resource/RenderingTarget/IRenderingTarget\";\nimport RenderingTargetRegistry from \"../Resource/RenderingTarget/RenderingTargetRegistry\";\n\nfunction isRenderingTarget(obj: any): obj is IRenderingTarget {\n    const typedObj = obj as IRenderingTarget;\n    return typeof obj === \"object\" && typeof typedObj.beforeDraw === \"function\" && typeof typedObj.getBufferHeight === \"function\" && typeof typedObj.getBufferWidth === \"function\" && typeof typedObj.getViewport === \"function\";\n}\n\nexport default async function RenderingTargetConverter(val: any, attr: Attribute): Promise<IRenderingTarget> {\n    if (isRenderingTarget(val)) {\n        return val;\n    } else if (typeof val === \"string\") {\n        if (val === \"default\") {\n            const renderer = attr.component.node.getComponentInAncestor(RendererComponent);\n            return renderer.renderingTarget;\n        } else {\n            const renderingTarget = RenderingTargetRegistry.get(attr.companion.get(\"gl\")).getRenderingTarget(val);\n            if (renderingTarget) {\n                return renderingTarget;\n            }\n            throw new Error(`Specified rendering target \"${val}\" was not found.`);\n        }\n    }\n    return null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Converters/RenderingTargetConverter.ts","import {Nullable} from \"grimoirejs/ref/Base/Types\";\nimport Attribute from \"grimoirejs/ref/Node/Attribute\";\nimport ImageResolver from \"../Asset/ImageResolver\";\nimport TextureContainer from \"../Components/Texture/TextureContainer\";\nimport TextureReference from \"../Material/TextureReference\";\nimport RenderingBufferResourceRegistry from \"../Resource/RenderingTarget/RenderingBufferResourceRegistry\";\nimport Texture2D from \"../Resource/Texture2D\";\n\ntype Query = {\n  type: \"query\" | \"backbuffer\",\n  param: string,\n};\n\nfunction _parseQuery(query: string): Nullable<Query> {\n  const regex = /(query|backbuffer)\\((.+)\\)[^\\)]*$/;\n  let regexResult;\n  if ((regexResult = regex.exec(query))) {\n    return {\n      type: regexResult[1] as \"query\" | \"backbuffer\",\n      param: regexResult[2],\n    };\n  }\n  return null;\n}\n/**\n * テクスチャへの参照を取得するためのコンバーター\n * 渡すものが文字列である場合、4つの方法がある。\n * * `url`・・・指定したアドレスから画像を解決して取得する\n * * `backbuffer(バックバッファ名)`・・・名前付きバックバッファのリストから取得する\n * * `video(ビデオファイルへのURL)`・・・指定したアドレスからビデオを取得してテクスチャとして再生する(deprecated)\n * * `query(<texture>へのクエリ)`・・・指定したクエリで`<texture>`を探索して利用する。\n * 渡すものがオブジェクトである場合、5つの方法がある。\n * * `Texture2D型`・・・そのまま利用される\n * * `HTMLImageElement`・・・必要がある場合リサイズされた上で利用される。(自動的に2の累乗に変換される)\n * * `HTMLCanvasElement`・・・必要がある場合リサイズされた上で利用される。(自動的に2の累乗に変換される)\n * * `HTMLVideoElement`・・・必要がある場合リサイズされた上で、自動的に再生される(自動的に2の累乗に変換される)\n */\nexport default function TextureConverter(val: any, attr: Attribute): any {\n  if (val instanceof Texture2D) {\n    return new TextureReference(val);\n  } else if (val instanceof TextureReference) {\n    return val;\n  } else if (typeof val === \"string\") {\n    const parseResult = _parseQuery(val);\n    if (parseResult) {\n      const param = parseResult.param;\n      switch (parseResult.type) {\n        case \"backbuffer\":\n          return new TextureReference((buffers) => RenderingBufferResourceRegistry.get(attr.companion.get(\"gl\")).getBackbuffer(param));\n        case \"query\":\n          const obtainedTag = attr.tree(param);\n          const texture = obtainedTag.first().getComponent(TextureContainer);\n          return new TextureReference(() => texture.texture);\n      }\n    } else {\n      const tex = new Texture2D(attr.companion.get(\"gl\"));\n      ImageResolver.resolve(val).then(t => {\n        tex.update(t);\n      });\n      attr.companion.get(\"loader\").register(tex.validPromise);\n      return new TextureReference(tex);\n    }\n  }\n  if (typeof val === \"object\") {\n    if (val instanceof HTMLImageElement) {\n      const tex = new Texture2D(attr.companion.get(\"gl\"));\n      if (val.complete && val.naturalWidth) {\n        tex.update(val);\n      } else {\n        val.onload = function() {\n          tex.update(val);\n        };\n      }\n      return new TextureReference(tex);\n    } else if (val instanceof HTMLCanvasElement) {\n      const tex = new Texture2D(attr.companion.get(\"gl\"));\n      tex.update(val);\n      return new TextureReference(tex);\n    }\n  }\n  return null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Converters/TextureConverter.ts","import Texture2D from \"../Resource/Texture2D\";\n/**\n * Proxy of texture reference\n */\nexport default class TextureReference {\n  public isFunctionalProxy: boolean;\n\n  constructor(public rawResource: Texture2D | ((val: { [key: string]: Texture2D }) => Texture2D)) {\n    this.isFunctionalProxy = (typeof rawResource) === \"function\";\n  }\n\n  public get(): Texture2D;\n  public get(buffers: { [key: string]: Texture2D }): Texture2D;\n  public get(buffers?: { [key: string]: Texture2D }): Texture2D {\n    if (!this.isFunctionalProxy) {\n      return this.rawResource as Texture2D;\n    } else {\n      return (this.rawResource as ((val: { [key: string]: Texture2D }) => Texture2D))(buffers);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/TextureReference.ts","import Rectangle from \"grimoirejs-math/ref/Rectangle\";\nimport Viewport from \"../Resource/Viewport\";\nfunction _toPixel(parentSize: number, rep: string): number {\n  const regex = /(\\d+)\\s*%/;\n  let regexResult: RegExpExecArray;\n  if ((regexResult = regex.exec(rep))) {\n    const percentage = Number.parseFloat(regexResult[1]);\n    return Math.floor(parentSize * percentage * 0.01);\n  } else {\n    return Math.floor(Number.parseFloat(rep));\n  }\n}\n/**\n * ビューポートサイズを設定するためのコンバーター\n * `auto`・・・親のキャンバスのサイズにあったビューポートサイズを返す\n * `左端,上端,幅,高さ`・・・キャンバスのサイズを具体的に指定する。\n * 数値を指定するとピクセル単位になるが、数値に%をつければ親のキャンバス基準での比率指定ができる。\n */\nexport default function ViewportConverter(val: any): any {\n  if (val instanceof Rectangle) {\n    const vp = new Viewport(val.Left, val.Bottom, val.Width, val.Height);\n    return () => vp;\n  }else if (val instanceof Viewport){\n    return () => val;\n  }else if (typeof val === \"string\") {\n    if (val === \"auto\") {\n      return (canvas: HTMLCanvasElement) => new Viewport(0, 0, canvas.width, canvas.height);\n    } else {\n      const sizes = val.split(\",\");\n      if (sizes.length !== 4) {\n        throw new Error(\"Invalid viewport size was specified.\");\n      } else {\n        return (canvas: HTMLCanvasElement) => new Viewport(_toPixel(canvas.width, sizes[0]), _toPixel(canvas.height, sizes[1]), _toPixel(canvas.width, sizes[2]), _toPixel(canvas.height, sizes[3]));\n      }\n    }\n  }\n  throw new Error(`${val} could not be parsed`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Converters/ViewportConverter.ts","import AABB from \"grimoirejs-math/ref/AABB\";\nimport Vector3 from \"grimoirejs-math/ref/Vector3\";\nimport Geometry from \"./Geometry\";\nimport GeometryFactory from \"./GeometryFactory\";\nimport GeometryUtility from \"./GeometryUtility\";\n\nconst unitBox = new AABB();\nunitBox.expand(new Vector3(-1, -1, -1));\nunitBox.expand(new Vector3(1, 1, 1));\n\nconst primitiveLayout = {\n  POSITION: {\n    size: 3,\n    stride: 32,\n  },\n  NORMAL: {\n    size: 3,\n    stride: 32,\n    offset: 12,\n  },\n  TEXCOORD: {\n    size: 2,\n    stride: 32,\n    offset: 24,\n  },\n};\n\nexport default class DefaultPrimitives {\n  public static register(): void {\n    DefaultPrimitives._registerQuad();\n    DefaultPrimitives._registerCube();\n    DefaultPrimitives._registerSphere();\n    DefaultPrimitives._registerCircle();\n    DefaultPrimitives._registerCylinder();\n    DefaultPrimitives._registerCone();\n    DefaultPrimitives._registerPlane();\n    DefaultPrimitives._registerTriangle();\n    DefaultPrimitives._registerCapsule();\n  }\n\n  private static _registerQuad(): void {\n    GeometryFactory.addType(\"quad\", {\n    }, (gl, attrs) => {\n      const geometry = new Geometry(gl);\n      geometry.addAttributes(GeometryUtility.plane([0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], 1, 1), primitiveLayout);\n      geometry.addIndex(\"default\", GeometryUtility.planeIndex(0, 1, 1));\n      geometry.addIndex(\"wireframe\", GeometryUtility.linesFromTriangles(GeometryUtility.planeIndex(0, 1, 1)), WebGLRenderingContext.LINES);\n      return geometry;\n    });\n  }\n  private static _registerTriangle(): void {\n    GeometryFactory.addType(\"triangle\", {\n    }, (gl, attrs) => {\n      const geometry = new Geometry(gl);\n      geometry.addAttributes(GeometryUtility.triangle([0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0]), primitiveLayout);\n      geometry.addIndex(\"default\", GeometryUtility.triangleIndex(0));\n      geometry.addIndex(\"wireframe\", GeometryUtility.linesFromTriangles(GeometryUtility.triangleIndex(0)), WebGLRenderingContext.LINES);\n      return geometry;\n    });\n  }\n  private static _registerCone(): void {\n    GeometryFactory.addType(\"cone\", {\n      divide: {\n        converter: \"Number\",\n        default: 50,\n      },\n    }, (gl, attrs) => {\n      const div = attrs[\"divide\"] as number;\n      const geometry = new Geometry(gl);\n      const theta = div % 2 !== 0 ? Math.PI / div : 0;\n      const vertices = [].concat.apply([], [\n        GeometryUtility.circle([0, -0.5, 0], [0, -1, 0], [-Math.sin(theta), 0, Math.cos(theta)], [Math.cos(theta), 0, Math.sin(theta)], div),\n      ]);\n      const g = Math.cos(Math.PI / div) / 3;\n      const length = Math.sin(Math.PI / div) / Math.pow(3, 0.5) * 2;\n      const radius = Math.cos(Math.PI / div) - g;\n      const s = Math.PI / div;\n\n      for (let i = 0; i < div; i++) {\n        const step = s * (i * 2 + 1);\n        Array.prototype.push.apply(vertices, GeometryUtility.coneTriangle(\n          [-Math.sin(step) * radius, 0, -Math.cos(step) * radius],\n          [-Math.cos(Math.PI / 2 - step), 1, -Math.sin(Math.PI / 2 - step)],\n          [Math.sin(step) * radius, 1, Math.cos(step) * radius],\n          [-Math.cos(step) * length, 0, Math.sin(step) * length],\n          div,\n          i,\n        ));\n      }\n      geometry.addAttributes(vertices, primitiveLayout);\n      const os = div + 2;\n      const indices = [].concat.apply([], [\n        GeometryUtility.circleIndex(0, div),\n      ]);\n      for (let i = 0; i < div; i++) {\n        Array.prototype.push.apply(indices, GeometryUtility.triangleIndex(os + i * 3));\n      }\n      geometry.addIndex(\"default\", indices);\n      geometry.addIndex(\"wireframe\", GeometryUtility.linesFromTriangles(indices), WebGLRenderingContext.LINES);\n      return geometry;\n    });\n  }\n  private static _registerCylinder(): void {\n    GeometryFactory.addType(\"cylinder\", {\n      divide: {\n        converter: \"Number\",\n        default: 50,\n      },\n    }, (gl, attrs) => {\n      const div = attrs[\"divide\"];\n      const geometry = new Geometry(gl);\n      const theta = div % 2 !== 0 ? Math.PI / div : 0;\n      const vertices = [].concat.apply([], [\n        GeometryUtility.circle([0, 1, 0], [0, 1, 0], [0, 0, -1], [1, 0, 0], div),\n        GeometryUtility.circle([0, -1, 0], [0, -1, 0], [-Math.sin(theta), 0, Math.cos(theta)], [Math.cos(theta), 0, Math.sin(theta)], div),\n      ]);\n      const length = Math.sin(Math.PI / div);\n      const radius = Math.cos(Math.PI / div);\n      const s = Math.PI / div;\n      for (let i = 0; i < div; i++) {\n        const step = s * (i * 2 + 1);\n        Array.prototype.push.apply(vertices, GeometryUtility.cylinderPlane(\n          [-Math.sin(step) * radius, 0, -Math.cos(step) * radius],\n          [-Math.sin(step), 0, -Math.cos(step)],\n          [0, 1, 0],\n          [-Math.cos(step) * length, 0, Math.sin(step) * length],\n          div, i));\n      }\n      geometry.addAttributes(vertices, primitiveLayout);\n      const os = div + 2;\n      const indices = [].concat.apply([], [\n        GeometryUtility.circleIndex(0, div),\n        GeometryUtility.circleIndex(os, div),\n      ]);\n      for (let i = 0; i < div; i++) {\n        Array.prototype.push.apply(indices, GeometryUtility.planeIndex(os * 2 + i * 4, 1, 1));\n      }\n      geometry.addIndex(\"default\", indices);\n      geometry.addIndex(\"wireframe\", GeometryUtility.linesFromTriangles(indices), WebGLRenderingContext.LINES);\n      return geometry;\n    });\n  }\n  private static _registerCube(): void {\n    GeometryFactory.addType(\"cube\", {\n      divHorizontal: {\n        converter: \"Number\",\n        default: 1,\n      },\n      divVertical: {\n        converter: \"Number\",\n        default: 1,\n      },\n    }, (gl, attrs) => {\n      const hdiv = attrs[\"divHorizontal\"];\n      const vdiv = attrs[\"divVertical\"];\n      const geometry = new Geometry(gl);\n      const vertices = [].concat.apply([], [\n        GeometryUtility.plane([0, 0, 1], [0, 0, 1], [0, 1, 0], [1, 0, 0], hdiv, vdiv),\n        GeometryUtility.plane([0, 0, -1], [0, 0, -1], [0, 1, 0], [-1, 0, 0], hdiv, vdiv),\n        GeometryUtility.plane([0, 1, 0], [0, 1, 0], [0, 0, -1], [1, 0, 0], hdiv, vdiv),\n        GeometryUtility.plane([0, -1, 0], [0, -1, 0], [0, 0, -1], [-1, 0, 0], hdiv, vdiv),\n        GeometryUtility.plane([1, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, -1], hdiv, vdiv),\n        GeometryUtility.plane([-1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, 0, 1], hdiv, vdiv)]);\n      geometry.addAttributes(vertices, primitiveLayout);\n      const os = (hdiv + 1) * (vdiv + 1);\n      const indices = [].concat.apply([], [\n        GeometryUtility.planeIndex(0, hdiv, vdiv),\n        GeometryUtility.planeIndex(os, hdiv, vdiv),\n        GeometryUtility.planeIndex(2 * os, hdiv, vdiv),\n        GeometryUtility.planeIndex(3 * os, hdiv, vdiv),\n        GeometryUtility.planeIndex(4 * os, hdiv, vdiv),\n        GeometryUtility.planeIndex(5 * os, hdiv, vdiv)]);\n      geometry.addIndex(\"default\", indices);\n      geometry.addIndex(\"wireframe\", GeometryUtility.linesFromTriangles(indices), WebGLRenderingContext.LINES);\n      return geometry;\n    });\n  }\n  private static _registerSphere(): void {\n    GeometryFactory.addType(\"sphere\", {\n      divVertical: {\n        converter: \"Number\",\n        default: 50,\n      },\n      divHorizontal: {\n        converter: \"Number\",\n        default: 50,\n      },\n    }, (gl, attrs) => {\n      const dH = attrs[\"divHorizontal\"];\n      const dV = attrs[\"divVertical\"];\n      const geometry = new Geometry(gl);\n      geometry.addAttributes(GeometryUtility.sphere([0, 0, 0], [0, 1, 0], [1, 0, 0], [0, 0, 1], dV, dH), primitiveLayout);\n      geometry.addIndex(\"default\", GeometryUtility.sphereIndex(0, dV, dH));\n      geometry.addIndex(\"wireframe\", GeometryUtility.linesFromTriangles(GeometryUtility.sphereIndex(0, dV, dH)), WebGLRenderingContext.LINES);\n      return geometry;\n    });\n  }\n  private static _registerCapsule(): void {\n    GeometryFactory.addType(\"capsule\", {\n      divide: {\n        converter: \"Number\",\n        default: 50,\n      },\n    }, (gl, attrs) => {\n      const dH = attrs[\"divide\"] as number;\n      const dV = dH % 2 === 1 ? dH + 1 : dH;\n\n      const geometry = new Geometry(gl);\n      geometry.addAttributes(GeometryUtility.capsule([0, 0, 0], [0, 1, 0], [1, 0, 0], [0, 0, 1], dV, dH), primitiveLayout);\n      geometry.addIndex(\"default\", GeometryUtility.sphereIndex(0, dV, dH));\n      geometry.addIndex(\"wireframe\", GeometryUtility.linesFromTriangles(GeometryUtility.sphereIndex(0, dV, dH)), WebGLRenderingContext.LINES);\n      return geometry;\n    });\n  }\n  private static _registerCircle(): void {\n    GeometryFactory.addType(\"circle\", {\n      divide: {\n        converter: \"Number\",\n        default: 30,\n      },\n    }, (gl, attrs) => {\n      const div = attrs[\"divide\"] as number;\n      const geometry = new Geometry(gl);\n      geometry.addAttributes(GeometryUtility.circle([0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], div), primitiveLayout);\n      geometry.addIndex(\"default\", GeometryUtility.circleIndex(0, div));\n      geometry.addIndex(\"wireframe\", GeometryUtility.linesFromTriangles(GeometryUtility.circleIndex(0, div)), WebGLRenderingContext.LINES);\n      return geometry;\n    });\n  }\n  private static _registerPlane(): void {\n    GeometryFactory.addType(\"plane\", {\n      divide: {\n        converter: \"Number\",\n        default: 10,\n      },\n    }, (gl, attrs) => {\n      const hdiv = attrs[\"divide\"] as number;\n      const vdiv = hdiv;\n      const geometry = new Geometry(gl);\n      const vertices = [].concat.apply([], [\n        GeometryUtility.plane([0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], hdiv, vdiv), GeometryUtility.plane([0, 0, 0], [0, 0, -1], [0, 1, 0], [-1, 0, 0], hdiv, vdiv, true),\n      ]);\n      geometry.addAttributes(vertices, primitiveLayout);\n      const indices = [].concat.apply([], [\n        GeometryUtility.planeIndex(0, hdiv, vdiv),\n        GeometryUtility.planeIndex((hdiv + 1) * (vdiv + 1), hdiv, vdiv),\n      ]);\n      geometry.addIndex(\"default\", indices);\n      geometry.addIndex(\"wireframe\", GeometryUtility.linesFromTriangles(indices), WebGLRenderingContext.LINES);\n      return geometry;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Geometry/DefaultPrimitives.ts","export default class GeometryUtility {\n  public static linesFromTriangles(indices: number[]): number[] {\n    const ret: number[] = [];\n    const ic: number[] = new Array(3);\n    let i = 0;\n    for (const index of indices) {\n      ic[i % 3] = index;\n      if (i % 3 === 2) {\n        const a = ic[0], b = ic[1], c = ic[2];\n        Array.prototype.push.apply(ret, [a, b, b, c, c, a]);\n      }\n      i++;\n    }\n    return ret;\n  }\n  public static plane(center: number[], normal: number[], up: number[], right: number[], hdiv = 1, vdiv = 1, reverse = false): number[] {\n    const ret = new Array(8 * (hdiv + 1) * (vdiv + 1));\n    const sp = [center[0] - up[0] - right[0], center[1] - up[1] - right[1], center[2] - up[2] - right[2]];\n    const sr = [right[0] / hdiv * 2, right[1] / hdiv * 2, right[2] / hdiv * 2];\n    const su = [up[0] / vdiv * 2, up[1] / vdiv * 2, up[2] / vdiv * 2];\n    for (let v = 0; v < vdiv + 1; v++) {\n      for (let h = 0; h < hdiv + 1; h++) {\n        const fi = ((hdiv + 1) * v + h) * 8;\n        ret[fi + 0] = sp[0] + sr[0] * h + su[0] * v;\n        ret[fi + 1] = sp[1] + sr[1] * h + su[1] * v;\n        ret[fi + 2] = sp[2] + sr[2] * h + su[2] * v;\n\n        ret[fi + 3] = normal[0];\n        ret[fi + 4] = normal[1];\n        ret[fi + 5] = normal[2];\n\n        ret[fi + 6] = reverse ? 1 - 1 / hdiv * h : 1 / hdiv * h;\n        ret[fi + 7] = 1 / vdiv * v;\n      }\n    }\n    return ret;\n  }\n\n  public static cylinderPlane(center: number[], normal: number[], up: number[], right: number[], divide: number, order: number): number[] {\n    const ret = new Array(32);\n    const sp = [center[0] - up[0] - right[0], center[1] - up[1] - right[1], center[2] - up[2] - right[2]];\n    const sr = [right[0] * 2, right[1] * 2, right[2] * 2];\n    const su = [up[0] * 2, up[1] * 2, up[2] * 2];\n    for (let v = 0; v < 2; v++) {\n      for (let h = 0; h < 2; h++) {\n        const fi = (2 * v + h) * 8;\n        ret[fi + 0] = sp[0] + sr[0] * h + su[0] * v;\n        ret[fi + 1] = sp[1] + sr[1] * h + su[1] * v;\n        ret[fi + 2] = sp[2] + sr[2] * h + su[2] * v;\n\n        const l = Math.tan(Math.PI / divide) / Math.sin(Math.PI / divide);\n        if (h === 0) {\n          ret[fi + 3] = normal[0] - l * right[0];\n          ret[fi + 4] = normal[1] - l * right[1];\n          ret[fi + 5] = normal[2] - l * right[2];\n        } else {\n          ret[fi + 3] = normal[0] + l * right[0];\n          ret[fi + 4] = normal[1] + l * right[1];\n          ret[fi + 5] = normal[2] + l * right[2];\n        }\n\n        ret[fi + 6] = 1 / divide * (order + 1 + h);\n        ret[fi + 7] = v === 0 ? 0 : 1;\n      }\n    }\n    return ret;\n  }\n  public static triangle(center: number[], normal: number[], up: number[], right: number[]): number[] {\n    const ret = new Array(24);\n    const delta = 2 * Math.PI / 3;\n    for (let i = 0; i < 3; i++) {\n      const s = Math.sin(delta * i);\n      const c = Math.cos(delta * i);\n      ret[0 + 8 * i] = center[0] + c * up[0] + s * right[0];\n      ret[1 + 8 * i] = center[1] + c * up[1] + s * right[1];\n      ret[2 + 8 * i] = center[2] + c * up[2] + s * right[2];\n      ret[3 + 8 * i] = normal[0];\n      ret[4 + 8 * i] = normal[1];\n      ret[5 + 8 * i] = normal[2];\n      ret[6 + 8 * i] = 0.5 + (c * up[0] + s * right[0]) / 2;\n      ret[7 + 8 * i] = 0.5 + (c * up[1] + s * right[1]) / 2;\n    }\n    return ret;\n  }\n\n  public static coneTriangle(center: number[], normal: number[], up: number[], right: number[], divide: number, order: number): number[] {\n    const ret = new Array(24);\n    const delta = 2 * Math.PI / 3;\n    for (let i = 0; i < 3; i++) {\n      const s = Math.sin(delta * i);\n      const c = Math.cos(delta * i);\n      ret[0 + 8 * i] = center[0] + c * up[0] + s * right[0];\n      ret[1 + 8 * i] = center[1] + c * up[1] + s * right[1];\n      ret[2 + 8 * i] = center[2] + c * up[2] + s * right[2];\n\n      ret[3 + 8 * i] = normal[0];\n      ret[4 + 8 * i] = normal[1];\n      ret[5 + 8 * i] = normal[2];\n      const k = Math.pow(2, 0.5);\n      const l = Math.tan(Math.PI / divide) / Math.sin(Math.PI / divide) / Math.pow(3, 0.5) * 2;\n      if (i === 0) {\n        ret[3 + 8 * i] = normal[0];\n        ret[4 + 8 * i] = normal[1];\n        ret[5 + 8 * i] = normal[2];\n        ret[6 + 8 * i] = 0;\n        ret[7 + 8 * i] = 0;\n      } else if (i === 1) {\n        ret[3 + 8 * i] = normal[0] / k + l * right[0];\n        ret[4 + 8 * i] = normal[1] / k + l * right[1];\n        ret[5 + 8 * i] = normal[2] / k + l * right[2];\n        ret[6 + 8 * i] = Math.cos(-Math.PI / divide / 2 * (order + 1));\n        ret[7 + 8 * i] = Math.sin(-Math.PI / divide / 2 * (order + 1));\n      } else {\n        ret[3 + 8 * i] = normal[0] / k - l * right[0];\n        ret[4 + 8 * i] = normal[1] / k - l * right[1];\n        ret[5 + 8 * i] = normal[2] / k - l * right[2];\n        ret[6 + 8 * i] = Math.cos(-Math.PI / divide / 2 * (order));\n        ret[7 + 8 * i] = Math.sin(-Math.PI / divide / 2 * (order));\n      }\n    }\n    return ret;\n  }\n\n  public static triangleIndex(offset: number) {\n    const ret = new Array(3);\n    ret[0] = offset;\n    ret[1] = offset + 2;\n    ret[2] = offset + 1;\n    return ret;\n  }\n\n  public static planeIndex(offset = 0, hdiv = 0, vdiv = 0): number[] {\n    const ret = new Array(6 * hdiv * vdiv);\n    for (let v = 0; v < vdiv; v++) {\n      for (let h = 0; h < hdiv; h++) {\n        const fi = (hdiv * v + h) * 6;\n        const ld = offset + (hdiv + 1) * v + h;\n        const lu = offset + (hdiv + 1) * (v + 1) + h;\n        ret[fi + 0] = ld;\n        ret[fi + 1] = ld + 1;\n        ret[fi + 2] = lu;\n        ret[fi + 3] = lu;\n        ret[fi + 4] = ld + 1;\n        ret[fi + 5] = lu + 1;\n      }\n    }\n    return ret;\n  }\n\n  public static circle(center: number[], normal: number[], up: number[], right: number[], divide = 5): number[] {\n    const ret = new Array((3 + divide) * 6);\n    // center\n    ret[0] = center[0];\n    ret[1] = center[1];\n    ret[2] = center[2];\n\n    ret[3] = normal[0];\n    ret[4] = normal[1];\n    ret[5] = normal[2];\n\n    ret[6] = 0.5;\n    ret[7] = 0.5;\n    const delta = 2 * Math.PI / divide;\n    for (let v = 0; v < divide + 1; v++) {\n      const fi = 8 + v * 8;\n      const s = Math.sin(delta * v);\n      const c = Math.cos(delta * v);\n      ret[fi + 0] = center[0] + c * up[0] + s * right[0];\n      ret[fi + 1] = center[1] + c * up[1] + s * right[1];\n      ret[fi + 2] = center[2] + c * up[2] + s * right[2];\n\n      ret[fi + 3] = normal[0];\n      ret[fi + 4] = normal[1];\n      ret[fi + 5] = normal[2];\n\n      ret[fi + 6] = 0.5 + 0.5 * s;\n      ret[fi + 7] = 0.5 + 0.5 * c;\n    }\n    return ret;\n  }\n\n  public static circleIndex(offset: number, divide: number): number[] {\n    const ret = new Array(3 * divide);\n    for (let i = 0; i < divide; i++) {\n      ret[3 * i + 0] = offset;\n      ret[3 * i + 1] = offset + (i + 2);\n      ret[3 * i + 2] = offset + (i + 1);\n    }\n    return ret;\n  }\n  public static capsule(center: number[], up: number[], right: number[], forward: number[], vdiv = 3, hdiv = 3): number[] {\n    const ret = new Array(vdiv * hdiv * 8);\n    for (let i = 0; i < vdiv; i++) {\n      for (let j = 0; j < hdiv; j++) {\n        ret[8 * (vdiv * i + j) + 0] = center[0]\n          + 0.5 * Math.sin(Math.PI * i / (vdiv - 1)) * (right[0] * Math.cos(2 * Math.PI * (j / (hdiv - 1)))\n            + forward[0] * Math.sin(2 * Math.PI * (j / (hdiv - 1))))\n          - 0.5 * up[0] * Math.cos(Math.PI * i / (vdiv - 1));\n        ret[8 * (vdiv * i + j) + 1] = center[1]\n          + 0.5 * Math.sin(Math.PI * i / (vdiv - 1)) * (right[1] * Math.cos(2 * Math.PI * (j / (hdiv - 1)))\n            + forward[1] * Math.sin(2 * Math.PI * (j / (hdiv - 1))))\n          - 0.5 * up[1] * Math.cos(Math.PI * i / (vdiv - 1));\n        ret[8 * (vdiv * i + j) + 2] = center[2]\n          + 0.5 * Math.sin(Math.PI * i / (vdiv - 1)) * (right[2] * Math.cos(2 * Math.PI * (j / (hdiv - 1)))\n            + forward[2] * Math.sin(2 * Math.PI * (j / (hdiv - 1))))\n          - 0.5 * up[2] * Math.cos(Math.PI * i / (vdiv - 1));\n        const d = Math.pow(\n          ret[8 * (vdiv * i + j) + 0] * ret[8 * (vdiv * i + j) + 0] +\n          ret[8 * (vdiv * i + j) + 1] * ret[8 * (vdiv * i + j) + 1] +\n          ret[8 * (vdiv * i + j) + 2] * ret[8 * (vdiv * i + j) + 2], 0.5);\n        ret[8 * (vdiv * i + j) + 3] = ret[8 * (vdiv * i + j) + 0] / d;\n        ret[8 * (vdiv * i + j) + 4] = ret[8 * (vdiv * i + j) + 1] / d;\n        ret[8 * (vdiv * i + j) + 5] = ret[8 * (vdiv * i + j) + 2] / d;\n        ret[8 * (vdiv * i + j) + 6] = 1 - j / (hdiv - 1);\n        ret[8 * (vdiv * i + j) + 7] = i / (vdiv - 1);\n      }\n    }\n    return ret;\n  }\n\n  public static sphere(center: number[], up: number[], right: number[], forward: number[], vdiv: number, hdiv: number): number[] {\n    const ret = new Array(vdiv * hdiv * 8);\n    for (let i = 0; i < vdiv; i++) {\n      for (let j = 0; j < hdiv; j++) {\n        ret[8 * (vdiv * i + j) + 0] = center[0]\n          + Math.sin(Math.PI * i / (vdiv - 1)) * (right[0] * Math.cos(2 * Math.PI * (j / (hdiv - 1)))\n            + forward[0] * Math.sin(2 * Math.PI * (j / (hdiv - 1))))\n          - up[0] * Math.cos(Math.PI * i / (vdiv - 1));\n        ret[8 * (vdiv * i + j) + 1] = center[1]\n          + Math.sin(Math.PI * i / (vdiv - 1)) * (right[1] * Math.cos(2 * Math.PI * (j / (hdiv - 1)))\n            + forward[1] * Math.sin(2 * Math.PI * (j / (hdiv - 1))))\n          - up[1] * Math.cos(Math.PI * i / (vdiv - 1));\n        ret[8 * (vdiv * i + j) + 2] = center[2]\n          + Math.sin(Math.PI * i / (vdiv - 1)) * (right[2] * Math.cos(2 * Math.PI * (j / (hdiv - 1)))\n            + forward[2] * Math.sin(2 * Math.PI * (j / (hdiv - 1))))\n          - up[2] * Math.cos(Math.PI * i / (vdiv - 1));\n        const d = Math.pow(\n          ret[8 * (vdiv * i + j) + 0] * ret[8 * (vdiv * i + j) + 0] +\n          ret[8 * (vdiv * i + j) + 1] * ret[8 * (vdiv * i + j) + 1] +\n          ret[8 * (vdiv * i + j) + 2] * ret[8 * (vdiv * i + j) + 2], 0.5);\n        ret[8 * (vdiv * i + j) + 3] = ret[8 * (vdiv * i + j) + 0] / d;\n        ret[8 * (vdiv * i + j) + 4] = ret[8 * (vdiv * i + j) + 1] / d;\n        ret[8 * (vdiv * i + j) + 5] = ret[8 * (vdiv * i + j) + 2] / d;\n        ret[8 * (vdiv * i + j) + 6] = 1 - j / (hdiv - 1);\n        ret[8 * (vdiv * i + j) + 7] = i / (vdiv - 1);\n      }\n    }\n    return ret;\n  }\n\n  public static sphereIndex(offset: number, vdiv: number, hdiv: number): number[] {\n    const ret: number[] = new Array(hdiv * vdiv * 6);\n    for (let i = 0; i < vdiv - 1; i++) {\n      for (let j = 0; j < hdiv - 1; j++) {\n        ret[6 * (vdiv * j + i) + 0] = vdiv * i + j;\n        ret[6 * (vdiv * j + i) + 1] = vdiv * (i + 1) + j;\n        ret[6 * (vdiv * j + i) + 2] = vdiv * i + j + 1;\n        ret[6 * (vdiv * j + i) + 3] = vdiv * i + j + 1;\n        ret[6 * (vdiv * j + i) + 4] = vdiv * (i + 1) + j;\n        ret[6 * (vdiv * j + i) + 5] = vdiv * (i + 1) + j + 1;\n      }\n    }\n    return ret;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Geometry/GeometryUtility.ts","import Unlit from \"raw-loader!../../Shaders/Unlit.sort\";\nimport MaterialFactory from \"../MaterialFactory\";\nexport default class DefaultMaterial {\n  public static register(): void {\n    MaterialFactory.addSORTMaterial(\"unlit\", Unlit);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Defaults/DefaultMaterial.ts","import AssetAssetLoader from \"./Asset/AssetLoader\";\nimport AssetCacheResolver from \"./Asset/CacheResolver\";\nimport AssetExternalResourceResolver from \"./Asset/ExternalResourceResolver\";\nimport AssetImageResolver from \"./Asset/ImageResolver\";\nimport AssetNameResolver from \"./Asset/NameResolver\";\nimport AssetTextFileResolver from \"./Asset/TextFileResolver\";\nimport AssetVideoResolver from \"./Asset/VideoResolver\";\nimport ComponentsAssetLoadingManagerComponent from \"./Components/AssetLoadingManagerComponent\";\nimport ComponentsBasicComponent from \"./Components/BasicComponent\";\nimport ComponentsCameraComponent from \"./Components/CameraComponent\";\nimport ComponentsCanvasInitializerComponent from \"./Components/CanvasInitializerComponent\";\nimport ComponentsFullscreenComponent from \"./Components/FullscreenComponent\";\nimport ComponentsGeometryComponent from \"./Components/GeometryComponent\";\nimport ComponentsGeometryRegistoryComponent from \"./Components/GeometryRegistoryComponent\";\nimport ComponentsLoopManagerComponent from \"./Components/LoopManagerComponent\";\nimport ComponentsMaterialComponent from \"./Components/MaterialComponent\";\nimport ComponentsMaterialContainerBase from \"./Components/MaterialContainerBase\";\nimport ComponentsMaterialContainerComponent from \"./Components/MaterialContainerComponent\";\nimport ComponentsMaterialImporterComponent from \"./Components/MaterialImporterComponent\";\nimport ComponentsMeshRendererComponent from \"./Components/MeshRendererComponent\";\nimport ComponentsMouseCameraControlComponent from \"./Components/MouseCameraControlComponent\";\nimport ComponentsRenderComponentBase from \"./Components/RenderComponentBase\";\nimport ComponentsRendererComponent from \"./Components/RendererComponent\";\nimport ComponentsRendererManagerComponent from \"./Components/RendererManagerComponent\";\nimport ComponentsRenderingTargetComponent from \"./Components/RenderingTargetComponent\";\nimport ComponentsRenderStageRenderHitareaComponent from \"./Components/RenderStage/RenderHitareaComponent\";\nimport ComponentsRenderStageRenderQuadComponent from \"./Components/RenderStage/RenderQuadComponent\";\nimport ComponentsRenderStageRenderSceneComponent from \"./Components/RenderStage/RenderSceneComponent\";\nimport ComponentsRenderStageRenderStageBase from \"./Components/RenderStage/RenderStageBase\";\nimport ComponentsRenderStageSingleBufferRenderStageBase from \"./Components/RenderStage/SingleBufferRenderStageBase\";\nimport ComponentsSceneComponent from \"./Components/SceneComponent\";\nimport ComponentsTextureColorBufferTextureUpdator from \"./Components/Texture/ColorBufferTextureUpdator\";\nimport ComponentsTextureConstantSizeResourceResizer from \"./Components/Texture/ConstantSizeResourceResizer\";\nimport ComponentsTextureImageTextureUpdator from \"./Components/Texture/ImageTextureUpdator\";\nimport ComponentsTextureRenderBufferUpdator from \"./Components/Texture/RenderBufferUpdator\";\nimport ComponentsTextureResizableResourceUpdator from \"./Components/Texture/ResizableResourceUpdator\";\nimport ComponentsTextureResourceResizerComponentBase from \"./Components/Texture/ResourceResizerComponentBase\";\nimport ComponentsTextureTextureContainer from \"./Components/Texture/TextureContainer\";\nimport ComponentsTextureTextureUpdatorComponentBase from \"./Components/Texture/TextureUpdatorComponentBase\";\nimport ComponentsTextureVideoTextureUpdator from \"./Components/Texture/VideoTextureUpdator\";\nimport ComponentsTextureViewportSizeResourceResizer from \"./Components/Texture/ViewportSizeResourceResizer\";\nimport ComponentsTransformComponent from \"./Components/TransformComponent\";\nimport ConvertersCanvasSizeConverter from \"./Converters/CanvasSizeConverter\";\nimport ConvertersGeometryConverter from \"./Converters/GeometryConverter\";\nimport ConvertersMaterialConverter from \"./Converters/MaterialConverter\";\nimport ConvertersNodeConverter from \"./Converters/NodeConverter\";\nimport ConvertersPositionConverter from \"./Converters/PositionConverter\";\nimport ConvertersRenderingTargetConverter from \"./Converters/RenderingTargetConverter\";\nimport ConvertersTextureConverter from \"./Converters/TextureConverter\";\nimport ConvertersViewportConverter from \"./Converters/ViewportConverter\";\nimport GeometryDefaultPrimitives from \"./Geometry/DefaultPrimitives\";\nimport GeometryGeometry from \"./Geometry/Geometry\";\nimport GeometryGeometryFactory from \"./Geometry/GeometryFactory\";\nimport GeometryGeometryUtility from \"./Geometry/GeometryUtility\";\nimport GeometryMorphGeometry from \"./Geometry/MorphGeometry\";\nimport MaterialDefaultsDefaultDynamicStateResolvers from \"./Material/Defaults/DefaultDynamicStateResolvers\";\nimport MaterialDefaultsDefaultMacro from \"./Material/Defaults/DefaultMacro\";\nimport MaterialDefaultsDefaultMaterial from \"./Material/Defaults/DefaultMaterial\";\nimport MaterialDefaultsDefaultStaticImport from \"./Material/Defaults/DefaultStaticImport\";\nimport MaterialGLStateConfigurator from \"./Material/GLStateConfigurator\";\nimport MaterialMacroRegistory from \"./Material/MacroRegistory\";\nimport MaterialMaterial from \"./Material/Material\";\nimport MaterialMaterialFactory from \"./Material/MaterialFactory\";\nimport MaterialPass from \"./Material/Pass\";\nimport MaterialPassProgram from \"./Material/PassProgram\";\nimport MaterialShaderMixer from \"./Material/ShaderMixer\";\nimport MaterialTechnique from \"./Material/Technique\";\nimport MaterialTextureReference from \"./Material/TextureReference\";\nimport MaterialUniformResolverContainer from \"./Material/UniformResolverContainer\";\nimport MaterialUniformResolverRegistry from \"./Material/UniformResolverRegistry\";\nimport MaterialUniformsMatricesRegister from \"./Material/Uniforms/MatricesRegister\";\nimport MaterialUniformsMiscRegister from \"./Material/Uniforms/MiscRegister\";\nimport MaterialUniformsUserValueRegister from \"./Material/Uniforms/UserValueRegister\";\nimport nodes from \"./nodes\";\nimport ResourceBuffer from \"./Resource/Buffer\";\nimport ResourceFrameBuffer from \"./Resource/FrameBuffer\";\nimport ResourceGLExtRequestor from \"./Resource/GLExtRequestor\";\nimport ResourceGLRelatedRegistryBase from \"./Resource/GLRelatedRegistryBase\";\nimport ResourceGLResource from \"./Resource/GLResource\";\nimport ResourceGLSLPrecisionChecker from \"./Resource/GLSLPrecisionChecker\";\nimport ResourceGLUtility from \"./Resource/GLUtility\";\nimport ResourceManagedProgram from \"./Resource/ManagedProgram\";\nimport ResourceManagedShader from \"./Resource/ManagedShader\";\nimport ResourceProgram from \"./Resource/Program\";\nimport ResourceRenderBuffer from \"./Resource/RenderBuffer\";\nimport ResourceRenderingTargetCanvasRegionRenderingTarget from \"./Resource/RenderingTarget/CanvasRegionRenderingTarget\";\nimport ResourceRenderingTargetCanvasRenderingTarget from \"./Resource/RenderingTarget/CanvasRenderingTarget\";\nimport ResourceRenderingTargetOffscreenRenderingTarget from \"./Resource/RenderingTarget/OffscreenRenderingTarget\";\nimport ResourceRenderingTargetRenderingBufferResourceRegistry from \"./Resource/RenderingTarget/RenderingBufferResourceRegistry\";\nimport ResourceRenderingTargetRenderingTargetRegistry from \"./Resource/RenderingTarget/RenderingTargetRegistry\";\nimport ResourceResourceCache from \"./Resource/ResourceCache\";\nimport ResourceShader from \"./Resource/Shader\";\nimport ResourceTexture from \"./Resource/Texture\";\nimport ResourceTexture2D from \"./Resource/Texture2D\";\nimport ResourceUniformProxy from \"./Resource/UniformProxy\";\nimport ResourceViewport from \"./Resource/Viewport\";\nimport SceneRendererDrawPriorty from \"./SceneRenderer/DrawPriorty\";\nimport SceneRendererRenderQueue from \"./SceneRenderer/RenderQueue\";\nimport SceneRendererRenderQueueRegistry from \"./SceneRenderer/RenderQueueRegistry\";\nimport SortCommentRemover from \"./Sort/CommentRemover\";\nimport SortImportResolver from \"./Sort/ImportResolver\";\nimport SortNameSemanticsPair from \"./Sort/NameSemanticsPair\";\nimport SortParser from \"./Sort/Parser\";\nimport SortPreferences from \"./Sort/Preferences\";\nimport SortSortTransformUtility from \"./Sort/SortTransformUtility\";\nimport SortTypeToConstant from \"./Sort/TypeToConstant\";\nimport UtilHashCalculator from \"./Util/HashCalculator\";\nimport UtilMeshIndexCalculator from \"./Util/MeshIndexCalculator\";\nimport UtilTextureSizeCalculator from \"./Util/TextureSizeCalculator\";\nimport UtilTimer from \"./Util/Timer\";\n\nexport const __VERSION__ = \"0.30.0beta5\";\nexport const __NAME__ = \"grimoirejs-fundamental\";\n\nimport __MAIN__ from \"./main\";\n\nlet __EXPOSE__ = {\n  \"Asset\": {\n    \"AssetLoader\": AssetAssetLoader,\n    \"CacheResolver\": AssetCacheResolver,\n    \"ExternalResourceResolver\": AssetExternalResourceResolver,\n    \"ImageResolver\": AssetImageResolver,\n    \"NameResolver\": AssetNameResolver,\n    \"TextFileResolver\": AssetTextFileResolver,\n    \"VideoResolver\": AssetVideoResolver\n  },\n  \"Components\": {\n    \"AssetLoadingManagerComponent\": ComponentsAssetLoadingManagerComponent,\n    \"BasicComponent\": ComponentsBasicComponent,\n    \"CameraComponent\": ComponentsCameraComponent,\n    \"CanvasInitializerComponent\": ComponentsCanvasInitializerComponent,\n    \"FullscreenComponent\": ComponentsFullscreenComponent,\n    \"GeometryComponent\": ComponentsGeometryComponent,\n    \"GeometryRegistoryComponent\": ComponentsGeometryRegistoryComponent,\n    \"LoopManagerComponent\": ComponentsLoopManagerComponent,\n    \"MaterialComponent\": ComponentsMaterialComponent,\n    \"MaterialContainerBase\": ComponentsMaterialContainerBase,\n    \"MaterialContainerComponent\": ComponentsMaterialContainerComponent,\n    \"MaterialImporterComponent\": ComponentsMaterialImporterComponent,\n    \"MeshRendererComponent\": ComponentsMeshRendererComponent,\n    \"MouseCameraControlComponent\": ComponentsMouseCameraControlComponent,\n    \"RenderComponentBase\": ComponentsRenderComponentBase,\n    \"RendererComponent\": ComponentsRendererComponent,\n    \"RendererManagerComponent\": ComponentsRendererManagerComponent,\n    \"RenderingTargetComponent\": ComponentsRenderingTargetComponent,\n    \"RenderStage\": {\n      \"RenderHitareaComponent\": ComponentsRenderStageRenderHitareaComponent,\n      \"RenderQuadComponent\": ComponentsRenderStageRenderQuadComponent,\n      \"RenderSceneComponent\": ComponentsRenderStageRenderSceneComponent,\n      \"RenderStageBase\": ComponentsRenderStageRenderStageBase,\n      \"SingleBufferRenderStageBase\": ComponentsRenderStageSingleBufferRenderStageBase\n    },\n    \"SceneComponent\": ComponentsSceneComponent,\n    \"Texture\": {\n      \"ColorBufferTextureUpdator\": ComponentsTextureColorBufferTextureUpdator,\n      \"ConstantSizeResourceResizer\": ComponentsTextureConstantSizeResourceResizer,\n      \"ImageTextureUpdator\": ComponentsTextureImageTextureUpdator,\n      \"RenderBufferUpdator\": ComponentsTextureRenderBufferUpdator,\n      \"ResizableResourceUpdator\": ComponentsTextureResizableResourceUpdator,\n      \"ResourceResizerComponentBase\": ComponentsTextureResourceResizerComponentBase,\n      \"TextureContainer\": ComponentsTextureTextureContainer,\n      \"TextureUpdatorComponentBase\": ComponentsTextureTextureUpdatorComponentBase,\n      \"VideoTextureUpdator\": ComponentsTextureVideoTextureUpdator,\n      \"ViewportSizeResourceResizer\": ComponentsTextureViewportSizeResourceResizer\n    },\n    \"TransformComponent\": ComponentsTransformComponent\n  },\n  \"Converters\": {\n    \"CanvasSizeConverter\": ConvertersCanvasSizeConverter,\n    \"GeometryConverter\": ConvertersGeometryConverter,\n    \"MaterialConverter\": ConvertersMaterialConverter,\n    \"NodeConverter\": ConvertersNodeConverter,\n    \"PositionConverter\": ConvertersPositionConverter,\n    \"RenderingTargetConverter\": ConvertersRenderingTargetConverter,\n    \"TextureConverter\": ConvertersTextureConverter,\n    \"ViewportConverter\": ConvertersViewportConverter\n  },\n  \"Geometry\": {\n    \"DefaultPrimitives\": GeometryDefaultPrimitives,\n    \"Geometry\": GeometryGeometry,\n    \"GeometryFactory\": GeometryGeometryFactory,\n    \"GeometryUtility\": GeometryGeometryUtility,\n    \"MorphGeometry\": GeometryMorphGeometry\n  },\n  \"Material\": {\n    \"Defaults\": {\n      \"DefaultDynamicStateResolvers\": MaterialDefaultsDefaultDynamicStateResolvers,\n      \"DefaultMacro\": MaterialDefaultsDefaultMacro,\n      \"DefaultMaterial\": MaterialDefaultsDefaultMaterial,\n      \"DefaultStaticImport\": MaterialDefaultsDefaultStaticImport\n    },\n    \"GLStateConfigurator\": MaterialGLStateConfigurator,\n    \"MacroRegistory\": MaterialMacroRegistory,\n    \"Material\": MaterialMaterial,\n    \"MaterialFactory\": MaterialMaterialFactory,\n    \"Pass\": MaterialPass,\n    \"PassProgram\": MaterialPassProgram,\n    \"ShaderMixer\": MaterialShaderMixer,\n    \"Technique\": MaterialTechnique,\n    \"TextureReference\": MaterialTextureReference,\n    \"UniformResolverContainer\": MaterialUniformResolverContainer,\n    \"UniformResolverRegistry\": MaterialUniformResolverRegistry,\n    \"Uniforms\": {\n      \"MatricesRegister\": MaterialUniformsMatricesRegister,\n      \"MiscRegister\": MaterialUniformsMiscRegister,\n      \"UserValueRegister\": MaterialUniformsUserValueRegister\n    }\n  },\n  \"nodes\": nodes,\n  \"Resource\": {\n    \"Buffer\": ResourceBuffer,\n    \"FrameBuffer\": ResourceFrameBuffer,\n    \"GLExtRequestor\": ResourceGLExtRequestor,\n    \"GLRelatedRegistryBase\": ResourceGLRelatedRegistryBase,\n    \"GLResource\": ResourceGLResource,\n    \"GLSLPrecisionChecker\": ResourceGLSLPrecisionChecker,\n    \"GLUtility\": ResourceGLUtility,\n    \"ManagedProgram\": ResourceManagedProgram,\n    \"ManagedShader\": ResourceManagedShader,\n    \"Program\": ResourceProgram,\n    \"RenderBuffer\": ResourceRenderBuffer,\n    \"RenderingTarget\": {\n      \"CanvasRegionRenderingTarget\": ResourceRenderingTargetCanvasRegionRenderingTarget,\n      \"CanvasRenderingTarget\": ResourceRenderingTargetCanvasRenderingTarget,\n      \"OffscreenRenderingTarget\": ResourceRenderingTargetOffscreenRenderingTarget,\n      \"RenderingBufferResourceRegistry\": ResourceRenderingTargetRenderingBufferResourceRegistry,\n      \"RenderingTargetRegistry\": ResourceRenderingTargetRenderingTargetRegistry\n    },\n    \"ResourceCache\": ResourceResourceCache,\n    \"Shader\": ResourceShader,\n    \"Texture\": ResourceTexture,\n    \"Texture2D\": ResourceTexture2D,\n    \"UniformProxy\": ResourceUniformProxy,\n    \"Viewport\": ResourceViewport\n  },\n  \"SceneRenderer\": {\n    \"DrawPriorty\": SceneRendererDrawPriorty,\n    \"RenderQueue\": SceneRendererRenderQueue,\n    \"RenderQueueRegistry\": SceneRendererRenderQueueRegistry\n  },\n  \"Sort\": {\n    \"CommentRemover\": SortCommentRemover,\n    \"ImportResolver\": SortImportResolver,\n    \"NameSemanticsPair\": SortNameSemanticsPair,\n    \"Parser\": SortParser,\n    \"Preferences\": SortPreferences,\n    \"SortTransformUtility\": SortSortTransformUtility,\n    \"TypeToConstant\": SortTypeToConstant\n  },\n  \"Util\": {\n    \"HashCalculator\": UtilHashCalculator,\n    \"MeshIndexCalculator\": UtilMeshIndexCalculator,\n    \"TextureSizeCalculator\": UtilTextureSizeCalculator,\n    \"Timer\": UtilTimer\n  }\n};\n\nimport gr from \"grimoirejs\";\ngr.notifyRegisteringPlugin(__NAME__);\nlet __BASE__ = __MAIN__();\n\nObject.assign(__EXPOSE__, {\n  __VERSION__: __VERSION__,\n  __NAME__: __NAME__\n});\nObject.assign(__BASE__ || {}, __EXPOSE__);\n\n(window as any)[\"GrimoireJS\"].lib.fundamental = __EXPOSE__;\n\nexport default __BASE__;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS.Base.EEObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs/ref/Base/EEObject.js\n// module id = 116\n// module chunks = 0","module.exports = \"<div style=\\\"width:100%;height:100%;position: relative;\\\">\\n    <div style=\\\"width: 55px;height: 55px;border-radius: 100%;border: 5px solid #381794;border-right-color: #FC659D;animation: rotate 1s linear infinite;position: absolute;top: 0;left: 0;right: 0;bottom: 0;margin: auto;\\\"></div>\\n</div>\\n<style type=\\\"text/css\\\">\\n    @keyframes rotate {\\n        from {\\n            transform: rotate(0deg);\\n        }\\n        to {\\n            transform: rotate(360deg);\\n        }\\n    }\\n</style>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/Asset/defaultLoader.html\n// module id = 117\n// module chunks = 0","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS.Interface.GrimoireInterface;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs/ref/Interface/GrimoireInterface.js\n// module id = 118\n// module chunks = 0","module.exports = \"/**\\n * Simplest way of transforming vertices on vertex shader\\n */\\n #ifdef ATTRIBUTE_COLOR_ENABLED\\n varying vec4 vColor;\\n #endif\\n\\n varying vec2 vTexCoord;\\n varying vec3 vPosition;\\n #ifdef ATTRIBUTE_NORMAL_ENABLED\\n varying vec3 vNormal;\\n #endif\\n#ifdef VS\\n  @POSITION\\n  attribute vec3 position;\\n\\n  #ifdef ATTRIBUTE_TEXCOORD_ENABLED\\n  @TEXCOORD\\n  attribute vec2 texCoord;\\n  #endif\\n\\n  #ifdef ATTRIBUTE_NORMAL_ENABLED\\n  @NORMAL\\n  attribute vec3 normal;\\n  #endif\\n\\n  @MODELVIEWPROJECTION\\n  uniform mat4 _matPVM;\\n\\n  @MODEL\\n  uniform mat4 _matM;\\n\\n  #ifdef ATTRIBUTE_COLOR_ENABLED\\n  @COLOR\\n  attribute vec4 attrColor;\\n  #endif\\n\\n  #ifdef ATTRIBUTE_POINT_SIZE_ENABLED\\n  @POINT_SIZE\\n  attribute float pointSize;\\n  #endif\\n\\n  @{default:1.0}\\n  uniform float pointScale;\\n  void main()\\n  {\\n    gl_Position = _matPVM * vec4(position,1.0);\\n    vPosition = (_matM * vec4(position,1.0)).xyz;\\n    #ifdef ATTRIBUTE_NORMAL_ENABLED\\n    vNormal = (_matM * vec4(normal,0.)).xyz;\\n    #endif\\n    #ifdef ATTRIBUTE_TEXCOORD_ENABLED\\n    vTexCoord = texCoord;\\n    #endif\\n    #ifndef ATTRIBUTE_TEXCOORD_ENABLED\\n    vTexCoord = position.xy/2.0 + vec2(0.5);\\n    #endif\\n    #ifdef ATTRIBUTE_COLOR_ENABLED\\n    vColor = attrColor;\\n    #endif\\n    float pSize = 1.0;\\n    #ifdef ATTRIBUTE_POINT_SIZE_ENABLED\\n    pSize *= pointSize;\\n    #endif\\n    gl_PointSize = pointScale * pSize;\\n  }\\n#endif\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/Shaders/basic-vert.glsl\n// module id = 119\n// module chunks = 0","module.exports = \"varying vec2 vTexCoord;\\nvarying vec2 vScreenPos;\\nvarying vec2 vScreenPosWithOffset;\\nvarying vec2 vScreenPosNormalized;\\nvarying vec2 vAspectScale;\\n#ifdef VS\\n  @POSITION\\n  attribute vec3 position;\\n  #ifdef ATTRIBUTE_TEXCOORD_ENABLED\\n  @TEXCOORD\\n  attribute vec2 texCoord;\\n  @VIEWPORT\\n  uniform vec4 viewportRect;\\n  #endif\\n  void main(){\\n    gl_Position = vec4(position,1);\\n    #ifdef ATTRIBUTE_TEXCOORD_ENABLED\\n    vTexCoord = texCoord;\\n    #endif\\n    #ifndef ATTRIBUTE_TEXCOORD_ENABLED\\n    vTexCoord = (position.xy + vec2(1.0)) * vec2(0.5);\\n    #endif\\n    vScreenPosNormalized = (position.xy + vec2(1.0)) * vec2(0.5);\\n    vScreenPos = viewportRect.zw * vScreenPosNormalized;\\n    vScreenPosWithOffset = vScreenPos + viewportRect.xy;\\n  }\\n#endif\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/Shaders/screen-vert.glsl\n// module id = 120\n// module chunks = 0","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS&&window.GrimoireJS.lib.math?window.GrimoireJS.lib.math.Quaternion:undefined;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs-math/ref/Quaternion.js\n// module id = 121\n// module chunks = 0","import Component from \"grimoirejs/ref/Node/Component\";\nimport IAttributeDeclaration from \"grimoirejs/ref/Node/IAttributeDeclaration\";\nexport default class RenderComponentBase extends Component{\n    public static attributes: {[key: string]: IAttributeDeclaration} = {\n\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Components/RenderComponentBase.ts","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS&&window.GrimoireJS.lib.math?window.GrimoireJS.lib.math.Color4:undefined;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs-math/ref/Color4.js\n// module id = 123\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 124\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 125\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 126\n// module chunks = 0","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS.Node.GomlNode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs/ref/Node/GomlNode.js\n// module id = 127\n// module chunks = 0","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS.Node.Attribute;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs/ref/Node/Attribute.js\n// module id = 128\n// module chunks = 0","import Geometry from \"./Geometry\";\nimport MorphParameter from \"./MorphParameter\";\n\n/**\n * Geometries with morphing features\n */\nexport default class MorphGeometry extends Geometry {\n\n    private _morphBaseAttribute: { [semantics: string]: MorphParameter } = {};\n\n    public morphParameters: { [semantics: string]: MorphParameter[] } = {};\n\n    public lastWeights: number[] = null;\n\n    public addMorphAttribute(semantics: string, morphParameters: MorphParameter[]): void {\n        const accessor = this.accessors[semantics];\n        if (!accessor) {\n            throw new Error(\"There was no accessor related to specified accessor\");\n        }\n        const buffer = this.buffers[accessor.bufferIndex];\n        if (!buffer.keepSource) {\n            throw new Error(\"To enable morphing attribute on Geometry, keepOnBuffer flag must be true on attribute vertex value\");\n        }\n        if (this._morphBaseAttribute[semantics]) {\n            throw new Error(\"Already morphing attribute are registered. If you want to replace, remove current morphings at first.\");\n        }\n        if (this.lastWeights === null) {\n            // Initialize weights\n            const initialWeights = [];\n            for (let i = 0; i < morphParameters.length; i++) {\n                initialWeights.push(0);\n            }\n            this.lastWeights = initialWeights;\n        } else if (this.lastWeights.length !== morphParameters.length) {\n            throw new Error(\"morphing attribute should have same length with the morphing attribute previously registered.\");\n        }\n        const baseBuffer = buffer.bufferSource;\n        if (!(baseBuffer instanceof Float32Array)) {\n            throw new Error(\"Morphing is currently only supported for Float32Array\");\n        }\n        const length = baseBuffer.byteLength / baseBuffer.BYTES_PER_ELEMENT;\n        // Copy base source\n        const copiedBaseBuffer = new Float32Array(length);\n        for (let i = 0; i < length; i++) {\n            copiedBaseBuffer[i] = baseBuffer[i];\n        }\n        this._morphBaseAttribute[semantics] = {\n            buffer: copiedBaseBuffer,\n            accessor: this.accessors[semantics],\n        };\n        this.morphParameters[semantics] = morphParameters;\n    }\n\n    public removeMorphAttribute(semantics: string): void{\n        delete this.morphParameters[semantics];\n        delete this._morphBaseAttribute[semantics];\n        if (Object.keys(this.morphParameters).length === 0){\n            this.lastWeights = null;\n        }\n    }\n\n    public setWeight(weights: number[]): void{\n        this.lastWeights = weights;\n        for (const key in this._morphBaseAttribute){\n            this._updateForSemantics(key);\n        }\n    }\n\n    private _updateForSemantics(semantics: string): void{\n        const accessor = this.accessors[semantics];\n        const target = this.buffers[accessor.bufferIndex];\n        const targetBuffer = target.bufferSource;\n        if (!(targetBuffer instanceof Float32Array)){\n            throw new Error(\"buffer source must be Float32Array\");\n        }\n        for (let i = 0; i < targetBuffer.length; i++){\n            targetBuffer[i] = this._calculateWeights(semantics, i);\n        }\n        target.update(targetBuffer);\n    }\n\n    private _calculateWeights(semantics: string, index: number): number{\n        let result = this._morphBaseAttribute[semantics].buffer[index];\n        for (let i = 0 ; i < this.lastWeights.length; i++){\n            result += this.lastWeights[i] * this.morphParameters[semantics][i].buffer[index];\n        }\n        return result;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Geometry/MorphGeometry.ts","module.exports = \"@Technique default{\\n@Pass{\\n  @DynamicState(dynamic-cull)\\n  @BlendFunc(SRC_ALPHA,ONE_MINUS_SRC_ALPHA)\\n  FS_PREC(mediump,float)\\n  @import \\\"basic-vert\\\"\\n  #ifdef FS\\n  @{type:\\\"color\\\",default:\\\"white\\\"}\\n  uniform vec4 color;\\n\\n  @{flag:\\\"USE_TEXTURE\\\"}\\n  uniform sampler2D texture;\\n\\n  uniform float _time;\\n  void main(void)\\n  {\\n    vec4 baseColor = color;\\n    #ifdef ATTRIBUTE_COLOR_ENABLED\\n    baseColor *= vColor;\\n    #endif\\n    #ifdef USE_TEXTURE\\n      gl_FragColor = baseColor * texture2D(texture,vTexCoord);\\n    #endif\\n    #ifndef USE_TEXTURE\\n      gl_FragColor = baseColor;\\n    #endif\\n  }\\n  #endif\\n}\\n}\\n\\n@Technique hitarea{\\n  @Disable(BLEND)\\n  @Pass{\\n    FS_PREC(mediump,float)\\n    @import \\\"basic-vert\\\"\\n    #ifdef FS\\n      @MESH_INDEX\\n      uniform vec4 meshIndex;\\n      void main(){\\n        gl_FragColor = meshIndex;\\n      }\\n    #endif\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/Shaders/Unlit.sort\n// module id = 130\n// module chunks = 0","import Matrix from \"grimoirejs-math/ref/Matrix\";\nimport UniformProxy from \"../../Resource/UniformProxy\";\nimport IMaterialArgument from \"../IMaterialArgument\";\nimport IVariableInfo from \"../Schema/IVariableInfo\";\nimport UniformResolverRegistry from \"../UniformResolverRegistry\";\n\nUniformResolverRegistry.add(\"MODELVIEWPROJECTION\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, args.transform.calcPVM(args.camera));\n});\n\nUniformResolverRegistry.add(\"LOCAL\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, args.transform.localTransform);\n});\n\nUniformResolverRegistry.add(\"MODEL\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, args.transform.globalTransform);\n});\n\nUniformResolverRegistry.add(\"MODELVIEW\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, args.camera.ViewMatrix.multiplyWith(args.transform.globalTransform));\n});\n\nUniformResolverRegistry.add(\"VIEW\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, args.camera.ViewMatrix);\n});\n\nUniformResolverRegistry.add(\"PROJECTION\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, args.camera.ProjectionMatrix);\n});\n\nUniformResolverRegistry.add(\"MODELINVERSE\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, Matrix.inverse(args.transform.globalTransform));\n});\n\nUniformResolverRegistry.add(\"VIEWINVERSE\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  proxy.uniformMatrix(valInfo.name, Matrix.inverse(args.camera.ViewMatrix));\n});\n\nUniformResolverRegistry.add(\"PROJECTIONINVERSE\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, args.camera.InvProjectionMatrix);\n});\n\nUniformResolverRegistry.add(\"MODELVIEWINVERSE\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, Matrix.inverse(args.transform.calcVM(args.camera)));\n});\n\nUniformResolverRegistry.add(\"MODELVIEWPROJECTIONINVERSE\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, Matrix.inverse(args.transform.calcPVM(args.camera)));\n});\n\nUniformResolverRegistry.add(\"MODELINVERSETRANSPOSE\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix(valInfo.name, Matrix.transpose(Matrix.inverse(args.transform.globalTransform)));\n});\n\nUniformResolverRegistry.add(\"MODELVIEWINVERSETRANSPOSE\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  if (!args.transform) {\n    proxy.uniformMatrix3(valInfo.name, Matrix.identity());\n    return;\n  }\n  proxy.uniformMatrix3(valInfo.name, Matrix.transpose(Matrix.inverse(args.transform.calcVM(args.camera))));\n});\n\nexport default null;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Uniforms/MatricesRegister.ts","import Vector2 from \"grimoirejs-math/ref/Vector2\";\nimport Vector4 from \"grimoirejs-math/ref/Vector4\";\nimport ViewportBaseMouseState from \"../../Objects/ViewportBaseMouseState\";\nimport UniformProxy from \"../../Resource/UniformProxy\";\nimport MeshIndexCalculator from \"../../Util/MeshIndexCalculator\";\nimport IMaterialArgument from \"../IMaterialArgument\";\nimport Pass from \"../Pass\";\nimport IVariableInfo from \"../Schema/IVariableInfo\";\nimport UniformResolverRegistry from \"../UniformResolverRegistry\";\n\nUniformResolverRegistry.add(\"VIEWPORT\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  const vp = args.viewport;\n  proxy.uniformVector4(valInfo.name, new Vector4(vp.Left, vp.Top, vp.Width, vp.Height));\n});\n\nUniformResolverRegistry.add(\"VIEWPORT_SIZE\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  const vp = args.viewport;\n  proxy.uniformVector2(valInfo.name, new Vector2(vp.Width, vp.Height));\n});\n\nUniformResolverRegistry.add(\"TIME\", (valInfo: IVariableInfo) => {\n  const unit = valInfo.attributes[\"unit\"] || \"ms\";\n  let divider = 1;\n  switch (unit) {\n    case \"s\":\n      divider = 1000;\n  }\n  return (proxy: UniformProxy, args: IMaterialArgument) => {\n    proxy.uniformFloat(valInfo.name, (Date.now() / divider) % 100000);\n  };\n});\n\nUniformResolverRegistry.add(\"HAS_TEXTURE\", (valInfo: IVariableInfo, pass: Pass) => {\n  const sampler = valInfo.attributes[\"sampler\"];\n  if (!sampler) {\n    throw new Error(\"The variable having HAS_TEXTURE as semantics must have sampler attribute\");\n  }\n  console.warn(\"HAS_TEXTURE is deprecated now. Use flag attribute on sampler2D variables to register macro values\");\n  return (proxy: UniformProxy, args: IMaterialArgument) => {\n    const hasTexture = !!pass.arguments[sampler] && !!pass.arguments[sampler].get();\n    proxy.uniformBool(valInfo.name, hasTexture);\n  };\n});\n\nUniformResolverRegistry.add(\"CAMERA_POSITION\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  proxy.uniformVector3(valInfo.name, args.camera.transform.globalPosition);\n});\n\nUniformResolverRegistry.add(\"CAMERA_DIRECTION\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  proxy.uniformVector3(valInfo.name, args.camera.transform.forward);\n});\n\nUniformResolverRegistry.add(\"MESH_INDEX\", (valInfo: IVariableInfo) => (proxy: UniformProxy, args: IMaterialArgument) => {\n  const index = args.renderable.index;\n  proxy.uniformVector4(valInfo.name, MeshIndexCalculator.fromIndex(index));\n});\n\nUniformResolverRegistry.add(\"MOUSE_POSITION\", (valInfo: IVariableInfo) => {\n  const coords = valInfo.attributes[\"coord\"] || \"viewportNormalized\";\n  return (proxy: UniformProxy, args: IMaterialArgument) => {\n    const mouseDesc = args.rendererDescription[\"mouse\"] as ViewportBaseMouseState;\n    if (mouseDesc) {\n      proxy.uniformVector2(valInfo.name, new Vector2(mouseDesc.coords[coords][0], mouseDesc.coords[coords][1]));\n    } else {\n      proxy.uniformVector2(valInfo.name, Vector2.Zero);\n    }\n  };\n});\n\nUniformResolverRegistry.add(\"MOUSE_STATE\", (valInfo: IVariableInfo) => {\n  return (proxy: UniformProxy, args: IMaterialArgument) => {\n    const mouseDesc = args.rendererDescription[\"mouse\"] as ViewportBaseMouseState;\n    if (mouseDesc) {\n      proxy.uniformVector2(valInfo.name, new Vector2(mouseDesc.left ? 1 : 0, mouseDesc.right ? 1 : 0));\n    } else {\n      proxy.uniformVector2(valInfo.name, Vector2.Zero);\n    }\n  };\n});\n\nexport default null;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Uniforms/MiscRegister.ts","Object.defineProperty(exports,\"__esModule\",{value: true});\nexports.default=window.GrimoireJS&&window.GrimoireJS.lib.math?window.GrimoireJS.lib.math.Vector2:undefined;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grimoirejs-math/ref/Vector2.js\n// module id = 133\n// module chunks = 0","import Texture2D from \"../../Resource/Texture2D\";\nimport UniformProxy from \"../../Resource/UniformProxy\";\nimport IMaterialArgument from \"../IMaterialArgument\";\nimport Material from \"../Material\";\nimport Pass from \"../Pass\";\nimport PassProgram from \"../PassProgram\";\nimport IVariableInfo from \"../Schema/IVariableInfo\";\nimport Technique from \"../Technique\";\nimport TextureReference from \"../TextureReference\";\nimport UniformResolverRegistry from \"../UniformResolverRegistry\";\nconst gl = WebGLRenderingContext;\nconst _userValueRegisterers = {\n  array: {},\n  single: {},\n};\n\nUniformResolverRegistry.add(\"USER_VALUE\", (valInfo: IVariableInfo, pass: Pass, technique: Technique, material: Material) => {\n  let register;\n  if (valInfo.count) {\n    register = _userValueRegisterers.array[valInfo.type];\n    if (!register) {\n      throw new Error(`No user_value registerer was registered for ${valInfo.type}[]`);\n    }\n  } else {\n    register = _userValueRegisterers.single[valInfo.type];\n    if (!register) {\n      throw new Error(`No user_value registerer was registered for ${valInfo.type}`);\n    }\n  }\n  return register(valInfo, pass);\n});\n\nfunction basicRegister(type: number, isArray: boolean, converter: string, defaultValue: any, register: (proxy: UniformProxy, name: string, value, matArg: IMaterialArgument) => void, update?: (valInfo: IVariableInfo, passProgram: PassProgram, n: any, o: any) => void) {\n  let registerTarget;\n  if (isArray) {\n    registerTarget = _userValueRegisterers.array;\n  } else {\n    registerTarget = _userValueRegisterers.single;\n  }\n  registerTarget[type] = function(valInfo: IVariableInfo, pass: Pass) {\n    pass.addArgument(valInfo.name, {\n      converter,\n      default: valInfo.attributes[\"default\"] ? valInfo.attributes[\"default\"] : defaultValue,\n    });\n    const updator = update ? (p, n, o) => {\n      update(valInfo, p, n, o);\n    } : undefined;\n    return {\n      register: (proxy: UniformProxy, args: IMaterialArgument) => {\n        register(proxy, valInfo.name, pass.arguments[valInfo.name], args);\n      },\n      update: updator,\n    };\n  };\n}\n\nbasicRegister(gl.FLOAT, false, \"Number\", 0, (proxy, name, value) => proxy.uniformFloat(name, value));\nbasicRegister(gl.INT, false, \"Number\", 0, (proxy, name, value) => proxy.uniformInt(name, value));\nbasicRegister(gl.BOOL, false, \"Boolean\", false, (proxy, name, value) => proxy.uniformBool(name, value));\nbasicRegister(gl.INT_VEC2, false, \"Vector2\", [0, 0], (proxy, name, value) => proxy.uniformVector2(name, value));\nbasicRegister(gl.INT_VEC3, false, \"Vector3\", [0, 0, 0], (proxy, name, value) => proxy.uniformVector3(name, value));\nbasicRegister(gl.INT_VEC4, false, \"Vector4\", [0, 0, 0, 0], (proxy, name, value) => proxy.uniformVector4(name, value));\nbasicRegister(gl.FLOAT_VEC2, false, \"Vector2\", [0, 0], (proxy, name, value) => proxy.uniformVector2(name, value));\nbasicRegister(gl.FLOAT_MAT4, true, \"Object\", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], (proxy, name, value) => proxy.uniformMatrixArray(name, value));\nbasicRegister(gl.SAMPLER_2D, false, \"Texture\", null, (proxy, name, value: TextureReference, args) => {\n  let texture: Texture2D;\n  if (value) {\n    const fetched = value.get();\n    if (fetched.valid) {\n      texture = fetched;\n    }\n  }\n  if (!texture) {\n    texture = Texture2D.defaultTextures.get(proxy.program.gl);\n  }\n  proxy.uniformTexture2D(name, texture);\n}, (v, p, n, o) => {\n  if (v.attributes[\"flag\"] === void 0) return;\n  let used = false;\n  if (n) {\n    if (n.isFunctionalProxy) {\n      used = true;\n    } else {\n      const fetched = n.get({});\n      if (fetched.valid) {\n        used = true;\n      } else {\n        fetched.validPromise.then(() => {\n          p.setMacro(v.attributes[\"flag\"], true);\n          used = true;\n        });\n      }\n    }\n  }\n  p.setMacro(v.attributes[\"flag\"], used);\n});\n\n// vec3 or vec4 should consider the arguments are color or vector.\n\n_userValueRegisterers.single[gl.FLOAT_VEC3] = function(valInfo: IVariableInfo, pass: Pass) {\n  const isColor = valInfo.attributes[\"type\"] === \"color\";\n  const attrDefault = valInfo.attributes[\"default\"];\n  const defaultValue = attrDefault ? attrDefault : (isColor ? [1, 1, 1] : [0, 0, 0]);\n  pass.addArgument(valInfo.name, {\n    converter: isColor ? \"Color3\" : \"Vector3\",\n    default: defaultValue,\n  });\n  return {\n    register: isColor ? (proxy: UniformProxy, args: IMaterialArgument) => {\n      proxy.uniformColor3(valInfo.name, pass.arguments[valInfo.name]);\n    } : (proxy: UniformProxy, args: IMaterialArgument) => {\n      proxy.uniformVector3(valInfo.name, pass.arguments[valInfo.name]);\n    },\n  };\n};\n\n_userValueRegisterers.single[gl.FLOAT_VEC4] = function(valInfo: IVariableInfo, pass: Pass) {\n  const isColor = valInfo.attributes[\"type\"] === \"color\";\n  const attrDefault = valInfo.attributes[\"default\"];\n  const defaultValue = attrDefault ? attrDefault : (isColor ? [1, 1, 1, 1] : [0, 0, 0, 0]);\n  pass.addArgument(valInfo.name, {\n    converter: isColor ? \"Color4\" : \"Vector4\",\n    default: defaultValue,\n  });\n  return {\n    register: isColor ? (proxy: UniformProxy, args: IMaterialArgument) => {\n      proxy.uniformColor4(valInfo.name, pass.arguments[valInfo.name]);\n    } : (proxy: UniformProxy, args: IMaterialArgument) => {\n      proxy.uniformVector4(valInfo.name, pass.arguments[valInfo.name]);\n    },\n  };\n};\nexport default null;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Material/Uniforms/UserValueRegister.ts","export default {\n  /**\n   * GOMLファイルのルートノード\n   * ツリーに唯一一つ必要なコンポーネントなどをつけておくためのノード。\n   * 特に、`<canvas>`の初期化やループの管理など、最初の初期化時のパラメーターを受け取るためのコンポーネントとともに、\n   * `<canvas>`の設定(`width`や`height`)またはフルスクリーンなどのコンポーネントを含む。\n   */\n  goml: {\n    components: [\"CanvasInitializer\", \"LoopManager\", \"AssetLoadingManager\", \"GeometryRegistory\", \"RendererManager\", \"Fullscreen\"],\n  },\n  /**\n   * ある3D空間上のモデルの配置やカメラの設定などの場面の設定を含むためのノード\n   * カメラや、ライト、メッシュなど空間に配置するためのノードです。\n   * 全ての場面に存在する座標を持ちうるノード(`TransformComponent`を含むノード)は必ずこのノードの子ノードのとして存在する必要があります。\n   */\n  scene: {\n    components: [\"Scene\"],\n  },\n  /**\n   * 3D空間上の物体を意味するノード\n   * メッシュやカメラなどのベースとなるノードです。このノードの子要素には親要素の変型量(`position`や`rotation`)などが伝搬します。\n   * 詳しくは`TransformComponent`を参照すると良いでしょう。\n   */\n  object: {\n    components: [\"Transform\"],\n  },\n  /**\n   * 3D空間を撮影するためのカメラのノード\n   * 3D空間を撮影するためのカメラを意味するノードです。シーンをレンダリングするには最低一つのカメラがシーンに属していなければなりません。\n   */\n  camera: {\n    components: [\"Camera\"],\n    default: {\n      position: [0, 0, 10],\n    },\n    super: \"object\",\n  },\n  /**\n   * 3D空間上のモデルなど、 **映るもの** を表すためのノード\n   * 3D空間上に存在する映るものを意味するノードです。シーンに何かを写すには最低一つのメッシュがシーンに属していなければなりません。\n   * メッシュは、マテリアル(材質)とジオメトリ(形状)からなります。この2つの指定を変えることで、様々な表現が3D空間上で可能になります。\n   */\n  mesh: {\n    components: [\"MaterialContainer\", \"MeshRenderer\"],\n    super: \"object\",\n  },\n  /**\n   * キャンバスの描画手法を指定するためのノード\n   * キャンバス上の領域をどのように描画するかを示すためのノードです。gomlの読み込み時に一つも存在しない場合は、自動的にgoml直下に生成されます。\n   * 1つ以上のレンダラーを含むことで、キャンバスの複数の領域をレンダリングしたりすることができるようになります。\n   * また、この子要素に指定する`<render-XXX>`ノードなどによって、どのようにその領域を描画するかが決定されます。\n   * 通常、`<renderer>`の子ノードに何も存在しない場合、自動的に`<render-scene>`タグが生成されます。\n   */\n  renderer: {\n    components: [\"Renderer\"],\n  },\n  /**\n   * 新しい形状を生成するためのノード\n   * 単純な変形(`scale`、`position`、`rotation`だけで表せない)、例えば円の分割数などを指定したい別の形状を明示的に生成するためのノードです。\n   */\n  geometry: {\n    components: [\"Geometry\"],\n  },\n  /**\n   * テクスチャを明示的に読み込むためのノード\n   * テクスチャを読み込むためのノードです。通常、テクスチャはurlをマテリアルに指定するなどして読み込まれますが、\n   * サンプラの指定などをしたい場合、このタグで明示的に読み込むことにより読み込むことができます。\n   */\n  texture: {\n    components: [\"Texture\"],\n  },\n  /**\n   * マテリアルを明示的に読み込むためのノード\n   * マテリアルを生成するためのノードです。メッシュからこのノードを参照して利用することにより、複数のメッシュで共通のマテリアルのインスタンスを参照させることができます。\n   * これは、同時にマテリアルの値が編集できるだけでなく、パフォーマンス的にも大きな利点をもたらします。\n   */\n  material: {\n    components: [\"Material\"],\n  },\n  /**\n   * 新しいマテリアルを外部から読み込むためのノード\n   * Grimoire.jsのマテリアルファイル(*.sort)から新しい種類のマテリアルを読み込むためのノードです。\n   */\n  \"import-material\": {\n    components: [\"MaterialImporter\"],\n  },\n  /**\n   * カラーバッファ用のテクスチャを生成するためのノード\n   * `<renderer>`ノードの直下に含まれうるノードの一つです。\n   * このノードによってレンダリングに用いるカラーバッファを生成することができます。\n   * カラーバッファはオフスクリーンレンダリングなどへの利用など様々な面で利用することができます。\n   */\n  \"texture-buffer\": {\n    components: [\"TextureBuffer\"],\n  },\n  /**\n   * 深度バッファ/ステンシルバッファ用の`renderbuffer`を生成するためのノード\n   * `<renderer>`ノードの直下に含まれうるノードの一つです。\n   * このノードによってレンダリングに用いる深度バッファやステンシルバッファを生成することができます。\n   */\n  \"render-buffer\": {\n    components: [\"RenderBuffer\"],\n  },\n  /**\n   *\n   * シーンを描画するレンダリング手順を表すためのノード\n   * `<renderer>`ノードの直下に含まれうるノードの一つです。\n   * このノードは`out`に指定されたテクスチャ(デフォルトではキャンバス自身)に対して、シーンの内容を描画します。\n   */\n  \"render-scene\": {\n    components: [\"RenderScene\", \"RenderHitArea\"],\n    default: {\n      material: null,\n    },\n  },\n  /**\n   * 四角形単体を特定のマテリアルで描画するためのノード\n   * `<renderer>`ノードの直下に含まれうるノードの一つです。\n   * このノードは`out`に指定されたテクスチャ(デフォルトではキャンバス自身)に対して、単純な四角形(`quad`)を指定されたマテリアルで描画します。\n   */\n  \"render-quad\": {\n    components: [\"MaterialContainer\", \"RenderQuad\"],\n    default: {\n      material: null,\n    },\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes.ts","import RenderHitArea from \"./Components/RenderStage/RenderHitareaComponent\";\nimport NodeConverter from \"./Converters/NodeConverter\";\nimport PositionConverter from \"./Converters/PositionConverter\";\nimport DefaultPrimitives from \"./Geometry/DefaultPrimitives\";\nimport DefaultMaterial from \"./Material/Defaults/DefaultMaterial\";\nimport GLExtRequestor from \"./Resource/GLExtRequestor\";\n\nimport GrimoireInterface from \"grimoirejs\";\nimport AssetLoadingManagerComponent from \"./Components/AssetLoadingManagerComponent\";\nimport BasicComponent from \"./Components/BasicComponent\";\nimport CameraComponent from \"./Components/CameraComponent\";\nimport CanvasInitializerComponent from \"./Components/CanvasInitializerComponent\";\nimport FullscreenComponent from \"./Components/FullscreenComponent\";\nimport GeometryComponent from \"./Components/GeometryComponent\";\nimport GeometryRegistoryComponent from \"./Components/GeometryRegistoryComponent\";\nimport LoopManagerComponent from \"./Components/LoopManagerComponent\";\nimport MaterialComponent from \"./Components/MaterialComponent\";\nimport MaterialContainerComponent from \"./Components/MaterialContainerComponent\";\nimport MaterialImporterComponent from \"./Components/MaterialImporterComponent\";\nimport MeshRendererComponent from \"./Components/MeshRendererComponent\";\nimport MouseCameraControlComponent from \"./Components/MouseCameraControlComponent\";\nimport RendererComponent from \"./Components/RendererComponent\";\nimport RendererManagerComponent from \"./Components/RendererManagerComponent\";\nimport RenderingTargetComponent from \"./Components/RenderingTargetComponent\";\nimport RenderQuadComponent from \"./Components/RenderStage/RenderQuadComponent\";\nimport RenderSceneComponent from \"./Components/RenderStage/RenderSceneComponent\";\nimport SceneComponent from \"./Components/SceneComponent\";\nimport ColorBufferTextureUpdator from \"./Components/Texture/ColorBufferTextureUpdator\";\nimport ConstantSizeResourceResizer from \"./Components/Texture/ConstantSizeResourceResizer\";\nimport ImageTextureUpdator from \"./Components/Texture/ImageTextureUpdator\";\nimport RenderBufferUpdator from \"./Components/Texture/RenderBufferUpdator\";\nimport TextureContainer from \"./Components/Texture/TextureContainer\";\nimport VideoTextureUpdator from \"./Components/Texture/VideoTextureUpdator\";\nimport ViewportSizeResourceResizer from \"./Components/Texture/ViewportSizeResourceResizer\";\nimport TransformComponent from \"./Components/TransformComponent\";\nimport CanvasSizeConverter from \"./Converters/CanvasSizeConverter\";\nimport GeometryConverter from \"./Converters/GeometryConverter\";\nimport MaterialConverter from \"./Converters/MaterialConverter\";\nimport RenderingTargetConverter from \"./Converters/RenderingTargetConverter\";\nimport TextureConverter from \"./Converters/TextureConverter\";\nimport ViewportConverter from \"./Converters/ViewportConverter\";\n\nexport default () => {\n    GrimoireInterface.register(async() => {\n        GrimoireInterface.registerComponent(\"AssetLoadingManager\", AssetLoadingManagerComponent);\n        GrimoireInterface.registerComponent(\"Camera\", CameraComponent);\n        GrimoireInterface.registerComponent(\"CanvasInitializer\", CanvasInitializerComponent);\n        GrimoireInterface.registerComponent(\"Fullscreen\", FullscreenComponent);\n        GrimoireInterface.registerComponent(\"Geometry\", GeometryComponent);\n        GrimoireInterface.registerComponent(\"GeometryRegistory\", GeometryRegistoryComponent);\n        GrimoireInterface.registerComponent(\"LoopManager\", LoopManagerComponent);\n        GrimoireInterface.registerComponent(\"Material\", MaterialComponent);\n        GrimoireInterface.registerComponent(\"MaterialContainer\", MaterialContainerComponent);\n        GrimoireInterface.registerComponent(\"MaterialImporter\", MaterialImporterComponent);\n        GrimoireInterface.registerComponent(\"MeshRenderer\", MeshRendererComponent);\n        GrimoireInterface.registerComponent(\"MouseCameraControl\", MouseCameraControlComponent);\n        GrimoireInterface.registerComponent(\"RenderBufferUpdator\", RenderBufferUpdator);\n        GrimoireInterface.registerComponent(\"Renderer\", RendererComponent);\n        GrimoireInterface.registerComponent(\"RendererManager\", RendererManagerComponent);\n        GrimoireInterface.registerComponent(\"RenderQuad\", RenderQuadComponent);\n        GrimoireInterface.registerComponent(\"RenderScene\", RenderSceneComponent);\n        GrimoireInterface.registerComponent(\"Scene\", SceneComponent);\n        GrimoireInterface.registerComponent(\"ColorBufferTextureUpdator\", ColorBufferTextureUpdator);\n        GrimoireInterface.registerComponent(\"TextureContainer\", TextureContainer);\n        GrimoireInterface.registerComponent(\"Transform\", TransformComponent);\n        GrimoireInterface.registerComponent(\"RenderHitArea\", RenderHitArea);\n        GrimoireInterface.registerComponent(\"ImageTextureUpdator\", ImageTextureUpdator);\n        GrimoireInterface.registerComponent(\"VideoTextureUpdator\", VideoTextureUpdator);\n        GrimoireInterface.registerComponent(\"ViewportSizeResourceResizer\", ViewportSizeResourceResizer);\n        GrimoireInterface.registerComponent(\"ConstantSizeResourceResizer\", ConstantSizeResourceResizer);\n        GrimoireInterface.registerComponent(\"RenderingTarget\", RenderingTargetComponent);\n        GrimoireInterface.registerComponent(\"BasicComponent\", BasicComponent);\n\n        GrimoireInterface.registerConverter(\"CanvasSize\", CanvasSizeConverter);\n        GrimoireInterface.registerConverter(\"Geometry\", GeometryConverter);\n        GrimoireInterface.registerConverter(\"Material\", MaterialConverter);\n        GrimoireInterface.registerConverter(\"Texture\", TextureConverter);\n        GrimoireInterface.registerConverter(\"Texture2D\", TextureConverter);\n        GrimoireInterface.registerConverter(\"Viewport\", ViewportConverter);\n        GrimoireInterface.registerConverter(\"Node\", NodeConverter);\n        GrimoireInterface.registerConverter(PositionConverter);\n        GrimoireInterface.registerConverter(\"RenderingTarget\", RenderingTargetConverter);\n\n        GrimoireInterface.registerNode(\"goml\", [\"CanvasInitializer\", \"LoopManager\", \"AssetLoadingManager\", \"GeometryRegistory\", \"RendererManager\", \"Fullscreen\"]);\n        GrimoireInterface.registerNode(\"scene\", [\"Scene\"]);\n        GrimoireInterface.registerNode(\"object\", [\"Transform\"]);\n        GrimoireInterface.registerNode(\"camera\", [\"Camera\"], { position: \"0,0,10\" }, \"object\");\n        GrimoireInterface.registerNode(\"mesh\", [\"MaterialContainer\", \"MeshRenderer\"], {}, \"object\");\n        GrimoireInterface.registerNode(\"renderer\", [\"Renderer\"]);\n        GrimoireInterface.registerNode(\"geometry\", [\"Geometry\"]);\n        GrimoireInterface.registerNode(\"texture\", [\"TextureContainer\"]);\n        GrimoireInterface.registerNode(\"image-texture\", [\"ImageTextureUpdator\"], {}, \"texture\");\n        GrimoireInterface.registerNode(\"video-texture\", [\"VideoTextureUpdator\"], {}, \"texture\");\n        GrimoireInterface.registerNode(\"material\", [\"Material\"]);\n        GrimoireInterface.registerNode(\"import-material\", [\"MaterialImporter\"]);\n        GrimoireInterface.registerNode(\"color-buffer\", [\"ColorBufferTextureUpdator\"], {\n            resizerType: \"ViewportSize\",\n        }, \"texture\");\n        GrimoireInterface.registerNode(\"render-buffer\", [\"RenderBufferUpdator\"], {\n            resizerType: \"ViewportSize\",\n        });\n        GrimoireInterface.registerNode(\"render-scene\", [\"RenderScene\", \"RenderHitArea\"], {\n            material: null,\n        });\n        GrimoireInterface.registerNode(\"render-quad\", [\"MaterialContainer\", \"RenderQuad\"], {\n            material: null,\n        });\n        GrimoireInterface.registerNode(\"rendering-target\", [\"RenderingTarget\"]);\n        DefaultPrimitives.register();\n        DefaultMaterial.register();\n        GLExtRequestor.request(\"OES_texture_float\");\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":""}